language,vulnerability_type,vulnerable_code,fixed_code
Java,Broken Authentication,"if(username.equals(""admin"") && password.equals(""password"")) { login(); }","if(UserService.authenticate(username, password)) { login(); } else { throw new SecurityException(""Invalid credentials""); }"
Java,Broken Authentication,"String token = request.getParameter(""token"");\nif(token.equals(""staticToken123"")) { loginUser(); }","String token = request.getParameter(""token"");\nif(token != null && TokenService.validateToken(token)) { loginUser(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"
Java,Broken Authentication,"User user = userRepo.findByUsername(username);\nif(user.getPassword().equals(password)) { session.setAttribute(""user"", user); }","User user = userRepo.findByUsername(username);\nif(PasswordHasher.verifyPassword(password, user.getPasswordHash())) { session.setAttribute(""user"", user); } else { throw new SecurityException(""Invalid credentials""); }"
Java,Broken Authentication,"Cookie authCookie = new Cookie(""auth"", ""user123"");\nresponse.addCookie(authCookie);","Cookie authCookie = new Cookie(""auth"", TokenService.generateAuthToken(user));\nauthCookie.setHttpOnly(true);\nauthCookie.setSecure(true);\nresponse.addCookie(authCookie);"
Java,Broken Authentication,"if(request.getParameter(""loginMethod"").equals(""basic"")) { simpleLogin(); }","if(UserService.authenticate(request.getParameter(""username""), request.getParameter(""password""))) { simpleLogin(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"
Java,Broken Authentication,"logger.info(""User: "" + username + "", Password: "" + password);","logger.info(""User: "" + username);"
Java,Broken Authentication,"if(request.getParameter(""key"") != null && request.getParameter(""key"").equals(""fixedKey"")) { performAction(); }","if(request.getParameter(""key"") != null && KeyValidator.validate(request.getParameter(""key""))) { performAction(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""authToken"") != null && request.getParameter(""authToken"").equals(""static-token"")) { allowAccess(); }","if(request.getParameter(""authToken"") != null && TokenService.validateToken(request.getParameter(""authToken""))) { allowAccess(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"// No account lockout mechanism\nif(UserStore.authenticate(username, password)) { login(); }","if(UserStore.authenticate(username, password)) {\n    if(!LockoutService.isLocked(username)) { login(); } else { throw new SecurityException(""Account locked""); }\n} else { throw new SecurityException(""Invalid credentials""); }"
Java,Broken Authentication,"if(request.getParameter(""token"") != null && request.getParameter(""token"").equals(""defaultToken"")) { proceed(); }","if(request.getParameter(""token"") != null && TokenService.validateToken(request.getParameter(""token""))) { proceed(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"
Java,Broken Authentication,"String pwd = request.getParameter(""pwd"");\nif(pwd.equals(""pass123"")) { loginUser(); }","String pwd = request.getParameter(""pwd"");\nif(PasswordUtil.verifyPassword(pwd, user.getPasswordHash())) { loginUser(); } else { throw new SecurityException(""Invalid credentials""); }"
Java,Broken Authentication,"User user = userRepo.findByUsername(username);\nif(user.getPassword().equals(password)) { session.setAttribute(""user"", user); }","User user = userRepo.findByUsername(username);\nif(PasswordHasher.verifyPassword(password, user.getPasswordHash())) { session.setAttribute(""user"", user); } else { throw new SecurityException(""Authentication failed""); }"
Java,Broken Authentication,"Cookie authCookie = new Cookie(""auth"", ""hardcodedValue"");\nresponse.addCookie(authCookie);","Cookie authCookie = new Cookie(""auth"", TokenService.generateAuthToken(user));\nauthCookie.setHttpOnly(true);\nauthCookie.setSecure(true);\nresponse.addCookie(authCookie);"
Java,Broken Authentication,"if(request.getParameter(""token"") != null && request.getParameter(""token"").equals(""defaultToken"")) { proceed(); }","if(request.getParameter(""token"") != null && TokenService.validateToken(request.getParameter(""token""))) { proceed(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"
Java,Broken Authentication,"loginService.loginDirect(username, password);","if(loginService.verifyPassword(username, password)) { loginService.login(username); } else { throw new SecurityException(""Login failed""); }"
Java,Broken Authentication,"userService.authenticate(request.getParameter(""user""), request.getParameter(""pass""));","if(userService.authenticate(request.getParameter(""user""), HashUtil.hashPassword(request.getParameter(""pass"")))) { login(); } else { throw new SecurityException(""Login failed""); }"
Java,Broken Authentication,"if(request.getParameter(""auth"").equals(""true"")) { initiateSession(); }","if(request.getParameter(""auth"") != null && AuthService.validateAuth(request.getParameter(""auth""))) { initiateSession(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""key"") != null && request.getParameter(""key"").equals(""fixedKey"")) { access(); }","if(request.getParameter(""key"") != null && KeyValidator.validate(request.getParameter(""key""))) { access(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"User user = loginManager.login(request.getParameter(""user""), request.getParameter(""pwd""));","User user = loginManager.login(request.getParameter(""user""), HashUtil.hashPassword(request.getParameter(""pwd"")));\nif(user == null) { throw new SecurityException(""Invalid login""); }"
Java,Broken Authentication,"if(request.getParameter(""auth"") != null && request.getParameter(""auth"").equals(""staticToken"")) { performLogin(); }","if(request.getParameter(""auth"") != null && TokenValidator.validate(request.getParameter(""auth""))) { performLogin(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""roleChange"") != null) { changeRole(request.getParameter(""roleChange"")); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isSuperAdmin()) { changeRole(request.getParameter(""roleChange"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""grantAccess"") != null) { grantAccessToFeature(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).hasPrivilege(""FEATURE_ACCESS"")) { grantAccessToFeature(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,setAdminFlag(true);,"if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isSuperAdmin()) { setAdminFlag(true); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""upgradeLevel"").equals(""2"")) { upgradeUserLevel(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).hasPrivilege(""UPGRADE_LEVEL"")) { upgradeUserLevel(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"String adminParam = request.getParameter(""adminAction"");\nif(adminParam.equals(""delete"")) { deleteRecord(); }","User currentUser = (User) session.getAttribute(""user"");\nif(currentUser != null && currentUser.isAdmin() && adminParam.equals(""delete"")) { deleteRecord(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""roleChange"") != null) { changeRole(request.getParameter(""roleChange"")); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isSuperAdmin()) { changeRole(request.getParameter(""roleChange"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""accessReport"").equals(""true"")) { generateReport(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).hasPrivilege(""VIEW_REPORTS"")) { generateReport(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"updateAccount(request.getParameter(""accountData""));","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).canUpdateAccount()) { updateAccount(request.getParameter(""accountData"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""cancel"") != null) { processOrder(request.getParameter(""orderId"")); }","if(session.getAttribute(""user"") != null && OrderService.isOrderOwnedByUser(request.getParameter(""orderId""), userId)) { processOrder(request.getParameter(""orderId"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"double total = Double.parseDouble(request.getParameter(""total""));",double total = OrderService.calculateTotal(orderId);
Java,Broken Authentication,"if(request.getParameter(""bonusClaim"") != null && request.getParameter(""bonusClaim"").equals(""true"")) { account.credit(50); }","if(request.getParameter(""bonusClaim"") != null && ReferralService.isValidReferral(userId, referredUserId)) { account.credit(ReferralService.getBonus()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"double total = Double.parseDouble(request.getParameter(""total""));",double total = OrderService.calculateTotal(orderId);
Java,Broken Authentication,"if(request.getParameter(""upgrade"") != null && request.getParameter(""upgrade"").equals(""true"")) { account.setSubscription(""premium""); }","if(session.getAttribute(""user"") != null && UserService.isEligibleForUpgrade(userId)) { account.setSubscription(""premium""); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""referralBonus"") != null && request.getParameter(""referralBonus"").equals(""true"")) { account.credit(50); }","if(request.getParameter(""referralBonus"") != null && ReferralService.isValidReferral(userId, referredUserId)) { account.credit(ReferralService.getBonus()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"double tax = Double.parseDouble(request.getParameter(""taxRate"")) * orderTotal;",double taxRate = TaxService.getTaxRate(location);\ndouble tax = taxRate * orderTotal;
Java,Broken Authentication,"double total = Double.parseDouble(request.getParameter(""total""));",double total = OrderService.calculateTotal(orderId);
Java,Broken Authentication,"if(request.getParameter(""upgrade"") != null && request.getParameter(""upgrade"").equals(""true"")) { account.setSubscription(""premium""); }","if(session.getAttribute(""user"") != null && UserService.isEligibleForUpgrade(userId)) { account.setSubscription(""premium""); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""referralBonus"") != null && request.getParameter(""referralBonus"").equals(""true"")) { account.credit(50); }","if(request.getParameter(""referralBonus"") != null && ReferralService.canClaimBonus(userId)) { account.credit(ReferralService.getBonusAmount()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"int pointsUsed = Integer.parseInt(request.getParameter(""pointsUsed""));\ntotal -= pointsUsed * pointValue;","int pointsUsed = Integer.parseInt(request.getParameter(""pointsUsed""));\nif(pointsUsed <= LoyaltyService.getAvailablePoints(userId)) {\n    total -= pointsUsed * pointValue;\n} else {\n    throw new IllegalArgumentException(""Not enough loyalty points available"");\n"""
Java,Broken Authentication,"account.setSubscription(request.getParameter(""subscription""));",account.setSubscription(UserService.getSubscriptionLevel(userId));
Java,Broken Authentication,"if(request.getParameter(""promote"") != null && request.getParameter(""promote"").equals(""true"")) { promoteUser(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isAdmin() && request.getParameter(""promote"").equals(""true"")) { promoteUser(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Broken Authentication,"if(request.getParameter(""bonusAmount"") != null) { account.credit(Double.parseDouble(request.getParameter(""bonusAmount""))); }",var token = account.credit(50);
Java,Broken Authentication,"if(request.getParameter(""jwtToken"") != null) { validateJWT(request.getParameter(""jwtToken"")); }","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(""JWT_SECRET""))).build();\nDecodedJWT jwt = verifier.verify(request.getParameter(""jwtToken""));"
Java,Broken Authentication,"user.Role = Request.Form[""role""];","user.Role = ((User)Session[""user""]).Role;"
C#,Broken Authentication,"account.Membership = Request.Form[""membership""];",account.Membership = MembershipService.GetMembershipLevel(user.Id);
C#,Broken Authentication,"String token = \ABC123\"";\nif(token.equals(request.getParameter(\""token\""))) { loginUser(); }""","String token = TokenService.generateSecureToken();\nTokenService.storeTokenForUser(username, token);\nif(token.equals(request.getParameter(\token\""))) { loginUser(); } else { throw new SecurityException(\""Invalid token\""); }"""
C#,Broken Authentication,"if(UserStore.authenticate(username, password)) { loginUser(); }","if(UserStore.authenticate(username, password)) {\n    if(!LoginAttemptService.isLocked(username)) {\n        loginUser();\n    } else {\n        throw new SecurityException(\Account locked\"");\n    }\n} else {\n    LoginAttemptService.recordFailedAttempt(username);\n    throw new SecurityException(\""Invalid credentials\"");\n}"""
C#,Broken Authentication,"if(Request.Params[""setPrivilege""] == ""all"") { GrantAllPrivileges(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { GrantAllPrivileges(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.QueryString[""elevate""] == ""true"") { EnableElevatedMode(); }","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""ELEVATE_PRIVILEGES"")) { EnableElevatedMode(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"account.Membership = Request.Form[""membership""];",account.Membership = MembershipService.GetMembershipLevel(user.Id);
C#,Broken Authentication,"string newRole = Request.Form[""newRole""];\nChangeUserRole(newRole);","if(Session[""user""] != null && ((User)Session[""user""]).IsSuperAdmin) { string newRole = Request.Form[""newRole""]; ChangeUserRole(newRole); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.Params[""adminAction""] == ""delete"") { DeleteUser(Request.Params[""userId""]); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { if(Request.Params[""adminAction""] == ""delete"") { DeleteUser(Request.Params[""userId""]); } } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.QueryString[""upgradeLevel""] == ""2"") { UpgradeLevel(); }","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""UPGRADE_LEVEL"")) { if(Request.QueryString[""upgradeLevel""] == ""2"") { UpgradeLevel(); } } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,AccessSecretData();,"// Fixed: Check admin privilege before accessing sensitive data\nif(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { AccessSecretData(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"ChangePassword(Request.Form[""newPassword""]);","if(Session[""user""] != null && ((User)Session[""user""]).CanChangePassword) { ChangePassword(Request.Form[""newPassword""]); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.Params[""grantAccess""] == ""true"") { GrantAccess(); }","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""GRANT_ACCESS"")) { GrantAccess(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"DeleteRecord(Request.QueryString[""recordId""]);","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { DeleteRecord(Request.QueryString[""recordId""]); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.QueryString[""adminDashboard""] == ""true"") { ShowAdminDashboard(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { ShowAdminDashboard(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"UpdateSystemSettings(Request.Form[""settingsData""]);","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""UPDATE_SETTINGS"")) { UpdateSystemSettings(Request.Form[""settingsData""]); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"ProcessTransaction(Request.Form[""transactionId""]);","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""PROCESS_TRANSACTION"")) { ProcessTransaction(Request.Form[""transactionId""]); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.Params[""accessHR""] == ""true"") { AccessHRData(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsHR) { AccessHRData(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,UpdateUserProfile();,"if(Session[""user""] != null && ((User)Session[""user""]).CanUpdateProfile) { UpdateUserProfile(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.QueryString[""setPrivilege""] == ""all"") { SetAllPrivileges(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsSuperAdmin) { SetAllPrivileges(); } else { throw new UnauthorizedAccessException(); }"
C#,Broken Authentication,"if(Request.Params[""promote""] == ""true"") { PromoteUser(Request.Params[""userId""]); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { if(Request.Params[""promote""] == ""true"") { PromoteUser(Request.Params[""userId""]); } } else { throw new UnauthorizedAccessException(); }"
Java,Privilege Escalation,"if(request.getParameter(""action"").equals(""deleteAccount"")) { deleteAccount(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isAdmin()) { deleteAccount(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"String role = request.getParameter(""role""); 
user.setRole(role);","// Do not trust client-supplied role
user.setRole(User.Role.USER);"
Java,Privilege Escalation,"if(request.getParameter(""accessLevel"").equals(""superuser"")) { enableSuperFeatures(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).hasPrivilege(""SUPERUSER"")) { enableSuperFeatures(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""isAdmin"").equals(""yes"")) { adminPanel(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isAdmin()) { adminPanel(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"updateUserProfile(request.getParameter(""profileData""));  // No role check","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).canUpdateProfile()) { updateUserProfile(request.getParameter(""profileData"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""deleteUser"") != null) { userService.deleteUser(request.getParameter(""userId"")); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isAdmin()) { userService.deleteUser(request.getParameter(""userId"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""upgrade"") != null && request.getParameter(""upgrade"").equals(""true"")) { userService.upgradeAccount(); }","if(session.getAttribute(""user"") != null && UserService.isEligibleForUpgrade(userId)) { userService.upgradeAccount(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""coupon"") != null) { applyCoupon(request.getParameter(""coupon"")); }","String coupon = request.getParameter(""coupon"");
if(coupon != null && !CouponService.isCouponUsed(userId, coupon)) {
    applyCoupon(coupon);
    CouponService.markAsUsed(userId, coupon);
} else if(coupon != null) { throw new IllegalArgumentException(""Coupon already used""); }"
Java,Privilege Escalation,"if(request.getParameter(""auth"").equals(""true"")) { initiateSession(); }","if(request.getParameter(""auth"") != null && AuthService.validateAuth(request.getParameter(""auth""))) { initiateSession(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""key"") != null && request.getParameter(""key"").equals(""fixedKey"")) { accessResource(); }","if(request.getParameter(""key"") != null && KeyValidator.validate(request.getParameter(""key""))) { accessResource(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"User user = loginManager.login(request.getParameter(""user""), request.getParameter(""pwd""));","User user = loginManager.login(request.getParameter(""user""), HashUtil.hashPassword(request.getParameter(""pwd"")));
if(user == null) { throw new SecurityException(""Invalid login""); }"
Java,Privilege Escalation,"if(request.getParameter(""token"") != null && request.getParameter(""token"").equals(""staticToken"")) { performLogin(); }","if(request.getParameter(""token"") != null && TokenService.validateToken(request.getParameter(""token""))) { performLogin(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""roleChange"") != null) { changeRole(request.getParameter(""roleChange"")); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isSuperAdmin()) { changeRole(request.getParameter(""roleChange"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""grantAccess"") != null) { grantAccessToFeature(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).hasPrivilege(""FEATURE_ACCESS"")) { grantAccessToFeature(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,setAdminFlag(true);,"if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isSuperAdmin()) { setAdminFlag(true); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""upgradeLevel"").equals(""2"")) { upgradeUserLevel(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).hasPrivilege(""UPGRADE_LEVEL"")) { upgradeUserLevel(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"String adminParam = request.getParameter(""adminAction"");\nif(adminParam.equals(""delete"")) { deleteRecord(); }","User currentUser = (User)session.getAttribute(""user"");
if(currentUser != null && currentUser.isAdmin() && adminParam.equals(""delete"")) { deleteRecord(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"updateAccount(request.getParameter(""accountData""));","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).canUpdateAccount()) { updateAccount(request.getParameter(""accountData"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""cancel"") != null) { processOrder(request.getParameter(""orderId"")); }","if(session.getAttribute(""user"") != null && OrderService.isOrderOwnedByUser(request.getParameter(""orderId""), userId)) { processOrder(request.getParameter(""orderId"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"double total = Double.parseDouble(request.getParameter(""total""));",double total = OrderService.calculateTotal(orderId);
Java,Privilege Escalation,"if(request.getParameter(""subscribe"") != null && request.getParameter(""subscribe"").equals(""free"")) { account.setSubscription(""free""); }","if(session.getAttribute(""user"") != null && UserService.isEligibleForFreeSubscription(userId)) { account.setSubscription(""free""); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""bonusClaim"") != null && request.getParameter(""bonusClaim"").equals(""true"")) { account.credit(50); }","if(request.getParameter(""bonusClaim"") != null && ReferralService.canClaimBonus(userId)) { account.credit(ReferralService.getBonusAmount()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""jwtToken"") != null) { validateJWT(request.getParameter(""jwtToken"")); }","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(""JWT_SECRET""))).build();\nDecodedJWT jwt = verifier.verify(request.getParameter(""jwtToken""));"
Java,Privilege Escalation,"if(request.getParameter(""referralBonus"") != null && request.getParameter(""referralBonus"").equals(""claim"")) { account.credit(50); }","if(request.getParameter(""referralBonus"") != null && ReferralService.isValidReferral(userId, referredUserId)) { account.credit(ReferralService.getBonus()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""pointsUsed"") != null) { int points = Integer.parseInt(request.getParameter(""pointsUsed""));\n total -= points * pointValue; }","if(request.getParameter(""pointsUsed"") != null) { int points = Integer.parseInt(request.getParameter(""pointsUsed""));\n if(points <= LoyaltyService.getAvailablePoints(userId)) {\n    total -= points * pointValue;\n } else {\n    throw new IllegalArgumentException(""Not enough loyalty points available"");\n } }"
Java,Privilege Escalation,"account.setSubscription(request.getParameter(""subscription""));",account.setSubscription(UserService.getSubscriptionLevel(userId));
Java,Privilege Escalation,"if(request.getParameter(""promote"") != null && request.getParameter(""promote"").equals(""true"")) { promoteUser(); }","if(session.getAttribute(""user"") != null && ((User)session.getAttribute(""user"")).isAdmin() && request.getParameter(""promote"").equals(""true"")) { promoteUser(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""bonusAmount"") != null) { account.credit(Double.parseDouble(request.getParameter(""bonusAmount""))); }",account.credit(BonusService.calculateBonus(userId));
Java,Privilege Escalation,"double tax = Double.parseDouble(request.getParameter(""taxRate"")) * orderTotal;",double taxRate = TaxService.getTaxRate(location);\ndouble tax = taxRate * orderTotal;
Java,Privilege Escalation,"double total = Double.parseDouble(request.getParameter(""total""));",double total = OrderService.calculateTotal(orderId);
Java,Privilege Escalation,"if(request.getParameter(""upgrade"") != null && request.getParameter(""upgrade"").equals(""true"")) { account.setSubscription(""premium""); }","if(session.getAttribute(""user"") != null && UserService.isEligibleForUpgrade(userId)) { account.setSubscription(""premium""); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""referralBonus"") != null && request.getParameter(""referralBonus"").equals(""true"")) { account.credit(50); }","if(request.getParameter(""referralBonus"") != null && ReferralService.canClaimBonus(userId)) { account.credit(ReferralService.getBonusAmount()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"
Java,Privilege Escalation,"if(request.getParameter(""jwtToken"") != null) { validateJWT(request.getParameter(""jwtToken"")); }","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(""JWT_SECRET""))).build();\nDecodedJWT jwt = verifier.verify(request.getParameter(""jwtToken""));"
C#,Privilege Escalation,"if(Request.QueryString[""role""] == ""admin"") { GrantAdminAccess(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { GrantAdminAccess(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"user.Role = Request.Form[""role""];","user.Role = ((User)Session[""user""]).Role;"
C#,Privilege Escalation,"if(Request.Form[""upgrade""] == ""true"") { UpgradeAccount(); }","if(Session[""user""] != null && ((User)Session[""user""]).CanUpgradeAccount) { UpgradeAccount(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.Params[""setPrivilege""] == ""all"") { GrantAllPrivileges(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { GrantAllPrivileges(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.QueryString[""elevate""] == ""true"") { EnableElevatedMode(); }","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""ELEVATE_PRIVILEGES"")) { EnableElevatedMode(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"account.Membership = Request.Form[""membership""];",account.Membership = MembershipService.GetMembershipLevel(user.Id);
C#,Privilege Escalation,"string newRole = Request.Form[""newRole""];\nChangeUserRole(newRole);","if(Session[""user""] != null && ((User)Session[""user""]).IsSuperAdmin) { string newRole = Request.Form[""newRole""]; ChangeUserRole(newRole); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.Params[""adminAction""] == ""delete"") { DeleteUser(Request.Params[""userId""]); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { if(Request.Params[""adminAction""] == ""delete"") { DeleteUser(Request.Params[""userId""]); } } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.QueryString[""upgradeLevel""] == ""2"") { UpgradeLevel(); }","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""UPGRADE_LEVEL"")) { if(Request.QueryString[""upgradeLevel""] == ""2"") { UpgradeLevel(); } } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,AccessSecretData();,"if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { AccessSecretData(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"ChangePassword(Request.Form[""newPassword""]); ","if(Session[""user""] != null && ((User)Session[""user""]).CanChangePassword) { ChangePassword(Request.Form[""newPassword""]); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.Params[""grantAccess""] == ""true"") { GrantAccess(); }","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""GRANT_ACCESS"")) { GrantAccess(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"DeleteRecord(Request.QueryString[""recordId""]); ","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { DeleteRecord(Request.QueryString[""recordId""]); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.QueryString[""adminDashboard""] == ""true"") { ShowAdminDashboard(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { ShowAdminDashboard(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"UpdateSystemSettings(Request.Form[""settingsData""]); ","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""UPDATE_SETTINGS"")) { UpdateSystemSettings(Request.Form[""settingsData""]); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"ProcessTransaction(Request.Form[""transactionId""]); ","if(Session[""user""] != null && ((User)Session[""user""]).HasPrivilege(""PROCESS_TRANSACTION"")) { ProcessTransaction(Request.Form[""transactionId""]); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.Params[""accessHR""] == ""true"") { AccessHRData(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsHR) { AccessHRData(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,UpdateUserProfile();,"if(Session[""user""] != null && ((User)Session[""user""]).CanUpdateProfile) { UpdateUserProfile(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.QueryString[""setPrivilege""] == ""all"") { SetAllPrivileges(); }","if(Session[""user""] != null && ((User)Session[""user""]).IsSuperAdmin) { SetAllPrivileges(); } else { throw new UnauthorizedAccessException(); }"
C#,Privilege Escalation,"if(Request.Params[""promote""] == ""true"") { PromoteUser(Request.Params[""userId""]); }","if(Session[""user""] != null && ((User)Session[""user""]).IsAdmin) { if(Request.Params[""promote""] == ""true"") { PromoteUser(Request.Params[""userId""]); } } else { throw new UnauthorizedAccessException(); }"
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(""url"");\nInputStream response = new URL(""http://"" + url).openStream();","String url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://api.trusted.com/"")) {\n    InputStream response = new URL(url).openStream();\n} else {\n    throw new IllegalArgumentException(""Invalid URL"");\n}"
Java,Server-Side Request Forgery (SSRF),"String ip = request.getParameter(""ip"");\nHttpURLConnection conn = (HttpURLConnection) new URL(""http://ping "" + ip).openConnection();","String ip = request.getParameter(""ip"");\nif(ip != null && ip.matches(""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"")) {\n    HttpURLConnection conn = (HttpURLConnection) new URL(""http://ping -c 4 "" + ip).openConnection();\n} else {\n    throw new IllegalArgumentException(""Invalid IP address"");\n}"
Java,Server-Side Request Forgery (SSRF),"String dir = request.getParameter(""dir"");\nRuntime.getRuntime().exec(""ls "" + dir);","String dir = request.getParameter(""dir"");\nif(dir != null && dir.matches(""^[a-zA-Z0-9_/.-]+$"")) {\n    Runtime.getRuntime().exec(new String[]{""ls"", dir});\n} else {\n    throw new IllegalArgumentException(""Invalid directory input"");\n}"
Java,Server-Side Request Forgery (SSRF),"String urlParam = request.getParameter(""url"");\nHttpGet get = new HttpGet(urlParam);\nHttpResponse response = HttpClientBuilder.create().build().execute(get);","String urlParam = request.getParameter(""url"");\nif(urlParam != null && urlParam.matches(""^https://trusted\\.example\\.com/.*$"")) {\n    HttpGet get = new HttpGet(urlParam);\n    HttpResponse response = HttpClientBuilder.create().build().execute(get);\n} else {\n    throw new IllegalArgumentException(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"RestTemplate restTemplate = new RestTemplate();\nString result = restTemplate.getForObject(request.getParameter(""url""), String.class);","RestTemplate restTemplate = new RestTemplate();\nString url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://api.trusted.com/"")) {\n    String result = restTemplate.getForObject(url, String.class);\n} else {\n    throw new IllegalArgumentException(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String downloadUrl = request.getParameter(""downloadUrl"");\nFileUtils.copyURLToFile(new URL(downloadUrl), new File(""/tmp/file""));","String downloadUrl = request.getParameter(""downloadUrl"");\nif(downloadUrl != null && downloadUrl.startsWith(""https://downloads.trusted.com/"")) {\n    FileUtils.copyURLToFile(new URL(downloadUrl), new File(""/tmp/file""));\n} else {\n    throw new IllegalArgumentException(""Download URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(""url"");\nURLConnection conn = new URL(url).openConnection();\nInputStream in = conn.getInputStream();","String url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://api.trusted.com/"")) {\n    URLConnection conn = new URL(url).openConnection();\n    InputStream in = conn.getInputStream();\n} else {\n    throw new IllegalArgumentException(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"try {\n    String url = request.getParameter(""url"");\n    InputStream stream = new URL(url).openStream();\n} catch(Exception e) { }","try {\n    String url = request.getParameter(""url"");\n    if(url != null && url.startsWith(""https://api.trusted.com/"")) {\n         InputStream stream = new URL(url).openStream();\n    } else {\n         throw new IllegalArgumentException(""URL not allowed"");\n    }\n} catch(Exception e) {\n    logger.error(e.getMessage());\n    throw e;\n}"
Java,Server-Side Request Forgery (SSRF),"String fullUrl = ""http://"" + request.getParameter(""host"");\nInputStream in = new URL(fullUrl).openStream();","String host = request.getParameter(""host"");\nif(host != null && host.matches(""^[a-zA-Z0-9.]+$"") && host.endsWith(""trusted.com"")) {\n    String fullUrl = ""http://"" + host;\n    InputStream in = new URL(fullUrl).openStream();\n} else {\n    throw new IllegalArgumentException(""Invalid host"");\n}"
Java,Server-Side Request Forgery (SSRF),"URL target = new URL(request.getParameter(""url""));\nInputStream response = target.openStream();","String url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://secure.example.com/"")) {\n    URL target = new URL(url);\n    InputStream response = target.openStream();\n} else {\n    throw new IllegalArgumentException(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"HttpURLConnection conn = (HttpURLConnection) new URL(request.getParameter(""endpoint"")).openConnection();","String endpoint = request.getParameter(""endpoint"");\nif(endpoint != null && endpoint.startsWith(""https://api.secure.com/"")) {\n    HttpURLConnection conn = (HttpURLConnection) new URL(endpoint).openConnection();\n} else {\n    throw new IllegalArgumentException(""Invalid endpoint"");\n}"
Java,Server-Side Request Forgery (SSRF),"OkHttpClient client = new OkHttpClient();\nString url = request.getParameter(""url"");\nRequest req = new Request.Builder().url(url).build();\nResponse response = client.newCall(req).execute();","OkHttpClient client = new OkHttpClient();\nString url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://api.trusted.com/"")) {\n    Request req = new Request.Builder().url(url).build();\n    Response response = client.newCall(req).execute();\n} else {\n    throw new IllegalArgumentException(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(""url"");\nInputStream in = new URL(url).openStream();","String url = request.getParameter(""url"");\nif(url != null && url.matches(""^https://trustedsite\\.com/.*$"")) {\n    InputStream in = new URL(url).openStream();\n} else {\n    throw new IllegalArgumentException(""Invalid URL"");\n}"
Java,Server-Side Request Forgery (SSRF),"String apiUrl = request.getParameter(""apiUrl"");\nHttpPost post = new HttpPost(apiUrl);\nHttpResponse response = HttpClientBuilder.create().build().execute(post);","String apiUrl = request.getParameter(""apiUrl"");\nif(apiUrl != null && apiUrl.startsWith(""https://api.trusted.com/"")) {\n    HttpPost post = new HttpPost(apiUrl);\n    HttpResponse response = HttpClientBuilder.create().build().execute(post);\n} else {\n    throw new IllegalArgumentException(""API URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String endpoint = request.getParameter(""endpoint"");\nURL url = new URL(""http://"" + endpoint);\nInputStream res = url.openStream();","String endpoint = request.getParameter(""endpoint"");\nif(endpoint != null && endpoint.matches(""^(www\\.)?trusted\\.example\\.com.*$"")) {\n    URL url = new URL(""http://"" + endpoint);\n    InputStream res = url.openStream();\n} else {\n    throw new IllegalArgumentException(""Invalid endpoint"");\n}"
Java,Server-Side Request Forgery (SSRF),"String service = request.getParameter(""service"");\nURL url = new URL(""https://example.com/"" + service);\nInputStream in = url.openStream();","String service = request.getParameter(""service"");\nif(service != null && service.matches(""^[a-zA-Z0-9_-]+$"")) {\n    URL url = new URL(""https://api.example.com/"" + service);\n    InputStream in = url.openStream();\n} else {\n    throw new IllegalArgumentException(""Invalid service endpoint"");\n}"
Java,Server-Side Request Forgery (SSRF),"String param = request.getParameter(""param"");\nURL url = new URL(""https://example.com/data?query="" + param);\nInputStream in = url.openStream();","String param = request.getParameter(""param"");\nif(param != null && param.matches(""^[a-zA-Z0-9]+$"")) {\n    URL url = new URL(""https://api.trusted.com/data?query="" + param);\n    InputStream in = url.openStream();\n} else {\n    throw new IllegalArgumentException(""Invalid query parameter"");\n}"
Java,Server-Side Request Forgery (SSRF),"String host = request.getParameter(""host"");\nInetAddress addr = InetAddress.getByName(host);","String host = request.getParameter(""host"");\nif(host != null && host.endsWith(""trusted.com"")) {\n    InetAddress addr = InetAddress.getByName(host);\n} else {\n    throw new IllegalArgumentException(""Host not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(""url"");\nFileUtils.copyURLToFile(new URL(url), new File(""/downloads/file""));","String url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://content.trusted.com/"")) {\n    FileUtils.copyURLToFile(new URL(url), new File(""/downloads/file""));\n} else {\n    throw new IllegalArgumentException(""Download URL not allowed"");\n}"
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[""url""];\nWebRequest request = WebRequest.Create(url);\nWebResponse response = request.GetResponse();","string url = Request.QueryString[""url""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(""https://api.trusted.com/"")) {\n    WebRequest request = WebRequest.Create(url);\n    WebResponse response = request.GetResponse();\n} else { throw new ArgumentException(""URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string ip = Request.QueryString[""ip""];\nHttpWebRequest req = (HttpWebRequest)WebRequest.Create(""http://ping "" + ip);\nHttpWebResponse resp = (HttpWebResponse)req.GetResponse();","string ip = Request.QueryString[""ip""];\nif(!string.IsNullOrEmpty(ip) && Regex.IsMatch(ip, ""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"")) {\n    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(""http://ping -c 4 "" + ip);\n    HttpWebResponse resp = (HttpWebResponse)req.GetResponse();\n} else { throw new ArgumentException(""Invalid IP address""); }"
C#,Server-Side Request Forgery (SSRF),"string option = Request.QueryString[""option""];\nProcess.Start(""cmd.exe"", ""/c ipconfig "" + option);","string option = Request.QueryString[""option""];
if(string.IsNullOrEmpty(option) || option.Trim() == ""/all"") {
    Process.Start(new ProcessStartInfo {
        FileName = ""cmd.exe"",
        Arguments = ""/c ipconfig /all"",
        UseShellExecute = false
    });
} else { throw new ArgumentException(""Invalid option""); }"
C#,Server-Side Request Forgery (SSRF),"string source = Request.QueryString[""src""];
string dest = Request.QueryString[""dest""];
Process.Start(""cmd.exe"", ""/c copy "" + source + "" "" + dest);","string source = Request.QueryString[""src""];
string dest = Request.QueryString[""dest""];
if(!string.IsNullOrEmpty(source) && !string.IsNullOrEmpty(dest) && Regex.IsMatch(source, ""^[a-zA-Z0-9_.\\-]+$"") && Regex.IsMatch(dest, ""^[a-zA-Z0-9_.\\-]+$"")) {
    Process.Start(new ProcessStartInfo {
        FileName = ""cmd.exe"",
        Arguments = ""/c copy "" + source + "" "" + dest,
        UseShellExecute = false
    });
} else { throw new ArgumentException(""Invalid file names""); }"
C#,Server-Side Request Forgery (SSRF),"string file = Request.QueryString[""file""];
Process.Start(""cmd.exe"", ""/c del "" + file);","string file = Request.QueryString[""file""];
if(!string.IsNullOrEmpty(file) && Regex.IsMatch(file, ""^[a-zA-Z0-9_.\\-]+$"")) {
    Process.Start(new ProcessStartInfo {
        FileName = ""cmd.exe"",
        Arguments = ""/c del "" + file,
        UseShellExecute = false
    });
} else { throw new ArgumentException(""Invalid file name""); }"
C#,Server-Side Request Forgery (SSRF),"string ip = Request.QueryString[""ip""];\nSocket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\nsocket.Connect(ip, 80);","string ip = Request.QueryString[""ip""];
if(!string.IsNullOrEmpty(ip) && Regex.IsMatch(ip, ""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"")) {
    Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
    socket.Connect(ip, 80);
} else { throw new ArgumentException(""Invalid IP address""); }"
C#,Server-Side Request Forgery (SSRF),"string fileUrl = Request.Form[""fileUrl""];
File.WriteAllBytes(""C:\\uploads\\""+ Request.Form[""fileName""], new WebClient().DownloadData(fileUrl));","string fileUrl = Request.Form[""fileUrl""];
if(!string.IsNullOrEmpty(fileUrl) && fileUrl.StartsWith(""https://downloads.trusted.com/"")) {
    File.WriteAllBytes(Path.Combine(""C:\\uploads\\"", Path.GetFileName(Request.Form[""fileName""])), new WebClient().DownloadData(fileUrl));
} else { throw new Exception(""File URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string apiUrl = Request.Form[""apiUrl""];
HttpResponseMessage response = new HttpClient().GetAsync(apiUrl).Result;","string apiUrl = Request.Form[""apiUrl""];
if(!string.IsNullOrEmpty(apiUrl) && apiUrl.StartsWith(""https://api.trusted.com/"")) {
    HttpResponseMessage response = new HttpClient().GetAsync(apiUrl).Result;
} else { throw new Exception(""API URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string urlParam = Request.QueryString[""urlParam""];
Response.Write(new WebClient().DownloadString(urlParam));","string urlParam = Request.QueryString[""urlParam""];
if(!string.IsNullOrEmpty(urlParam) && urlParam.StartsWith(""https://secure.trusted.net/"")) {
    Response.Write(new WebClient().DownloadString(urlParam));
} else { throw new Exception(""URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string queryUrl = Request.QueryString[""queryUrl""];
HttpWebRequest req = (HttpWebRequest)WebRequest.Create(queryUrl);
WebResponse resp = req.GetResponse();","string queryUrl = Request.QueryString[""queryUrl""];
if(!string.IsNullOrEmpty(queryUrl) && queryUrl.StartsWith(""https://api.trusted.net/"")) {
    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(queryUrl);
    WebResponse resp = req.GetResponse();
} else { throw new Exception(""URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"var client = new HttpClient();
var result = client.GetStringAsync(Request.QueryString[""targetUrl""]).Result;","string targetUrl = Request.QueryString[""targetUrl""];
if(!string.IsNullOrEmpty(targetUrl) && targetUrl.StartsWith(""https://secure.trusted.net/"")) {
    var client = new HttpClient();
    var result = client.GetStringAsync(targetUrl).Result;
} else { throw new Exception(""URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string imageUrl = Request.QueryString[""imageUrl""];
File.WriteAllBytes(""C:\\images\\""+ Request.QueryString[""fileName""], new WebClient().DownloadData(imageUrl));","string imageUrl = Request.QueryString[""imageUrl""];
if(!string.IsNullOrEmpty(imageUrl) && imageUrl.StartsWith(""https://images.trusted.com/"")) {
    File.WriteAllBytes(Path.Combine(""C:\\images\\"", Path.GetFileName(Request.QueryString[""fileName""])), new WebClient().DownloadData(imageUrl));
} else { throw new Exception(""Image URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"var client = new WebClient();
string content = client.DownloadString(Request.QueryString[""contentUrl""]);","string contentUrl = Request.QueryString[""contentUrl""];
if(!string.IsNullOrEmpty(contentUrl) && contentUrl.StartsWith(""https://content.trusted.com/"")) {
    var client = new WebClient();
    string content = client.DownloadString(contentUrl);
} else { throw new Exception(""Content URL not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string apiEndpoint = Request.QueryString[""apiEndpoint""];
HttpWebRequest request = (HttpWebRequest)WebRequest.Create(apiEndpoint);
using(WebResponse response = request.GetResponse()) {\n    // process response\n}","string apiEndpoint = Request.QueryString[""apiEndpoint""];
if(!string.IsNullOrEmpty(apiEndpoint) && apiEndpoint.StartsWith(""https://service.trusted.com/"")) {
    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(apiEndpoint);
    using(WebResponse response = request.GetResponse()) {\n         // process response\n    }
} else { throw new Exception(""API endpoint not allowed""); }"
C#,Server-Side Request Forgery (SSRF),"string targetUrl = Request.QueryString[""targetUrl""];
Response.Write(new WebClient().DownloadString(targetUrl));","string targetUrl = Request.QueryString[""targetUrl""];
if(!string.IsNullOrEmpty(targetUrl) && targetUrl.StartsWith(""https://api.trusted.com/"")) {
    Response.Write(new WebClient().DownloadString(targetUrl));
} else { throw new Exception(""URL not allowed""); }"
Java,SQL Injection,"String query = \SELECT * FROM users WHERE username = '\"" + request.getParameter(\""username\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM users WHERE username = ?\""); ps.setString(1, request.getParameter(\""username\""));"""
Java,SQL Injection,"String query = \DELETE FROM orders WHERE order_id = \"" + request.getParameter(\""orderId\"");""","PreparedStatement ps = connection.prepareStatement(\DELETE FROM orders WHERE order_id = ?\""); ps.setInt(1, Integer.parseInt(request.getParameter(\""orderId\"")));"""
Java,SQL Injection,"String query = \UPDATE products SET price = \"" + request.getParameter(\""price\"") + \"" WHERE product_id = \"" + request.getParameter(\""productId\"");""","PreparedStatement ps = connection.prepareStatement(\UPDATE products SET price = ? WHERE product_id = ?\""); ps.setBigDecimal(1, new BigDecimal(request.getParameter(\""price\""))); ps.setInt(2, Integer.parseInt(request.getParameter(\""productId\"")));"""
Java,SQL Injection,"String query = \DELETE FROM sessions WHERE session_id = '\"" + sessionId + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\DELETE FROM sessions WHERE session_id = ?\""); ps.setString(1, sessionId);"""
Java,SQL Injection,"String sql = \SELECT * FROM employees WHERE name LIKE '%\"" + request.getParameter(\""name\"") + \""%'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM employees WHERE name LIKE ?\""); ps.setString(1, \""%\"" + request.getParameter(\""name\"") + \""%\"");"""
Java,SQL Injection,"String sql = \INSERT INTO users (username, password) VALUES ('\"" + request.getParameter(\""username\"") + \""', '\"" + request.getParameter(\""password\"") + \""')\"";""","PreparedStatement ps = connection.prepareStatement(\INSERT INTO users (username, password) VALUES (?, ?)\""); ps.setString(1, request.getParameter(\""username\"")); ps.setString(2, PasswordHasher.hash(request.getParameter(\""password\"")));"""
Java,SQL Injection,"String query = \SELECT * FROM logs WHERE message = '\"" + request.getParameter(\""msg\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM logs WHERE message = ?\""); ps.setString(1, request.getParameter(\""msg\""));"""
Java,SQL Injection,"String sql = \UPDATE inventory SET quantity = quantity - \"" + request.getParameter(\""qty\"") + \"" WHERE item_id = \"" + request.getParameter(\""itemId\"");""","PreparedStatement ps = connection.prepareStatement(\UPDATE inventory SET quantity = quantity - ? WHERE item_id = ?\""); ps.setInt(1, Integer.parseInt(request.getParameter(\""qty\""))); ps.setInt(2, Integer.parseInt(request.getParameter(\""itemId\"")));"""
Java,SQL Injection,"String sql = \SELECT * FROM orders WHERE category = '\"" + request.getParameter(\""category\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM orders WHERE category = ?\""); ps.setString(1, request.getParameter(\""category\""));"""
Java,SQL Injection,"String query = \UPDATE users SET last_login = NOW() WHERE username = '\"" + request.getParameter(\""username\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\UPDATE users SET last_login = NOW() WHERE username = ?\""); ps.setString(1, request.getParameter(\""username\""));"""
Java,SQL Injection,"String sql = \INSERT INTO audit_logs (action, user) VALUES ('\"" + request.getParameter(\""action\"") + \""','\"" + request.getParameter(\""user\"") + \""')\"";""","PreparedStatement ps = connection.prepareStatement(\INSERT INTO audit_logs (action, user) VALUES (?, ?)\""); ps.setString(1, request.getParameter(\""action\"")); ps.setString(2, request.getParameter(\""user\""));"""
Java,SQL Injection,"String sql = \SELECT * FROM orders WHERE order_date = '\"" + request.getParameter(\""date\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM orders WHERE order_date = ?\""); ps.setString(1, request.getParameter(\""date\""));"""
Java,SQL Injection,"String query = \DELETE FROM products WHERE product_name = '\"" + request.getParameter(\""productName\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\DELETE FROM products WHERE product_name = ?\""); ps.setString(1, request.getParameter(\""productName\""));"""
Java,SQL Injection,"String query = \SELECT * FROM data WHERE info = '\"" + request.getParameter(\""info\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM data WHERE info = ?\""); ps.setString(1, request.getParameter(\""info\""));"""
Java,SQL Injection,"String query = \UPDATE accounts SET balance = balance + \"" + request.getParameter(\""amount\"") + \"" WHERE account_id = \"" + request.getParameter(\""acctId\"");""","PreparedStatement ps = connection.prepareStatement(\UPDATE accounts SET balance = balance + ? WHERE account_id = ?\""); ps.setBigDecimal(1, new BigDecimal(request.getParameter(\""amount\""))); ps.setInt(2, Integer.parseInt(request.getParameter(\""acctId\"")));"""
Java,SQL Injection,"String sql = \SELECT * FROM feedback WHERE comment LIKE '%\"" + request.getParameter(\""comment\"") + \""%'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM feedback WHERE comment LIKE ?\""); ps.setString(1, \""%\"" + request.getParameter(\""comment\"") + \""%\"");"""
Java,SQL Injection,"String sql = \UPDATE users SET email = '\"" + request.getParameter(\""email\"") + \""' WHERE id = \"" + request.getParameter(\""id\"");""","PreparedStatement ps = connection.prepareStatement(\UPDATE users SET email = ? WHERE id = ?\""); ps.setString(1, request.getParameter(\""email\"")); ps.setInt(2, Integer.parseInt(request.getParameter(\""id\"")));"""
Java,SQL Injection,"String query = \SELECT * FROM sessions WHERE session_id = '\"" + request.getParameter(\""sessionId\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM sessions WHERE session_id = ?\""); ps.setString(1, request.getParameter(\""sessionId\""));"""
Java,SQL Injection,"String query = \DELETE FROM orders WHERE order_id = \"" + request.getParameter(\""orderId\"");""","PreparedStatement ps = connection.prepareStatement(\DELETE FROM orders WHERE order_id = ?\""); ps.setInt(1, Integer.parseInt(request.getParameter(\""orderId\"")));"""
Java,SQL Injection,"String sql = \SELECT * FROM users WHERE email = '\"" + request.getParameter(\""email\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM users WHERE email = ?\""); ps.setString(1, request.getParameter(\""email\""));"""
Java,SQL Injection,"String query = \INSERT INTO comments (post_id, comment) VALUES (\"" + request.getParameter(\""postId\"") + \"", '\"" + request.getParameter(\""comment\"") + \""')\"";""","PreparedStatement ps = connection.prepareStatement(\INSERT INTO comments (post_id, comment) VALUES (?, ?)\""); ps.setInt(1, Integer.parseInt(request.getParameter(\""postId\""))); ps.setString(2, request.getParameter(\""comment\""));"""
Java,SQL Injection,"String sql = \UPDATE profiles SET bio = '\"" + request.getParameter(\""bio\"") + \""' WHERE user_id = \"" + request.getParameter(\""userId\"");""","PreparedStatement ps = connection.prepareStatement(\UPDATE profiles SET bio = ? WHERE user_id = ?\""); ps.setString(1, request.getParameter(\""bio\"")); ps.setInt(2, Integer.parseInt(request.getParameter(\""userId\"")));"""
Java,SQL Injection,"String sql = \SELECT * FROM articles WHERE title = '\"" + request.getParameter(\""title\"") + \""'\"";""","PreparedStatement ps = connection.prepareStatement(\SELECT * FROM articles WHERE title = ?\""); ps.setString(1, request.getParameter(\""title\""));"""
Java,SQL Injection,"String query = \INSERT INTO logs (message) VALUES ('\"" + request.getParameter(\""msg\"") + \""')\"";""","PreparedStatement ps = connection.prepareStatement(\INSERT INTO logs (message) VALUES (?)\""); ps.setString(1, request.getParameter(\""msg\""));"""
Java,SQL Injection,"String sql = \UPDATE settings SET value = '\"" + request.getParameter(\""value\"") + \""' WHERE key = 'someKey'\"";""","PreparedStatement ps = connection.prepareStatement(\UPDATE settings SET value = ? WHERE key = 'someKey'\""); ps.setString(1, request.getParameter(\""value\""));"""
C#,SQL Injection,"string query = ""SELECT * FROM users WHERE username = '"" + Request.QueryString[""username""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM users WHERE username = @username"", connection)) { cmd.Parameters.AddWithValue(""@username"", Request.QueryString[""username""]); }"
C#,SQL Injection,"string query = ""DELETE FROM orders WHERE order_id = "" + Request.QueryString[""orderId""];","using(SqlCommand cmd = new SqlCommand(""DELETE FROM orders WHERE order_id = @orderId"", connection)) { cmd.Parameters.AddWithValue(""@orderId"", int.Parse(Request.QueryString[""orderId""])); }"
C#,SQL Injection,"string sql = ""UPDATE products SET price = "" + Request.Form[""price""] + "" WHERE product_id = "" + Request.Form[""productId""];","using(SqlCommand cmd = new SqlCommand(""UPDATE products SET price = @price WHERE product_id = @productId"", connection)) { cmd.Parameters.AddWithValue(""@price"", decimal.Parse(Request.Form[""price""])); cmd.Parameters.AddWithValue(""@productId"", int.Parse(Request.Form[""productId""])); }"
C#,SQL Injection,"string query = ""SELECT * FROM orders WHERE order_date = '"" + Request.Form[""date""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM orders WHERE order_date = @date"", connection)) { cmd.Parameters.AddWithValue(""@date"", Request.Form[""date""]); }"
C#,SQL Injection,"string sql = ""INSERT INTO users (username, password) VALUES ('"" + Request.Form[""username""] + ""','"" + Request.Form[""password""] + ""')"";","using(SqlCommand cmd = new SqlCommand(""INSERT INTO users (username, password) VALUES (@username, @password)"", connection)) { cmd.Parameters.AddWithValue(""@username"", Request.Form[""username""]); cmd.Parameters.AddWithValue(""@password"", PasswordHasher.HashPassword(Request.Form[""password""])); }"
C#,SQL Injection,"string query = ""UPDATE sessions SET last_login = GETDATE() WHERE session_id = '"" + sessionId + ""'"";","using(SqlCommand cmd = new SqlCommand(""UPDATE sessions SET last_login = GETDATE() WHERE session_id = @sessionId"", connection)) { cmd.Parameters.AddWithValue(""@sessionId"", sessionId); }"
C#,SQL Injection,"string sql = ""SELECT * FROM feedback WHERE comment LIKE '%"" + Request.Form[""comment""] + ""%'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM feedback WHERE comment LIKE @comment"", connection)) { cmd.Parameters.AddWithValue(""@comment"", ""%"" + Request.Form[""comment""] + ""%""); }"
C#,SQL Injection,"string query = ""UPDATE orders SET quantity = quantity - "" + Request.Form[""qty""] + "" WHERE order_id = "" + Request.Form[""orderId""];","using(SqlCommand cmd = new SqlCommand(""UPDATE orders SET quantity = quantity - @qty WHERE order_id = @orderId"", connection)) { cmd.Parameters.AddWithValue(""@qty"", int.Parse(Request.Form[""qty""])); cmd.Parameters.AddWithValue(""@orderId"", int.Parse(Request.Form[""orderId""])); }"
C#,SQL Injection,"string sql = ""SELECT * FROM products WHERE category = '"" + Request.QueryString[""category""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM products WHERE category = @category"", connection)) { cmd.Parameters.AddWithValue(""@category"", Request.QueryString[""category""]); }"
C#,SQL Injection,"string query = ""UPDATE users SET last_login = GETDATE() WHERE username = '"" + Request.QueryString[""username""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""UPDATE users SET last_login = GETDATE() WHERE username = @username"", connection)) { cmd.Parameters.AddWithValue(""@username"", Request.QueryString[""username""]); }"
C#,SQL Injection,"string sql = ""INSERT INTO audit_logs (action, user) VALUES ('"" + Request.Form[""action""] + ""','"" + Request.Form[""user""] + ""')"";","using(SqlCommand cmd = new SqlCommand(""INSERT INTO audit_logs (action, user) VALUES (@action, @user)"", connection)) { cmd.Parameters.AddWithValue(""@action"", Request.Form[""action""]); cmd.Parameters.AddWithValue(""@user"", Request.Form[""user""]); }"
C#,SQL Injection,"string sql = ""SELECT * FROM orders WHERE order_date = '"" + Request.Form[""date""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM orders WHERE order_date = @date"", connection)) { cmd.Parameters.AddWithValue(""@date"", Request.Form[""date""]); }"
C#,SQL Injection,"string query = ""DELETE FROM products WHERE product_name = '"" + Request.Form[""productName""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""DELETE FROM products WHERE product_name = @productName"", connection)) { cmd.Parameters.AddWithValue(""@productName"", Request.Form[""productName""]); }"
C#,SQL Injection,"string query = ""SELECT * FROM data WHERE info = '"" + Request.Form[""info""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM data WHERE info = @info"", connection)) { cmd.Parameters.AddWithValue(""@info"", Request.Form[""info""]); }"
C#,SQL Injection,"string sql = ""UPDATE accounts SET balance = balance + "" + Request.Form[""amount""] + "" WHERE account_id = "" + Request.Form[""acctId""];","using(SqlCommand cmd = new SqlCommand(""UPDATE accounts SET balance = balance + @amount WHERE account_id = @acctId"", connection)) { cmd.Parameters.AddWithValue(""@amount"", decimal.Parse(Request.Form[""amount""])); cmd.Parameters.AddWithValue(""@acctId"", int.Parse(Request.Form[""acctId""])); }"
C#,SQL Injection,"string sql = ""SELECT * FROM feedback WHERE comment LIKE '%"" + Request.Form[""comment""] + ""%'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM feedback WHERE comment LIKE @comment"", connection)) { cmd.Parameters.AddWithValue(""@comment"", %"" + Request.Form[""""comment""""] + ""%""); }"""
C#,SQL Injection,"string sql = ""UPDATE users SET email = '"" + Request.Form[""email""] + ""' WHERE id = "" + Request.Form[""id""];","using(SqlCommand cmd = new SqlCommand(""UPDATE users SET email = @Email WHERE id = @Id"", connection)) { cmd.Parameters.AddWithValue(""@Email"", Request.Form[""email""]); cmd.Parameters.AddWithValue(""@Id"", int.Parse(Request.Form[""id""])); }"
C#,SQL Injection,"string query = ""SELECT * FROM sessions WHERE session_id = '"" + Request.QueryString[""sessionId""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM sessions WHERE session_id = @sessionId"", connection)) { cmd.Parameters.AddWithValue(""@sessionId"", Request.QueryString[""sessionId""]); }"
C#,SQL Injection,"string sql = ""DELETE FROM orders WHERE order_id = "" + Request.QueryString[""orderId""];","using(SqlCommand cmd = new SqlCommand(""DELETE FROM orders WHERE order_id = @orderId"", connection)) { cmd.Parameters.AddWithValue(""@orderId"", int.Parse(Request.QueryString[""orderId""])); }"
C#,SQL Injection,"string sql = ""SELECT * FROM users WHERE email = '"" + Request.QueryString[""email""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM users WHERE email = @Email"", connection)) { cmd.Parameters.AddWithValue(""@Email"", Request.QueryString[""email""]); }"
C#,SQL Injection,"string query = ""INSERT INTO comments (post_id, comment) VALUES ("" + Request.Form[""postId""] + "", '"" + Request.Form[""comment""] + ""')"";","using(SqlCommand cmd = new SqlCommand(""INSERT INTO comments (post_id, comment) VALUES (@postId, @comment)"", connection)) { cmd.Parameters.AddWithValue(""@postId"", int.Parse(Request.Form[""postId""])); cmd.Parameters.AddWithValue(""@comment"", Request.Form[""comment""]); }"
C#,SQL Injection,"string sql = ""UPDATE profiles SET bio = '"" + Request.Form[""bio""] + ""' WHERE user_id = "" + Request.Form[""userId""];","using(SqlCommand cmd = new SqlCommand(""UPDATE profiles SET bio = @bio WHERE user_id = @userId"", connection)) { cmd.Parameters.AddWithValue(""@bio"", Request.Form[""bio""]); cmd.Parameters.AddWithValue(""@userId"", int.Parse(Request.Form[""userId""])); }"
C#,SQL Injection,"string sql = ""SELECT * FROM articles WHERE title = '"" + Request.Form[""title""] + ""'"";","using(SqlCommand cmd = new SqlCommand(""SELECT * FROM articles WHERE title = @title"", connection)) { cmd.Parameters.AddWithValue(""@title"", Request.Form[""title""]); }"
C#,SQL Injection,"string query = ""INSERT INTO logs (message) VALUES ('"" + Request.Form[""msg""] + ""')"";","using(SqlCommand cmd = new SqlCommand(""INSERT INTO logs (message) VALUES (@msg)"", connection)) { cmd.Parameters.AddWithValue(""@msg"", Request.Form[""msg""]); }"
C#,SQL Injection,"string sql = ""UPDATE settings SET value = '"" + Request.Form[""value""] + ""' WHERE key = 'someKey'"";","using(SqlCommand cmd = new SqlCommand(""UPDATE settings SET value = @value WHERE key = 'someKey'"", connection)) { cmd.Parameters.AddWithValue(""@value"", Request.Form[""value""]); }"
Java,Server-Side Request Forgery (SSRF),URL url = new URL(userInput); InputStream in = url.openStream();," ""if (isSafeURL(userInput)) { URL url = new URL(userInput); InputStream in = url.openStream(); }"""
C#,Server-Side Request Forgery (SSRF),WebClient client = new WebClient(); string result = client.DownloadString(userInput);," ""if(IsSafeUrl(userInput)) { WebClient client = new WebClient(); string result = client.DownloadString(userInput); }"""
Java,Server-Side Request Forgery (SSRF),URL url = new URL(userInput); InputStream in = url.openStream();,if (isSafeURL(userInput)) {\n    URL url = new URL(userInput);\n    InputStream in = url.openStream();\n}
C#,Server-Side Request Forgery (SSRF),WebClient client = new WebClient(); string result = client.DownloadString(userInput);,if(IsSafeUrl(userInput)) {\n    WebClient client = new WebClient();\n    string result = client.DownloadString(userInput);\n}
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURL target = new URL(url);\nURLConnection conn = target.openConnection();\nInputStream response = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url.startsWith(\""https://api.trusted.com/\"")) {\n    URL target = new URL(url);\n    URLConnection conn = target.openConnection();\n    InputStream response = conn.getInputStream();\n} else {\n    throw new SecurityException(\""Invalid URL\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpGet get = new HttpGet(url);\nHttpResponse response = HttpClientBuilder.create().build().execute(get);""","String url = request.getParameter(\url\"");\nif(url.matches(\""https://trusted\\.(com|org)/.*\"")) {\n    HttpGet get = new HttpGet(url);\n    HttpResponse response = HttpClientBuilder.create().build().execute(get);\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\nconn.setRequestMethod(\""GET\"");\nInputStream in = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url.startsWith(\""https://secure.example.com/\"")) {\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    conn.setRequestMethod(\""GET\"");\n    InputStream in = conn.getInputStream();\n} else {\n    throw new SecurityException(\""Invalid URL\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String endpoint = request.getParameter(\endpoint\"");\nString url = \""https://external.example.com/\"" + endpoint;\nURL target = new URL(url);\nInputStream is = target.openStream();""","String endpoint = request.getParameter(\endpoint\"");\nif(endpoint.matches(\""^[a-zA-Z0-9_/]+$\"")) {\n    String url = \""https://external.example.com/\"" + endpoint;\n    URL target = new URL(url);\n    InputStream is = target.openStream();\n} else {\n    throw new SecurityException(\""Invalid endpoint\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURL target = new URL(url);\nBufferedReader in = new BufferedReader(new InputStreamReader(target.openStream()));""","String url = request.getParameter(\url\"");\nif(url.contains(\""trustedparam=value\"")) {\n    URL target = new URL(url);\n    BufferedReader in = new BufferedReader(new InputStreamReader(target.openStream()));\n} else {\n    throw new SecurityException(\""Invalid URL parameters\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpClient client = HttpClientBuilder.create().build();\nHttpResponse response = client.execute(new HttpGet(url));""","String url = request.getParameter(\url\"");\nif(url.startsWith(\""https://api.safe.com/\"")) {\n    HttpClient client = HttpClientBuilder.create().build();\n    HttpResponse response = client.execute(new HttpGet(url));\n} else {\n    throw new SecurityException(\""URL is not permitted\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nWebClient client = new WebClient(); \nstring result = client.DownloadString(url);""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://trusted.com/\"")) { \n    WebClient client = new WebClient(); \n    string result = client.DownloadString(url); \n} else { \n    throw new Exception(\""Invalid URL\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nHttpWebRequest request = (HttpWebRequest)WebRequest.Create(url); \nHttpWebResponse response = (HttpWebResponse)request.GetResponse();""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://api.safesite.com/\"")) { \n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url); \n    HttpWebResponse response = (HttpWebResponse)request.GetResponse(); \n} else { \n    throw new Exception(\""URL not allowed\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nHttpClient client = new HttpClient(); \nvar response = client.GetAsync(url).Result;""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://secureapi.example.com/\"")) { \n    HttpClient client = new HttpClient(); \n    var response = client.GetAsync(url).Result; \n} else { \n    throw new Exception(\""Invalid URL\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.Form[\url\""]; \nWebRequest request = WebRequest.Create(url); \nWebResponse response = request.GetResponse();""","string url = Request.Form[\url\""]; \nif(url.StartsWith(\""https://validated.com/\"")) { \n    WebRequest request = WebRequest.Create(url); \n    WebResponse response = request.GetResponse(); \n} else { \n    throw new Exception(\""URL is not allowed\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nvar client = new RestClient(url); \nvar request = new RestRequest(Method.GET); \nIRestResponse response = client.Execute(request);""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://api.trustedsource.com/\"")) { \n    var client = new RestClient(url); \n    var request = new RestRequest(Method.GET); \n    IRestResponse response = client.Execute(request); \n} else { \n    throw new Exception(\""URL not permitted\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nusing(var client = new HttpClient()) { \n    var result = client.GetStringAsync(url).Result; \n}""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://cdn.safecontent.com/\"")) { \n    using(var client = new HttpClient()) { \n        var result = client.GetStringAsync(url).Result; \n    } \n} else { \n    throw new Exception(\""URL not allowed\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nusing(WebClient wc = new WebClient()) { \n    string data = wc.DownloadString(url); \n}""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://files.safe.net/\"")) { \n    using(WebClient wc = new WebClient()) { \n        string data = wc.DownloadString(url); \n    } \n} else { \n    throw new Exception(\""URL not allowed\""); \n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(""url"");\nURL target = new URL(url);\nURLConnection conn = target.openConnection();\nInputStream in = conn.getInputStream();","String url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://api.trusted.com/"")) {\n    URL target = new URL(url);\n    URLConnection conn = target.openConnection();\n    InputStream in = conn.getInputStream();\n} else {\n    throw new SecurityException(""URL not allowed"");\n}"
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[""url""];\nWebClient client = new WebClient();\nstring result = client.DownloadString(url);","string url = Request.QueryString[""url""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(""https://api.safesite.com/"")) {\n    WebClient client = new WebClient();\n    string result = client.DownloadString(url);\n} else {\n    throw new Exception(""URL not allowed"");\n}"
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[""url""];\nHttpClient client = new HttpClient();\nvar response = client.GetStringAsync(url).Result;","string url = Request.QueryString[""url""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(""https://secure.api.com/"")) {\n    HttpClient client = new HttpClient();\n    var response = client.GetStringAsync(url).Result;\n} else {\n    throw new Exception(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURL target = new URL(url);\nInputStream response = target.openStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    URL target = new URL(url);\n    InputStream response = target.openStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\nInputStream in = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    InputStream in = conn.getInputStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpGet get = new HttpGet(url);\nHttpResponse response = HttpClientBuilder.create().build().execute(get);""","String url = request.getParameter(\url\"");\nif(url != null && url.matches(\""^https://(www\\.)?trusted\\.(com|org)/.*$\"")) {\n    HttpGet get = new HttpGet(url);\n    HttpResponse response = HttpClientBuilder.create().build().execute(get);\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURLConnection conn = new URL(url).openConnection();\nconn.setConnectTimeout(5000);\nInputStream is = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    URLConnection conn = new URL(url).openConnection();\n    conn.setConnectTimeout(5000);\n    InputStream is = conn.getInputStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nInputStream stream = new URL(url).openStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    InputStream stream = new URL(url).openStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"CloseableHttpClient client = HttpClients.createDefault();\nHttpGet request = new HttpGet(request.getParameter(\url\""));\nCloseableHttpResponse response = client.execute(request);""","CloseableHttpClient client = HttpClients.createDefault();\nString url = request.getParameter(\url\"");\nif(url != null && url.matches(\""^https://secure\\.trusted\\.net/.*$\"")) {\n    HttpGet request = new HttpGet(url);\n    CloseableHttpResponse response = client.execute(request);\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"try {\n    String url = request.getParameter(\url\"");\n    URL target = new URL(url);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(target.openStream()));\n    String line;\n    while((line = reader.readLine()) != null) {\n        out.println(line);\n    }\n} catch(Exception e) { }""","try {\n    String url = request.getParameter(\url\"");\n    if(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n        URL target = new URL(url);\n        BufferedReader reader = new BufferedReader(new InputStreamReader(target.openStream()));\n        String line;\n        while((line = reader.readLine()) != null) {\n            out.println(line);\n        }\n    } else {\n        throw new SecurityException(\""URL not allowed\"");\n    }\n} catch(Exception e) { }"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nif(url.contains(\""http://\"") || url.contains(\""file://\"")) {\n    URL target = new URL(url);\n    InputStream in = target.openStream();\n    process(in);\n}""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://\"") && url.contains(\""trusted.com\"")) {\n    URL target = new URL(url);\n    InputStream in = target.openStream();\n    process(in);\n} else {\n    throw new SecurityException(\""Invalid URL\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nWebClient client = new WebClient();\nstring result = client.DownloadString(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    WebClient client = new WebClient();\n    string result = client.DownloadString(url);\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nHttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\nHttpWebResponse response = (HttpWebResponse)request.GetResponse();""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n    HttpWebResponse response = (HttpWebResponse)request.GetResponse();\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.Form[\url\""];\nusing(var client = new HttpClient()) {\n    var response = client.GetAsync(url).Result;\n}""","string url = Request.Form[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://secureapi.example.com/\"")) {\n    using(var client = new HttpClient()) {\n        var response = client.GetAsync(url).Result;\n    }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nWebRequest webRequest = WebRequest.Create(url);\nusing(WebResponse webResponse = webRequest.GetResponse()) {\n    // Process response\n}""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    WebRequest webRequest = WebRequest.Create(url);\n    using(WebResponse webResponse = webRequest.GetResponse()) {\n        // Process response\n    }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nvar client = new RestClient(url);\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    var client = new RestClient(url);\n    var request = new RestRequest(Method.GET);\n    IRestResponse response = client.Execute(request);\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\ntry {\n    HttpClient client = new HttpClient();\n    var result = client.GetStringAsync(url).Result;\n} catch(Exception ex) { }""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    try {\n        HttpClient client = new HttpClient();\n        var result = client.GetStringAsync(url).Result;\n    } catch(Exception ex) { }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.Form[\url\""];\nif(url.Contains(\""http://\"") || url.Contains(\""ftp://\"")) {\n    string data = new WebClient().DownloadString(url);\n}""","string url = Request.Form[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://\"") && url.Contains(\""trusted.com\"")) {\n    string data = new WebClient().DownloadString(url);\n} else {\n    throw new Exception(\""Invalid URL\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nvar client = new WebClient();\nbyte[] bytes = client.DownloadData(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    var client = new WebClient();\n    byte[] bytes = client.DownloadData(url);\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nHttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);\nHttpWebResponse resp = (HttpWebResponse)req.GetResponse();""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);\n    HttpWebResponse resp = (HttpWebResponse)req.GetResponse();\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nusing (var client = new HttpClient()) {\n    var response = client.GetAsync(url).Result;\n    var content = response.Content.ReadAsStringAsync().Result;\n}""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://secure.trusted.net/\"")) {\n    using (var client = new HttpClient()) {\n        var response = client.GetAsync(url).Result;\n        var content = response.Content.ReadAsStringAsync().Result;\n    }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE username='"" + userInput + ""'"";"," ""PreparedStatement stmt = conn.prepareStatement(""""SELECT * FROM users WHERE username=?""""); stmt.setString(1, userInput);"""
C#,SQL Injection,"string query = ""SELECT * FROM Users WHERE Username = '"" + username + ""'"";"," ""string query = """"SELECT * FROM Users WHERE Username = @username""""; SqlCommand cmd = new SqlCommand(query); cmd.Parameters.AddWithValue(""""@username"""", username);"""
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE username='"" + userInput + ""'""; Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE username=?""); stmt.setString(1, userInput); ResultSet rs = stmt.executeQuery();"
Java,SQL Injection,"String sql = ""DELETE FROM users WHERE id = '"" + id + ""'""; stmt.executeUpdate(sql);","PreparedStatement ps = conn.prepareStatement(""DELETE FROM users WHERE id = ?""); ps.setString(1, id); ps.executeUpdate();"
Java,SQL Injection,"String query = ""SELECT * FROM accounts WHERE email='"" + email + ""'"";","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM accounts WHERE email=?""); ps.setString(1, email);"
Java,SQL Injection,"Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(""SELECT * FROM users WHERE pass = '"" + pass + ""'"");","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM users WHERE pass = ?""); ps.setString(1, pass); ResultSet rs = ps.executeQuery();"
Java,SQL Injection,"stmt.executeQuery(""SELECT * FROM orders WHERE user = '"" + user + ""'"");","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM orders WHERE user = ?""); ps.setString(1, user); ps.executeQuery();"
Java,SQL Injection,"ResultSet rs = stmt.executeQuery(""SELECT * FROM items WHERE id = '"" + itemId + ""'"");","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM items WHERE id = ?""); ps.setString(1, itemId); ps.executeQuery();"
Java,SQL Injection,"String q = ""SELECT * FROM emp WHERE name='"" + name + ""'""; stmt.executeQuery(q);","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM emp WHERE name = ?""); ps.setString(1, name); ps.executeQuery();"
Java,SQL Injection,"String input = request.getParameter(""query""); stmt.execute(""SELECT * FROM logs WHERE data='"" + input + ""'"");","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM logs WHERE data = ?""); ps.setString(1, input); ps.execute();"
Java,SQL Injection,"String sql = ""SELECT * FROM x WHERE y = '"" + userValue + ""'"";","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM x WHERE y = ?""); ps.setString(1, userValue);"
Java,SQL Injection,"stmt.execute(""SELECT * FROM test WHERE field = '"" + input + ""'"");","PreparedStatement ps = conn.prepareStatement(""SELECT * FROM test WHERE field = ?""); ps.setString(1, input); ps.execute();"
C#,SQL Injection,"string query = ""SELECT * FROM users WHERE username='"" + userInput + ""'""; SqlCommand cmd = new SqlCommand(query, conn);","SqlCommand cmd = new SqlCommand(""SELECT * FROM users WHERE username=@username"", conn); cmd.Parameters.AddWithValue(""@username"", userInput);"
C#,SQL Injection,"string sql = ""DELETE FROM users WHERE id='"" + id + ""'"";","SqlCommand cmd = new SqlCommand(""DELETE FROM users WHERE id=@id"", conn); cmd.Parameters.AddWithValue(""@id"", id);"
C#,SQL Injection,"cmd.CommandText = ""SELECT * FROM accounts WHERE email='"" + email + ""'"";","cmd.CommandText = ""SELECT * FROM accounts WHERE email=@email""; cmd.Parameters.AddWithValue(""@email"", email);"
C#,SQL Injection,"string query = ""SELECT * FROM users WHERE password='"" + password + ""'"";","string query = ""SELECT * FROM users WHERE password=@pass""; cmd.Parameters.AddWithValue(""@pass"", password);"
C#,SQL Injection,"cmd.CommandText = ""SELECT * FROM logs WHERE data='"" + input + ""'"";","cmd.CommandText = ""SELECT * FROM logs WHERE data=@input""; cmd.Parameters.AddWithValue(""@input"", input);"
C#,SQL Injection,"string q = ""SELECT * FROM emp WHERE name='"" + name + ""'"";","SqlCommand cmd = new SqlCommand(""SELECT * FROM emp WHERE name=@name"", conn); cmd.Parameters.AddWithValue(""@name"", name);"
C#,SQL Injection,"string query = ""SELECT * FROM items WHERE id='"" + id + ""'"";","SqlCommand cmd = new SqlCommand(""SELECT * FROM items WHERE id=@id"", conn); cmd.Parameters.AddWithValue(""@id"", id);"
C#,SQL Injection,"string input = Request.QueryString[""query""]; string query = ""SELECT * FROM logs WHERE data='"" + input + ""'"";","string input = Request.QueryString[""query""]; string query = ""SELECT * FROM logs WHERE data=@data""; cmd.Parameters.AddWithValue(""@data"", input);"
C#,SQL Injection,"cmd.CommandText = ""SELECT * FROM x WHERE y='"" + val + ""'"";","cmd.CommandText = ""SELECT * FROM x WHERE y=@val""; cmd.Parameters.AddWithValue(""@val"", val);"
C#,SQL Injection,"string query = ""SELECT * FROM test WHERE field='"" + field + ""'"";","SqlCommand cmd = new SqlCommand(""SELECT * FROM test WHERE field=@field"", conn); cmd.Parameters.AddWithValue(""@field"", field);"
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE username='"" + userInput + ""'""; Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE username=?""); stmt.setString(1, userInput); ResultSet rs = stmt.executeQuery();"
C#,SQL Injection,"string query = ""SELECT * FROM Users WHERE UserId = '"" + userId + ""'""; SqlCommand cmd = new SqlCommand(query, conn);","SqlCommand cmd = new SqlCommand(""SELECT * FROM Users WHERE UserId = @userId"", conn); cmd.Parameters.AddWithValue(""@userId"", userId);"
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE user='"" + input + ""'"";","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE user=?""); stmt.setString(1, input);"
Java,SQL Injection,"stmt.execute(""DELETE FROM users WHERE name='"" + name + ""'"");","PreparedStatement stmt = conn.prepareStatement(""DELETE FROM users WHERE name=?""); stmt.setString(1, name);"
Java,SQL Injection,"ResultSet rs = stmt.executeQuery(""SELECT * FROM users WHERE id="" + userId);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE id=?""); stmt.setInt(1, userId);"
Java,SQL Injection,"db.query(""SELECT * FROM orders WHERE order_id="" + id);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM orders WHERE order_id=?""); stmt.setInt(1, id);"
Java,SQL Injection,"String q = ""SELECT * FROM table WHERE user='"" + user + ""'"";","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM table WHERE user=?""); stmt.setString(1, user);"
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE user='"" + input + ""'"";","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE user=?""); stmt.setString(1, input);"
Java,SQL Injection,"stmt.execute(""DELETE FROM users WHERE name='"" + name + ""'"");","PreparedStatement stmt = conn.prepareStatement(""DELETE FROM users WHERE name=?""); stmt.setString(1, name);"
Java,SQL Injection,"ResultSet rs = stmt.executeQuery(""SELECT * FROM users WHERE id="" + userId);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE id=?""); stmt.setInt(1, userId);"
Java,SQL Injection,"db.query(""SELECT * FROM orders WHERE order_id="" + id);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM orders WHERE order_id=?""); stmt.setInt(1, id);"
Java,SQL Injection,"String q = ""SELECT * FROM table WHERE user='"" + user + ""'"";","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM table WHERE user=?""); stmt.setString(1, user);"
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE name = '"" + username + ""'"";","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE name = ? ""); stmt.setString(1, username);"
Java,SQL Injection,"Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(""SELECT * FROM accounts WHERE id = '"" + accountId + ""'"");","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM accounts WHERE id = ? ""); stmt.setString(1, accountId);"
C#,SQL Injection,"string sql = ""SELECT * FROM users WHERE name = '"" + userInput + ""'"";","SqlCommand cmd = new SqlCommand(""SELECT * FROM users WHERE name = @name"", conn); cmd.Parameters.AddWithValue(""@name"", userInput);"
C#,SQL Injection,"SqlCommand cmd = new SqlCommand(""SELECT * FROM Orders WHERE id='"" + orderId + ""'"", conn);","SqlCommand cmd = new SqlCommand(""SELECT * FROM Orders WHERE id=@id"", conn); cmd.Parameters.AddWithValue(""@id"", orderId);"
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE username='"" + userInput + ""'""; Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query);","PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM users WHERE username=?"");\nstmt.setString(1, userInput);\nResultSet rs = stmt.executeQuery();"
Java,SQL Injection,"String sql = ""DELETE FROM users WHERE id = '"" + id + ""'""; stmt.executeUpdate(sql);","PreparedStatement ps = conn.prepareStatement(""DELETE FROM users WHERE id = ?"");\nps.setString(1, id);\nps.executeUpdate();"
C#,SQL Injection,"string query = ""SELECT * FROM users WHERE username='"" + userInput + ""'""; SqlCommand cmd = new SqlCommand(query, conn);","SqlCommand cmd = new SqlCommand(""SELECT * FROM users WHERE username=@username"", conn);\ncmd.Parameters.AddWithValue(""@username"", userInput);"
C#,SQL Injection,"string sql = ""DELETE FROM users WHERE id='"" + id + ""'"";","SqlCommand cmd = new SqlCommand(""DELETE FROM users WHERE id=@id"", conn);\ncmd.Parameters.AddWithValue(""@id"", id);"
Java,Broken Authentication,"if (user.equals(""admin"")) { login(user); }"," ""if (session.isAuthenticated() && user.equals(""""admin"""")) { login(user); }"""
C#,Broken Authentication,"if (user == ""admin"") { Login(); }"," ""if (HttpContext.Current.User.Identity.IsAuthenticated && user == """"admin"""") { Login(); }"""
Java,Broken Authentication,"if (user.equals(\admin\"")) { login(); }"""," ""if (session.isAuthenticated() && user.equals(\""admin\"")) { login(); }"""
C#,Broken Authentication,"if (user == \admin\"") { Login(); }"""," ""if (HttpContext.Current.User.Identity.IsAuthenticated && user == \""admin\"") { Login(); }"""
Java,Broken Authentication,"if (username.equals(""admin"") && password.equals(""1234"")) { loginSuccess(); }",// Use secure login API with hashed password verification
C#,Broken Authentication,"if (user == ""admin"" && pass == ""admin123"") { Authenticated = true; }",// Use identity provider and hash stored credentials
Java,Broken Authentication,"if (user.getRole().equals(""admin"")) { grantAccess(); }",// Enforce role-based access through RBAC middleware
C#,Broken Authentication,"if (Session[""user""] == ""admin"") { GrantAdmin(); }",// Use token-based authentication and role validation
Java,Broken Authentication,"if (username.equals(""admin"") && password.equals(""1234"")) { loginSuccess(); }",// Use secure login API with hashed password verification
Java,Broken Authentication,"if (user.getRole().equals(""admin"")) { grantAccess(); }",// Enforce role-based access through RBAC middleware
C#,Broken Authentication,"if (user == ""admin"" && pass == ""admin123"") { Authenticated = true; }",// Use identity provider and hash stored credentials
C#,Broken Authentication,"if (Session[""user""] == ""admin"") { GrantAdmin(); }",// Use token-based authentication and role validation
Java,Broken Authentication,"if (username.equals(""admin"") && password.equals(""password"")) {\n    login();\n}","if (verifyPassword(username, password)) {\n    login();\n}"
Java,Broken Authentication,"String token = request.getParameter(""token"");\nif (token.equals(""secret123"")) {\n    // login success\n}","String token = request.getParameter(""token"");\nif (token != null && TokenService.validateToken(token, request.getSession())) {\n    // login success\n}"
Java,Broken Authentication,"User user = userService.findByUsername(username);\nif (user.getPassword().equals(password)) {\n    session.setAttribute(""user"", user);\n}","User user = userService.findByUsername(username);\nif (PasswordUtil.verifyPassword(password, user.getPasswordHash())) {\n    session.setAttribute(""user"", user);\n}"
Java,Broken Authentication,"Cookie authCookie = new Cookie(""auth"", ""user123"");\nresponse.addCookie(authCookie);","Cookie authCookie = new Cookie(""auth"", ""user123"");\nauthCookie.setHttpOnly(true);\nauthCookie.setSecure(true);\nresponse.addCookie(authCookie);"
Java,Broken Authentication,"String username = request.getParameter(""username"");\nString password = request.getParameter(""password"");\nif (UserStore.authenticate(username, password)) {\n    loginUser(username);\n}","String username = request.getParameter(""username"");\nString password = request.getParameter(""password"");\nif (username != null && password != null && UserStore.authenticate(username, hash(password))) {\n    loginUser(username);\n}"
C#,Broken Authentication,"if (username == ""admin"" && password == ""pass123"") {\n    AuthenticateUser(username);\n}","if (AuthenticationService.ValidateCredentials(username, password)) {\n    AuthenticateUser(username);\n}"
C#,Broken Authentication,"User user = userRepo.GetUser(username);\nif (user.Password == password) {\n    Session[""User""] = user;\n}","User user = userRepo.GetUser(username);\nif (PasswordHasher.Verify(password, user.PasswordHash)) {\n    Session[""User""] = user;\n}"
C#,Broken Authentication,"string token = Request.QueryString[""token""];\nif(token == ""secretToken"") {\n    SignInUser();\n}","string token = Request.QueryString[""token""];\nif(token != null && TokenValidator.Validate(token)) {\n    SignInUser();\n}"
C#,Broken Authentication,"Logger.Log(""User logged in: "" + username + "", password: "" + password);","Logger.Log(""User logged in: "" + username);"
C#,Broken Authentication,"if (username == ""user"" && password == ""password"") {\n    FormsAuthentication.SetAuthCookie(username, false);\n}","if (Membership.ValidateUser(username, password)) {\n    FormsAuthentication.SetAuthCookie(username, true);\n}"
Java,Broken Authentication,"String username = request.getParameter(""username"");\nString password = request.getParameter(""password"");\nif(username.equals(""admin"") && password.equals(""admin123"")) {\n    login();\n}","String username = request.getParameter(""username"");\nString password = request.getParameter(""password"");\nif(UserService.authenticate(username, password)) {\n    login();\n} else {\n    throw new SecurityException(""Authentication failed"");\n}"
C#,Broken Authentication,"string username = Request.Form[""username""];\nstring password = Request.Form[""password""];\nif(username == ""admin"" && password == ""pass123"") {\n    SignIn();\n}","string username = Request.Form[""username""];\nstring password = Request.Form[""password""];\nif(AuthenticationService.ValidateUser(username, password)) {\n    SignIn();\n} else {\n    throw new Exception(""Authentication failed"");\n}"
Java,Broken Authentication,"if(username.equals(\admin\"") && password.equals(\""password123\"")) { loginUser(); }""","if(UserService.authenticate(username, password)) { loginUser(); } else { throw new SecurityException(\Invalid credentials\""); }"""
Java,Broken Authentication,"String token = \ABC123\"";\nif(token.equals(request.getParameter(\""token\""))) { loginUser(); }""","String token = TokenService.generateSecureToken();\nTokenService.storeTokenForUser(username, token);\nif(token.equals(request.getParameter(\token\""))) { loginUser(); } else { throw new SecurityException(\""Invalid token\""); }"""
Java,Broken Authentication,"if(UserStore.authenticate(username, password)) { loginUser(); }","if(UserStore.authenticate(username, password)) {\n    if(!LoginAttemptService.isLocked(username)) {\n        loginUser();\n    } else {\n        throw new SecurityException(\Account locked\"");\n    }\n} else {\n    LoginAttemptService.recordFailedAttempt(username);\n    throw new SecurityException(\""Invalid credentials\"");\n}"""
Java,Broken Authentication,"String authHeader = request.getHeader(\Authorization\"");\nif(authHeader != null && authHeader.equals(\""Basic dXNlcjpwYXNz\"")) { accessGranted(); }""","String authHeader = request.getHeader(\Authorization\"");\nif(authHeader != null && AuthService.validateBasicAuth(authHeader)) { accessGranted(); } else { throw new SecurityException(\""Unauthorized\""); }"""
C#,Broken Authentication,"if(username == \admin\"" && password == \""adminpass\"") {\n    SignIn();\n}""","if(AuthenticationService.ValidateUser(username, password)) {\n    SignIn();\n} else {\n    throw new Exception(\Invalid credentials\"");\n}"""
C#,Broken Authentication,"User user = userRepo.GetUser(username);\nif(user.Password == password) {\n    Session[\User\""] = user;\n}""","User user = userRepo.GetUser(username);\nif(PasswordHasher.Verify(password, user.PasswordHash)) {\n    Session[\User\""] = user;\n} else {\n    throw new Exception(\""Authentication failed\"");\n}"""
C#,Broken Authentication,"string token = Request.QueryString[\token\""];\nif(token == \""FIXEDTOKEN\"") { SignIn(); }""","string token = Request.QueryString[\token\""];\nif(TokenValidator.Validate(token)) { SignIn(); } else { throw new Exception(\""Invalid token\""); }"""
C#,Broken Authentication,"string authHeader = Request.Headers[\Authorization\""];\nif(authHeader != null && authHeader == \""Basic dXNlcjpwYXNz\"") { AccessGranted(); }""","string authHeader = Request.Headers[\Authorization\""];\nif(authHeader != null && AuthService.ValidateBasicAuth(authHeader)) { AccessGranted(); } else { throw new Exception(\""Unauthorized access\""); }"""
Java,Privilege Escalation,"String role = request.getParameter(""role"");\nif(""admin"".equals(role)) {\n    grantAllPermissions(user);\n}","String userRole = session.getAttribute(\role\"").toString();\nif(\""admin\"".equals(userRole)) {\n    grantAllPermissions(user);\n}"""
Java,Privilege Escalation,"if(request.getParameter(\role\"").equals(\""admin\"")) { grantAdminAccess(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { grantAdminAccess(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"String role = request.getParameter(\userRole\"");\n// Vulnerable: Using user-provided role to set privileges\nuser.setRole(role);""",user.setRole(User.Role.USER); \n// Role change allowed only through secure admin operations
Java,Privilege Escalation,"if(request.getParameter(\accessLevel\"").equals(\""superuser\"")) { enableSuperFeatures(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).hasPrivilege(\""SUPERUSER\"")) { enableSuperFeatures(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\isAdmin\"").equals(\""true\"")) { adminPanel(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { adminPanel(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"String role = request.getParameter(\role\"");\n// Vulnerable: Setting role based solely on request parameter\nuser.setRole(role);""","user.setRole(((User)session.getAttribute(\user\"")).getRole());"""
Java,Privilege Escalation,"if(request.getParameter(\privilege\"") != null) { elevatePrivileges(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isPrivileged()) { elevatePrivileges(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\admin\"").equals(\""yes\"")) { allowAdminOperation(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { allowAdminOperation(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"updateUserProfile(request.getParameter(\profileData\"")); // No check on user roles""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).canUpdateProfile()) { updateUserProfile(request.getParameter(\""profileData\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\deleteUser\"") != null) { userService.deleteUser(request.getParameter(\""userId\"")); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { userService.deleteUser(request.getParameter(\""userId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\accessReport\"").equals(\""true\"")) { generateReport(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).hasPrivilege(\""VIEW_REPORTS\"")) { generateReport(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"String secretData = request.getParameter(\secret\"");\n// Vulnerable: Directly using client parameter to access secret info\naccessSecret(secretData);""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { accessSecret(SecureDataStore.getSecret()); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\upgrade\"") != null) { upgradeAccount(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isEligibleForUpgrade()) { upgradeAccount(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\setRole\"").equals(\""admin\"")) { user.setRole(\""admin\""); }""","// Fixed: Role changes must be handled via secure backend logic, not user input\nif(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isSuperAdmin()) { user.setRole(\""admin\""); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"String role = request.getParameter(\role\"");\nuser.setRole(role);""",user.setRole(User.Role.USER);
Java,Privilege Escalation,"if(request.getParameter(\becomeAdmin\"").equals(\""true\"")) { makeAdmin(user); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isSuperAdmin()) { makeAdmin(user); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\priv\"") != null) { setPrivileges(request.getParameter(\""priv\"")); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { setPrivileges(request.getParameter(\""priv\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"setUserType(request.getParameter(\userType\"")); // Vulnerable: Trusting user input for type""",setUserType(UserType.USER); 
Java,Privilege Escalation,"if(param.equals(\elevate\"")) { enableElevatedMode(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).hasPrivilege(\""ELEVATED_MODE\"")) { enableElevatedMode(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"updateAccount(request.getParameter(\accountData\"")); // No role check""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).canUpdateAccount()) { updateAccount(request.getParameter(\""accountData\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\grantAccess\"") != null) { grantAccessToFeature(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).hasPrivilege(\""FEATURE_ACCESS\"")) { grantAccessToFeature(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,setAdminFlag(true); // Vulnerable if flag set via client input,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isSuperAdmin()) { setAdminFlag(true); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\upgradeLevel\"").equals(\""2\"")) { upgradeUserLevel(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).hasPrivilege(\""UPGRADE_LEVEL\"")) { upgradeUserLevel(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"String adminParam = request.getParameter(\adminAction\"");\nif(adminParam.equals(\""delete\"")) { deleteRecord(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { if(adminParam.equals(\""delete\"")) { deleteRecord(); } } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Privilege Escalation,"if(request.getParameter(\roleChange\"") != null) { changeRole(request.getParameter(\""roleChange\"")); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isSuperAdmin()) { changeRole(request.getParameter(\""roleChange\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
C#,Privilege Escalation,"if(Request.QueryString[\role\""] == \""admin\"") { GrantAdminAccess(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { GrantAdminAccess(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"string level = Request.Form[\accessLevel\""];\nif(level == \""superuser\"") { EnableSuperUserFeatures(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""SUPERUSER\"")) { EnableSuperUserFeatures(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\upgrade\""] == \""true\"") { UpgradeAccount(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).CanUpgradeAccount) { UpgradeAccount(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"User user = userService.GetUserByUsername(Request.QueryString[\username\""]); user.Role = Request.QueryString[\""role\""];""","User user = userService.GetUserByUsername(Request.QueryString[\username\""]);"
C#,Privilege Escalation,"if(Request.Form[\setAdmin\""] == \""yes\"") { SetUserAsAdmin(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsSuperAdmin) { SetUserAsAdmin(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.QueryString[\elevate\""] == \""true\"") { EnableElevatedMode(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""ELEVATED_MODE\"")) { EnableElevatedMode(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\changeRole\""] != null) {\n    ChangeUserRole(Request.Params[\""role\""]);\n}""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsSuperAdmin) {\n    ChangeUserRole(Request.Params[\""role\""]);\n} else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\setPrivilege\""] == \""all\"") { GrantAllPrivileges(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { GrantAllPrivileges(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"string newRole = Request.Form[\newRole\""];\nUpdateRole(newRole);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsSuperAdmin) { string newRole = Request.Form[\""newRole\""]; UpdateRole(newRole); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\adminAction\""] == \""delete\"") { DeleteUser(Request.Params[\""userId\""]); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { if(Request.Params[\""adminAction\""] == \""delete\"") { DeleteUser(Request.Params[\""userId\""]); } } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.QueryString[\upgradeLevel\""] == \""2\"") { UpgradeLevel(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""UPGRADE_LEVEL\"")) { if(Request.QueryString[\""upgradeLevel\""] == \""2\"") { UpgradeLevel(); } } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,AccessSecretData(); // No check on user role,"if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { AccessSecretData(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"ChangePassword(Request.Form[\newPassword\""]); // No privilege check""","if(Session[\user\""] != null && ((User)Session[\""user\""]).CanChangePassword) { ChangePassword(Request.Form[\""newPassword\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\action\""] == \""grantAccess\"") { GrantAccess(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""GRANT_ACCESS\"")) { GrantAccess(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"DeleteRecord(Request.QueryString[\recordId\""]);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { DeleteRecord(Request.QueryString[\""recordId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.QueryString[\adminDashboard\""] == \""true\"") { ShowAdminDashboard(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { ShowAdminDashboard(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"UpdateSystemSettings(Request.Form[\settingsData\""]);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""UPDATE_SETTINGS\"")) { UpdateSystemSettings(Request.Form[\""settingsData\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"ProcessTransaction(Request.Form[\transactionId\""]);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""PROCESS_TRANSACTION\"")) { ProcessTransaction(Request.Form[\""transactionId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\accessHR\""] == \""true\"") { AccessHRData(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsHR) { AccessHRData(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.QueryString[\modifyConfig\""] == \""yes\"") { ModifyConfiguration(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""MODIFY_CONFIG\"")) { ModifyConfiguration(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,UpdateUserProfile(); // No privilege check,"if(Session[\user\""] != null && ((User)Session[\""user\""]).CanUpdateProfile) { UpdateUserProfile(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.QueryString[\setPrivilege\""] == \""all\"") { SetAllPrivileges(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsSuperAdmin) { SetAllPrivileges(); } else { throw new UnauthorizedAccessException(); }"""
C#,Privilege Escalation,"if(Request.Params[\promote\""] == \""true\"") { PromoteUser(Request.Params[\""userId\""]); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { if(Request.Params[\""promote\""] == \""true\"") { PromoteUser(Request.Params[\""userId\""]); } } else { throw new UnauthorizedAccessException(); }"""
Java,Insecure Deserialization,FileInputStream fis = new FileInputStream(file);\nObjectInputStream ois = new ObjectInputStream(fis);\nObject obj = ois.readObject();,"FileInputStream fis = new FileInputStream(file);\nObjectInputStream ois = new ObjectInputStream(fis);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(\com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,Socket socket = serverSocket.accept();\nObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\nObject data = ois.readObject();,"Socket socket = serverSocket.accept();\nObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(\com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject data = ois.readObject();"""
Java,Insecure Deserialization,XStream xstream = new XStream();\nMyClass obj = (MyClass) xstream.fromXML(xmlInput);,XStream xstream = new XStream();\nxstream.allowTypes(new Class[] { MyClass.class });\nMyClass obj = (MyClass) xstream.fromXML(xmlInput);
Java,Insecure Deserialization,"XMLDecoder decoder = new XMLDecoder(new FileInputStream(\data.xml\""));\nObject obj = decoder.readObject();\ndecoder.close();""","JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nMyClass obj = (MyClass) unmarshaller.unmarshal(new File(\data.xml\""));"""
Java,Insecure Deserialization,Yaml yaml = new Yaml();\nMyClass obj = yaml.load(yamlInput);,Constructor constructor = new Constructor(MyClass.class);\nYaml yaml = new Yaml(constructor);\nMyClass obj = yaml.load(yamlInput);
Java,Insecure Deserialization,"ObjectMapper mapper = new ObjectMapper();\nmapper.enableDefaultTyping();\nMyClass obj = mapper.readValue(jsonInput, MyClass.class);","ObjectMapper mapper = new ObjectMapper();\n// Do not enable default typing; use explicit type references\nMyClass obj = mapper.readValue(jsonInput, MyClass.class);"
Java,Insecure Deserialization,ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nObject obj = ois.readObject();,"ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(\com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,InputStream is = request.getInputStream();\nObjectInputStream ois = new ObjectInputStream(is);\nObject obj = ois.readObject();,"InputStream is = request.getInputStream();\nObjectInputStream ois = new ObjectInputStream(is);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(\com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,LegacyDeserializer ld = new LegacyDeserializer();\nObject obj = ld.deserialize(data);,LegacyDeserializer ld = new LegacyDeserializer();\nld.setAllowedClasses(new Class[]{ MyAllowedClass.class });\nObject obj = ld.deserialize(data);
Java,Insecure Deserialization,CustomParser parser = new CustomParser();\nObject obj = parser.parse(data);,"CustomParser parser = new CustomParser();\nparser.setAllowedTypes(Arrays.asList(MyClass.class, AnotherClass.class));\nObject obj = parser.parse(data);"
Java,Insecure Deserialization,XMLDecoder decoder = new XMLDecoder(new ByteArrayInputStream(xmlData.getBytes()));\nObject obj = decoder.readObject();\ndecoder.close();,JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nMyClass obj = (MyClass) unmarshaller.unmarshal(new ByteArrayInputStream(xmlData.getBytes()));
Java,Insecure Deserialization,ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(serializedArray));\nObject[] arr = (Object[]) ois.readObject();,ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(serializedArray));\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && (clz.equals(MyClass.class) || clz.equals(ArrayList.class))) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject[] arr = (Object[]) ois.readObject();
Java,Insecure Deserialization,"FileInputStream fis = new FileInputStream(""data.bin"");\nObjectInputStream ois = new ObjectInputStream(fis);\nObject obj = ois.readObject();\nois.close();","FileInputStream fis = new FileInputStream(""data.bin"");\nObjectInputStream ois = new ObjectInputStream(fis);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(""com.myapp."")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();\nois.close();"
Java,Insecure Deserialization,Yaml yaml = new Yaml();\nMyClass obj = yaml.load(yamlData);,Constructor constructor = new Constructor(MyClass.class);\nYaml yaml = new Yaml(constructor);\nMyClass obj = yaml.load(yamlData);
Java,Insecure Deserialization,XStream xstream = new XStream();\nMyClass obj = (MyClass)xstream.fromXML(xmlData);,XStream xstream = new XStream();\nxstream.allowTypes(new Class[] { MyClass.class });\nMyClass obj = (MyClass)xstream.fromXML(xmlData);
Java,Insecure Deserialization,byte[] data = getData();\nObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data));\nObject obj = ois.readObject();,"byte[] data = getData();\nObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data));\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(""com.myapp."")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"
Java,Insecure Deserialization,CustomBinaryDeserializer cbd = new CustomBinaryDeserializer();\nObject result = cbd.deserialize(binaryData);,"CustomBinaryDeserializer cbd = new CustomBinaryDeserializer();\ncbd.setAllowedTypes(Arrays.asList(MyClass.class, AnotherClass.class));\nObject result = cbd.deserialize(binaryData);"
Java,Insecure Deserialization,Object obj = SerializationUtils.deserialize(serializedData);,"ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(""com.myapp."")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"
Java,Insecure Deserialization,"XMLDecoder decoder = new XMLDecoder(new FileInputStream(""data.xml""));\nObject obj = decoder.readObject();\ndecoder.close();","XMLDecoder decoder = new XMLDecoder(new FileInputStream(""data.xml""));\n// Alternatively, use JAXB with secure settings\nObject obj = decoder.readObject();\ndecoder.close();  // Ensure secure configuration or use JAXB"
Java,Insecure Deserialization,"ObjectInputStream ois = new ObjectInputStream(new FileInputStream(""list.bin""));\nList list = (List) ois.readObject();","ObjectInputStream ois = new ObjectInputStream(new FileInputStream(""list.bin""));\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    if(clz != null && (clz.equals(ArrayList.class) || clz.equals(MyClass.class))) {\n         return ObjectInputFilter.Status.ALLOWED;\n    }\n    return ObjectInputFilter.Status.REJECTED;\n});\nList list = (List) ois.readObject();"
Java,Insecure Deserialization,"Kryo kryo = new Kryo();\nInput input = new Input(new FileInputStream(""object.bin""));\nMyClass obj = kryo.readObject(input, MyClass.class);\ninput.close();","Kryo kryo = new Kryo();\nkryo.register(MyClass.class);\nInput input = new Input(new FileInputStream(""object.bin""));\nMyClass obj = kryo.readObject(input, MyClass.class);\ninput.close();"
Java,Insecure Deserialization,CustomXMLParser parser = new CustomXMLParser();\nObject obj = parser.parse(xmlData);,"CustomXMLParser parser = new CustomXMLParser();\nparser.setAllowedElements(Arrays.asList(""allowedElement1"", ""allowedElement2""));\nObject obj = parser.parse(xmlData);"
Java,Insecure Deserialization,ObjectInputStream ois = new ObjectInputStream(rmiSocket.getInputStream());\nObject obj = ois.readObject();,"ObjectInputStream ois = new ObjectInputStream(rmiSocket.getInputStream());\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(""com.myapp."")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"
Java,Insecure Deserialization,"XMLDecoder decoder = new XMLDecoder(new FileInputStream(""untrusted.xml""));\nObject obj = decoder.readObject();","JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nMyClass obj = (MyClass) unmarshaller.unmarshal(new File(""untrusted.xml"")); "
Java,Insecure Deserialization,InputStream netIn = socket.getInputStream();\nObjectInputStream ois = new ObjectInputStream(netIn);\nObject obj = ois.readObject();,"InputStream netIn = socket.getInputStream();\nObjectInputStream ois = new ObjectInputStream(netIn);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(""com.myapp."")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"
Java,Insecure Deserialization,byte[] data = getUntrustedData();\nByteArrayInputStream bis = new ByteArrayInputStream(data);\nObjectInputStream ois = new ObjectInputStream(bis);\nObject obj = ois.readObject();,"byte[] data = getUntrustedData();\nByteArrayInputStream bis = new ByteArrayInputStream(data);\nObjectInputStream ois = new ObjectInputStream(bis);\nois.setObjectInputFilter(info -> {\n    Class<?> clz = info.serialClass();\n    return (clz != null && clz.getName().startsWith(""com.myapp."")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED;\n});\nObject obj = ois.readObject();"
C#,Insecure Deserialization,"BinaryFormatter formatter = new BinaryFormatter();\nusing(FileStream fs = new FileStream(filePath, FileMode.Open)) {\n    var obj = formatter.Deserialize(fs);\n}","BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new KnownTypesBinder(new List<Type> { typeof(MyAllowedClass) });\nusing(FileStream fs = new FileStream(filePath, FileMode.Open)) {\n    var obj = formatter.Deserialize(fs);\n}"
C#,Insecure Deserialization,"SoapFormatter formatter = new SoapFormatter();\nusing(FileStream fs = new FileStream(filePath, FileMode.Open)) {\n    var obj = formatter.Deserialize(fs);\n}","DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nusing(FileStream fs = new FileStream(filePath, FileMode.Open)) {\n    var obj = serializer.ReadObject(fs);\n}"
C#,Insecure Deserialization,NetDataContractSerializer serializer = new NetDataContractSerializer();\nobject obj = serializer.Deserialize(stream);,DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nobject obj = serializer.ReadObject(stream);
C#,Insecure Deserialization,BinaryFormatter formatter = new BinaryFormatter();\nobject obj = formatter.Deserialize(fs);,BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new SafeSerializationBinder();\nobject obj = formatter.Deserialize(fs);
C#,Insecure Deserialization,CustomDeserializer deserializer = new CustomDeserializer();\nobject obj = deserializer.Deserialize(data);,"CustomDeserializer deserializer = new CustomDeserializer();\ndeserializer.AllowedTypes = new List<Type> { typeof(MyClass), typeof(List<MyClass>) };\nobject obj = deserializer.Deserialize(data);"
C#,Insecure Deserialization,var jwt = new JwtSecurityToken(token);\nvar claim = jwt.Claims.First().Value;,"var tokenHandler = new JwtSecurityTokenHandler();\nvar validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])),\n    ValidateLifetime = true,\n    ValidateIssuer = true,\n    ValidIssuer = """"trustedIssuer"""",\n    ValidateAudience = true,\n    ValidAudience = """"trustedAudience"""",\n    ClockSkew = TimeSpan.Zero\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure Deserialization,BinaryFormatter formatter = new BinaryFormatter();\nusing(Stream s = new MemoryStream(data)) {\n    object obj = formatter.Deserialize(s);\n},"BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new SafeSerializationBinder();\nusing(Stream s = new MemoryStream(data)) {\n    try { object obj = formatter.Deserialize(s); } catch(Exception ex) { throw new SecurityException(""Deserialization failed"", ex); }\n}"
C#,Insecure Deserialization,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring userId = jwtToken.Claims.First(c => c.Type == ""userId"").Value;","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])),\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring userId = principal.FindFirst(""""userId"""")?.Value;"""
C#,Insecure Deserialization,BinaryFormatter formatter = new BinaryFormatter();\nobject obj = formatter.Deserialize(fs);,BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new KnownTypesBinder(new List<Type> { typeof(MyAllowedClass) });\nobject obj = formatter.Deserialize(fs);
C#,Insecure Deserialization,object obj = CustomDeserializer.Deserialize(data);,"object obj = CustomDeserializer.Deserialize(data, new List<Type> { typeof(MyClass), typeof(AllowedType) });"
C#,Insecure Deserialization,NetDataContractSerializer serializer = new NetDataContractSerializer();\nobject obj = serializer.Deserialize(stream);,DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nobject obj = serializer.ReadObject(stream);
C#,Insecure Deserialization,MemoryStream ms = new MemoryStream(data);\nBinaryFormatter formatter = new BinaryFormatter();\nobject result = formatter.Deserialize(ms);,MemoryStream ms = new MemoryStream(data);\nBinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new SafeSerializationBinder();\nobject result = formatter.Deserialize(ms);
C#,Insecure Deserialization,"var obj = JsonConvert.DeserializeObject(jsonData, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var obj = JsonConvert.DeserializeObject(jsonData, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure Deserialization,"SoapFormatter formatter = new SoapFormatter();\nusing(Stream fs = new FileStream(filePath, FileMode.Open)) {\n    object obj = formatter.Deserialize(fs);\n}","DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nusing(Stream fs = new FileStream(filePath, FileMode.Open)) {\n    object obj = serializer.ReadObject(fs);\n}"
C#,Insecure Deserialization,var token = tokenHandler.ReadJwtToken(jwtString);\nvar claim = token.Claims.FirstOrDefault().Value;,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(jwtString, validationParameters, out validatedToken);\nvar claim = principal.FindFirst(\""claim\"")?.Value;"""
C#,Insecure Deserialization,"IFormatter formatter = new BinaryFormatter(); Stream stream = new FileStream(""data.bin"", FileMode.Open); object obj = formatter.Deserialize(stream);"," ""// Use a secure serializer like DataContractSerializer"""
Java,Insecure Deserialization,"ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\data.ser\"")); Object obj = ois.readObject();"""," ""Object obj = safeDeserialize(new FileInputStream(\""data.ser\""));"""
C#,Insecure Deserialization,"IFormatter formatter = new BinaryFormatter(); Stream stream = new FileStream(\data.bin\"""," FileMode.Open); object obj = formatter.Deserialize(stream);""  ""Use secure serialization libraries like DataContractSerializer or JSON.NET with type constraints."""
Java,Insecure Deserialization,ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file)); Object obj = ois.readObject();,ObjectInputStream ois = new ValidatingObjectInputStream(new FileInputStream(file));
C#,Insecure Deserialization,BinaryFormatter bf = new BinaryFormatter(); object obj = bf.Deserialize(ms);,CustomSafeFormatter bf = new CustomSafeFormatter(); object obj = bf.Deserialize(ms);
Java,Insecure Deserialization,ObjectInputStream in = new ObjectInputStream(new FileInputStream(file)); Object obj = in.readObject();,// Use a safe deserialization library or perform input validation
C#,Insecure Deserialization,BinaryFormatter bf = new BinaryFormatter(); object obj = bf.Deserialize(ms);,// Avoid BinaryFormatter; use JSON serializers with type checking
C#,Insecure Deserialization,"IFormatter formatter = new BinaryFormatter(); Stream stream = new FileStream(""data.bin"", FileMode.Open); object obj = formatter.Deserialize(stream);",// Use a secure serializer like DataContractJsonSerializer with type constraints
Java,Insecure Deserialization,ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file)); Object obj = ois.readObject();,// Use a safe deserialization library or perform input validation on the stream
Java,Insecure Deserialization,"FileInputStream fis = new FileInputStream(\data.bin\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nObject obj = ois.readObject();""","FileInputStream fis = new FileInputStream(\data.bin\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && (clz.equals(MyAllowedClass.class) || clz.equals(java.util.ArrayList.class))) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,XStream xstream = new XStream();\nMyClass obj = (MyClass) xstream.fromXML(xmlInput);,XStream xstream = new XStream();\nxstream.allowTypes(new Class[] { MyClass.class });\nMyClass obj = (MyClass) xstream.fromXML(xmlInput);
Java,Insecure Deserialization,ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nObject obj = ois.readObject();,"ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && clz.getName().startsWith(\com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,Socket socket = serverSocket.accept();\nObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\nObject data = ois.readObject();,Socket socket = serverSocket.accept();\nObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && (clz.equals(MyAllowedClass.class) || clz.equals(String.class))) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject data = ois.readObject();
Java,Insecure Deserialization,"XMLDecoder decoder = new XMLDecoder(new FileInputStream(\data.xml\""));\nObject obj = decoder.readObject();\ndecoder.close();""","JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nMyClass obj = (MyClass) unmarshaller.unmarshal(new File(\data.xml\""));"""
Java,Insecure Deserialization,Yaml yaml = new Yaml();\nMyClass obj = yaml.load(yamlInput);,Yaml yaml = new Yaml(new Constructor(MyClass.class));\nMyClass obj = yaml.load(yamlInput);
Java,Insecure Deserialization,"ObjectMapper mapper = new ObjectMapper();\nmapper.enableDefaultTyping();\nMyClass obj = mapper.readValue(jsonInput, MyClass.class);","ObjectMapper mapper = new ObjectMapper();\n// Disable default typing to avoid arbitrary polymorphic deserialization\nMyClass obj = mapper.readValue(jsonInput, MyClass.class);"
Java,Insecure Deserialization,"FileInputStream fis = new FileInputStream(\object.dat\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nObject obj = ois.readObject();\nois.close();""","FileInputStream fis = new FileInputStream(\object.dat\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && clz.getName().startsWith(\""com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();\nois.close();"""
Java,Insecure Deserialization,"URL url = new URL(request.getParameter(\url\""));\nObjectInputStream ois = new ObjectInputStream(url.openStream());\nObject obj = ois.readObject();""","URL url = new URL(request.getParameter(\url\""));\nObjectInputStream ois = new ObjectInputStream(url.openStream());\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && clz.equals(String.class)) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,"HessianInput input = new HessianInput(new FileInputStream(\object.bin\""));\nObject obj = input.readObject();""","HessianInput input = new HessianInput(new FileInputStream(\object.bin\""));\ninput.setSerializerFactory(getWhitelistedSerializerFactory());\nObject obj = input.readObject();"""
C#,Insecure Deserialization,"var obj = JsonConvert.DeserializeObject(json, new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.Auto\n});","var obj = JsonConvert.DeserializeObject(json, new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.None\n});"
C#,Insecure Deserialization,BinaryFormatter formatter = new BinaryFormatter();\nformatter.AssemblyFormat = FormatterAssemblyStyle.Simple;\nobject obj = formatter.Deserialize(stream);,BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new SafeSerializationBinder();\nobject obj = formatter.Deserialize(stream);
C#,Insecure Deserialization,NetDataContractSerializer serializer = new NetDataContractSerializer();\nobject obj = serializer.Deserialize(stream);,DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nobject obj = serializer.ReadObject(stream);
C#,Insecure Deserialization,"var obj = JsonConvert.DeserializeObject(jsonString, typeof(object), new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.All\n});","var obj = JsonConvert.DeserializeObject(jsonString, new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.None\n});"
C#,Insecure Deserialization,"var formatter = new ObjectStateFormatter();\nvar obj = formatter.Deserialize(Request.Form[\viewstate\""]);""","var formatter = new ObjectStateFormatter();\nformatter.AllowSerializationInTypeCache = false;\nvar obj = formatter.Deserialize(Request.Form[\viewstate\""]);"""
C#,Insecure Deserialization,"LosFormatter formatter = new LosFormatter();\nobject obj = formatter.Deserialize(Request.Form[\__VIEWSTATE\""]);""","LosFormatter formatter = new LosFormatter();\nif(ValidateViewState(Request.Form[\__VIEWSTATE\""])) {\n    object obj = formatter.Deserialize(Request.Form[\""__VIEWSTATE\""]);\n} else {\n    throw new SecurityException(\""Invalid viewstate\"");\n}"""
C#,Insecure Deserialization,DataContractSerializer serializer = new DataContractSerializer(typeof(object));\nobject obj = serializer.ReadObject(stream);,DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nobject obj = serializer.ReadObject(stream);
Java,Insecure Deserialization,"FileInputStream fis = new FileInputStream(\data.bin\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nObject obj = ois.readObject();""","FileInputStream fis = new FileInputStream(\data.bin\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && (clz.equals(MyAllowedClass.class) || clz.equals(java.util.ArrayList.class))) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,XStream xstream = new XStream();\nMyClass obj = (MyClass) xstream.fromXML(xmlInput);,XStream xstream = new XStream();\nxstream.allowTypes(new Class[] { MyClass.class });\nMyClass obj = (MyClass) xstream.fromXML(xmlInput);
Java,Insecure Deserialization,ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nObject obj = ois.readObject();,"ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);\nObjectInputStream ois = new ObjectInputStream(bis);\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && clz.getName().startsWith(\com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,Socket socket = serverSocket.accept();\nObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\nObject data = ois.readObject();,Socket socket = serverSocket.accept();\nObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && (clz.equals(MyAllowedClass.class) || clz.equals(String.class))) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject data = ois.readObject();
Java,Insecure Deserialization,"XMLDecoder decoder = new XMLDecoder(new FileInputStream(\data.xml\""));\nObject obj = decoder.readObject();\ndecoder.close();""","JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nMyClass obj = (MyClass) unmarshaller.unmarshal(new File(\data.xml\""));"""
Java,Insecure Deserialization,Yaml yaml = new Yaml();\nMyClass obj = yaml.load(yamlInput);,Yaml yaml = new Yaml(new Constructor(MyClass.class));\nMyClass obj = yaml.load(yamlInput);
Java,Insecure Deserialization,"ObjectMapper mapper = new ObjectMapper();\nmapper.enableDefaultTyping();\nMyClass obj = mapper.readValue(jsonInput, MyClass.class);","ObjectMapper mapper = new ObjectMapper();\n// Disable default typing to avoid arbitrary polymorphic deserialization\nMyClass obj = mapper.readValue(jsonInput, MyClass.class);"
Java,Insecure Deserialization,"FileInputStream fis = new FileInputStream(\object.dat\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nObject obj = ois.readObject();\nois.close();""","FileInputStream fis = new FileInputStream(\object.dat\"");\nObjectInputStream ois = new ObjectInputStream(fis);\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && clz.getName().startsWith(\""com.myapp.\"")) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();\nois.close();"""
Java,Insecure Deserialization,"URL url = new URL(request.getParameter(\url\""));\nObjectInputStream ois = new ObjectInputStream(url.openStream());\nObject obj = ois.readObject();""","URL url = new URL(request.getParameter(\url\""));\nObjectInputStream ois = new ObjectInputStream(url.openStream());\nois.setObjectInputFilter(info -> { Class<?> clz = info.serialClass(); return (clz != null && clz.equals(String.class)) ? ObjectInputFilter.Status.ALLOWED : ObjectInputFilter.Status.REJECTED; });\nObject obj = ois.readObject();"""
Java,Insecure Deserialization,"HessianInput input = new HessianInput(new FileInputStream(\object.bin\""));\nObject obj = input.readObject();""","HessianInput input = new HessianInput(new FileInputStream(\object.bin\""));\ninput.setSerializerFactory(getWhitelistedSerializerFactory());\nObject obj = input.readObject();"""
C#,Insecure Deserialization,"var obj = JsonConvert.DeserializeObject(json, new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.Auto\n});","var obj = JsonConvert.DeserializeObject(json, new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.None\n});"
C#,Insecure Deserialization,BinaryFormatter formatter = new BinaryFormatter();\nformatter.AssemblyFormat = FormatterAssemblyStyle.Simple;\nobject obj = formatter.Deserialize(stream);,BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new SafeSerializationBinder();\nobject obj = formatter.Deserialize(stream);
C#,Insecure Deserialization,NetDataContractSerializer serializer = new NetDataContractSerializer();\nobject obj = serializer.Deserialize(stream);,DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nobject obj = serializer.ReadObject(stream);
C#,Insecure Deserialization,"var obj = JsonConvert.DeserializeObject(jsonString, typeof(object), new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.All\n});","var obj = JsonConvert.DeserializeObject(jsonString, new JsonSerializerSettings {\n    TypeNameHandling = TypeNameHandling.None\n});"
C#,Insecure Deserialization,"var formatter = new ObjectStateFormatter();\nvar obj = formatter.Deserialize(Request.Form[\viewstate\""]);""","var formatter = new ObjectStateFormatter();\nformatter.AllowSerializationInTypeCache = false;\nvar obj = formatter.Deserialize(Request.Form[\viewstate\""]);"""
C#,Insecure Deserialization,"LosFormatter formatter = new LosFormatter();\nobject obj = formatter.Deserialize(Request.Form[\__VIEWSTATE\""]);""","LosFormatter formatter = new LosFormatter();\nif(ValidateViewState(Request.Form[\__VIEWSTATE\""])) {\n    object obj = formatter.Deserialize(Request.Form[\""__VIEWSTATE\""]);\n} else {\n    throw new SecurityException(\""Invalid viewstate\"");\n}"""
C#,Insecure Deserialization,DataContractSerializer serializer = new DataContractSerializer(typeof(object));\nobject obj = serializer.ReadObject(stream);,DataContractSerializer serializer = new DataContractSerializer(typeof(MyAllowedType));\nobject obj = serializer.ReadObject(stream);
Java,Command Injection,"cmd = request.getParameter(""cmd""); Runtime.getRuntime().exec(cmd);"," cmd = request.getParameter(""""cmd""""); if (isValid(cmd)) { Runtime.getRuntime().exec(cmd); }"
C#,Command Injection,"Process.Start(Request.QueryString[""cmd""]);"," ""var cmd = Request.QueryString[""""cmd""""]; if (IsSafe(cmd)) { Process.Start(cmd); }"""
Java,Command Injection,Runtime.getRuntime().exec(cmd);," ""if (isValid(cmd)) { Runtime.getRuntime().exec(cmd); }"""
C#,Command Injection,"Process.Start(Request.QueryString[\cmd\""]);"""," ""var cmd = Request.QueryString[\""cmd\""]; if(IsSafeCommand(cmd)) { Process.Start(cmd); }"""
Java,Command Injection,"Runtime.getRuntime().exec(""cmd.exe /c "" + userInput);","Runtime.getRuntime().exec(new String[]{""cmd.exe"", ""/c"", userInput});"
C#,Command Injection,"Process.Start(""cmd.exe"", ""/c "" + userInput);","Process.Start(""cmd.exe"", $""/c {Sanitize(userInput)}"");"
Java,Command Injection,"Runtime.getRuntime().exec(""ping "" + ip);","if (isValidIP(ip)) Runtime.getRuntime().exec(new String[]{""ping"", ip});"
Java,Command Injection,"Process p = Runtime.getRuntime().exec(""ls "" + dir);","if (isSafe(dir)) Process p = new ProcessBuilder(""ls"", dir).start();"
Java,Command Injection,"Runtime.getRuntime().exec(""cmd.exe /c "" + command);","if (isWhitelisted(command)) Runtime.getRuntime().exec(new String[]{""cmd.exe"", ""/c"", command});"
Java,Command Injection,"String cmd = ""rm "" + file; Runtime.getRuntime().exec(cmd);","if (isSafe(file)) Runtime.getRuntime().exec(new String[]{""rm"", file});"
Java,Command Injection,"ProcessBuilder pb = new ProcessBuilder(""sh"", ""-c"", userInput);","if (isCommandSafe(userInput)) pb = new ProcessBuilder(""sh"", ""-c"", userInput);"
Java,Command Injection,"Runtime.getRuntime().exec(""ping "" + ip);","if (isValidIP(ip)) Runtime.getRuntime().exec(new String[]{""ping"", ip});"
Java,Command Injection,"Process p = Runtime.getRuntime().exec(""ls "" + dir);","if (isSafe(dir)) Process p = new ProcessBuilder(""ls"", dir).start();"
Java,Command Injection,"Runtime.getRuntime().exec(""cmd.exe /c "" + command);","if (isWhitelisted(command)) Runtime.getRuntime().exec(new String[]{""cmd.exe"", ""/c"", command});"
Java,Command Injection,"String cmd = ""rm "" + file; Runtime.getRuntime().exec(cmd);","if (isSafe(file)) Runtime.getRuntime().exec(new String[]{""rm"", file});"
Java,Command Injection,"ProcessBuilder pb = new ProcessBuilder(""sh"", ""-c"", userInput);","if (isCommandSafe(userInput)) pb = new ProcessBuilder(""sh"", ""-c"", userInput);"
Java,Command Injection,"Runtime.getRuntime().exec(""cmd /c "" + command);","ProcessBuilder pb = new ProcessBuilder(command.split("" "")); pb.start();"
C#,Command Injection,"Process.Start(""cmd.exe"", ""/C "" + userCmd);","Process.Start(new ProcessStartInfo() { FileName = ""cmd.exe"", Arguments = ""/C "" + userCmd, UseShellExecute = false });"
Java,Command Injection,"Process p = Runtime.getRuntime().exec(""sh -c '"" + input + ""'"");","ProcessBuilder pb = new ProcessBuilder(""sh"", ""-c"", input); pb.start();"
C#,Command Injection,"System.Diagnostics.Process.Start(""bash"", ""-c "" + userCommand);","System.Diagnostics.Process.Start(new ProcessStartInfo() { FileName = ""bash"", Arguments = ""-c \"" + userCommand + ""\"", UseShellExecute = false });"
Java,Command Injection,"String cmd = ""ping -c 4 "" + request.getParameter(""ip"");\nRuntime.getRuntime().exec(cmd);","String ip = request.getParameter(""ip"");\nif(ip != null && ip.matches(""^(?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)$"")) {\n    String[] cmd = {""ping"", ""-c"", ""4"", ip};\n    Runtime.getRuntime().exec(cmd);\n} else {\n    throw new IllegalArgumentException(""Invalid IP address"");\n}"
C#,Command Injection,"string ip = Request.QueryString[""ip""];\nProcess.Start(""cmd.exe"", ""/c ping "" + ip);","string ip = Request.QueryString[""ip""];\nif(!string.IsNullOrEmpty(ip) && Regex.IsMatch(ip, ""^(?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)$"")) {\n    Process.Start(new ProcessStartInfo {\n        FileName = ""cmd.exe"",\n        Arguments = ""/c ping "" + ip,\n        UseShellExecute = false\n    });\n} else {\n    throw new ArgumentException(""Invalid IP address"");\n}"
Java,Command Injection,"String userCmd = request.getParameter(""cmd"");\nRuntime.getRuntime().exec(""/bin/sh -c "" + userCmd);","String userCmd = request.getParameter(""cmd"");\nif(userCmd != null && userCmd.matches(""^[a-zA-Z0-9\\s-]+$"")) {\n    ProcessBuilder pb = new ProcessBuilder(""/bin/sh"", ""-c"", userCmd);\n    pb.start();\n} else {\n    throw new IllegalArgumentException(""Invalid command"");\n}"
Java,Command Injection,"String host = request.getParameter(\host\"");\n// Vulnerable: Command concatenation directly with user input\nRuntime.getRuntime().exec(\""ping \"" + host);""","String host = request.getParameter(\host\"");\n// Fixed: Validate host against a whitelist or pattern before executing\nif(host != null && host.matches(\""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""ping\"", host});\n} else {\n    throw new IllegalArgumentException(\""Invalid host value\"");\n}"""
Java,Command Injection,"String dir = request.getParameter(\dir\"");\n// Vulnerable: Using user input to form command\nRuntime.getRuntime().exec(\""ls \"" + dir);""","String dir = request.getParameter(\dir\"");\n// Fixed: Allow only alphanumeric, underscore, hyphen and slash in directory input\nif(dir != null && dir.matches(\""^[a-zA-Z0-9_\\-\\/]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""ls\"", dir});\n} else {\n    throw new IllegalArgumentException(\""Invalid directory\"");\n}"""
Java,Command Injection,"String file = request.getParameter(\file\"");\n// Vulnerable: Command injection via file parameter\nProcessBuilder pb = new ProcessBuilder(\""cat\"", file);\npb.start();""","String file = request.getParameter(\file\"");\n// Fixed: Sanitize file input to allow only safe characters and check file path\nif(file != null && file.matches(\""^[a-zA-Z0-9_.\\-]+$\"")) {\n    ProcessBuilder pb = new ProcessBuilder(\""cat\"", file);\n    pb.start();\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Command Injection,"String userInput = request.getParameter(\cmd\"");\n// Vulnerable: Directly passing command input\nRuntime.getRuntime().exec(userInput);""","String userInput = request.getParameter(\cmd\"");\n// Fixed: Use a whitelist of allowed commands\nList<String> allowed = Arrays.asList(\""date\"", \""uptime\"");\nif(userInput != null && allowed.contains(userInput)) {\n    Runtime.getRuntime().exec(userInput);\n} else {\n    throw new IllegalArgumentException(\""Command not allowed\"");\n}"""
Java,Command Injection,"String param = request.getParameter(\option\"");\n// Vulnerable: Building a shell command\nString command = \""grep 'error' /var/log/\"" + param;\nRuntime.getRuntime().exec(command);""","String param = request.getParameter(\option\"");\n// Fixed: Allow only specific log file names\nif(param != null && param.matches(\""^(syslog|authlog)$\"")) {\n    String command = \""grep 'error' /var/log/\"" + param;\n    Runtime.getRuntime().exec(new String[]{\""sh\"", \""-c\"", command});\n} else {\n    throw new IllegalArgumentException(\""Invalid log file option\"");\n}"""
Java,Command Injection,"String url = request.getParameter(\url\"");\n// Vulnerable: Executing curl with unsanitized URL\nRuntime.getRuntime().exec(\""curl \"" + url);""","String url = request.getParameter(\url\"");\n// Fixed: Validate URL to ensure it starts with allowed prefix\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    Runtime.getRuntime().exec(new String[]{\""curl\"", url});\n} else {\n    throw new IllegalArgumentException(\""URL not allowed\"");\n}"""
Java,Command Injection,"String command = \rm -rf \"" + request.getParameter(\""target\"");\n// Vulnerable: Directly concatenated command\nRuntime.getRuntime().exec(command);""","String target = request.getParameter(\target\"");\n// Fixed: Only allow deletion in a fixed directory with validated file names\nif(target != null && target.matches(\""^[a-zA-Z0-9_.\\-]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""rm\"", \""-rf\"", \""/safe/directory/\"" + target});\n} else {\n    throw new IllegalArgumentException(\""Invalid target\"");\n}"""
Java,Command Injection,"String ip = request.getParameter(\ip\"");\n// Vulnerable: Directly calling ping with user input\nRuntime.getRuntime().exec(\""ping \"" + ip);""","String ip = request.getParameter(\ip\"");\nif(ip != null && ip.matches(\""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""ping\"", ip});\n} else {\n    throw new IllegalArgumentException(\""Invalid IP address\"");\n}"""
Java,Command Injection,"String fileName = request.getParameter(\fileName\"");\n// Vulnerable: Deleting file using unsanitized input\nRuntime.getRuntime().exec(\""rm \"" + fileName);""","String fileName = request.getParameter(\fileName\"");\nif(fileName != null && fileName.matches(\""^[a-zA-Z0-9_.\\-]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""rm\"", fileName});\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Command Injection,"String userCommand = request.getParameter(\cmd\"");\nProcessBuilder pb = new ProcessBuilder(\""sh\"", \""-c\"", userCommand);\npb.start();""","String userCommand = request.getParameter(\cmd\"");\nList<String> allowedCmds = Arrays.asList(\""ls\"", \""pwd\"");\nif(userCommand != null && allowedCmds.contains(userCommand)) {\n    ProcessBuilder pb = new ProcessBuilder(\""sh\"", \""-c\"", userCommand);\n    pb.start();\n} else {\n    throw new IllegalArgumentException(\""Command not allowed\"");\n}"""
Java,Command Injection,"String host = request.getParameter(\host\"");\n// Vulnerable: Using Runtime.exec with unsanitized host\nRuntime.getRuntime().exec(\""nslookup \"" + host);""","String host = request.getParameter(\host\"");\nif(host != null && host.matches(\""^[a-zA-Z0-9.\\-]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""nslookup\"", host});\n} else {\n    throw new IllegalArgumentException(\""Invalid host\"");\n}"""
Java,Command Injection,"Process p = Runtime.getRuntime().exec(request.getParameter(\cmd\""));""","String cmd = request.getParameter(\cmd\"");\n// Fixed: Validate that cmd is one of the allowed commands\nList<String> allowed = Arrays.asList(\""date\"", \""uptime\"");\nif(cmd != null && allowed.contains(cmd)) {\n    Process p = Runtime.getRuntime().exec(cmd);\n} else {\n    throw new IllegalArgumentException(\""Command not allowed\"");\n}"""
Java,Command Injection,"String script = request.getParameter(\script\"");\n// Vulnerable: Executing user-supplied script\nRuntime.getRuntime().exec(new String[]{\""bash\"", \""-c\"", script});""","String script = request.getParameter(\script\"");\n// Fixed: Only allow execution of predefined scripts\nList<String> allowedScripts = Arrays.asList(\""backup.sh\"", \""cleanup.sh\"");\nif(script != null && allowedScripts.contains(script)) {\n    Runtime.getRuntime().exec(new String[]{\""bash\"", \""-c\"", script});\n} else {\n    throw new IllegalArgumentException(\""Script not allowed\"");\n}"""
Java,Command Injection,"String param = request.getParameter(\param\"");\nString cmd = \""echo \"" + param;\nRuntime.getRuntime().exec(cmd);""","String param = request.getParameter(\param\"");\nif(param != null && param.matches(\""^[a-zA-Z0-9_\\-]+$\"")) {\n    String cmd = \""echo \"" + param;\n    Runtime.getRuntime().exec(new String[]{\""sh\"", \""-c\"", cmd});\n} else {\n    throw new IllegalArgumentException(\""Invalid parameter\"");\n}"""
Java,Command Injection,"String arg1 = request.getParameter(\arg1\"");\nString arg2 = request.getParameter(\""arg2\"");\nString command = \""cp \"" + arg1 + \"" \"" + arg2;\nRuntime.getRuntime().exec(command);""","String arg1 = request.getParameter(\arg1\"");\nString arg2 = request.getParameter(\""arg2\"");\nif(arg1 != null && arg1.matches(\""^[a-zA-Z0-9_.\\-]+$\"") && arg2 != null && arg2.matches(\""^[a-zA-Z0-9_.\\-]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""cp\"", arg1, arg2});\n} else {\n    throw new IllegalArgumentException(\""Invalid arguments\"");\n}"""
Java,Command Injection,"String option = request.getParameter(\option\"");\nProcessBuilder pb = new ProcessBuilder(\""ls\"", option);\npb.start();""","String option = request.getParameter(\option\"");\nif(option != null && option.matches(\""^[a-zA-Z0-9_.\\-]+$\"")) {\n    ProcessBuilder pb = new ProcessBuilder(\""ls\"", option);\n    pb.start();\n} else {\n    throw new IllegalArgumentException(\""Invalid option\"");\n}"""
Java,Command Injection,"String userInput = request.getParameter(\input\"");\n// Vulnerable: Appending user input to a fixed command\nRuntime.getRuntime().exec(\""echo \"" + userInput);""","String userInput = request.getParameter(\input\"");\nif(userInput != null && userInput.matches(\""^[a-zA-Z0-9_\\- ]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""echo\"", userInput});\n} else {\n    throw new IllegalArgumentException(\""Invalid input\"");\n}"""
Java,Command Injection,"String filePath = \/tmp/\"" + request.getParameter(\""file\"");\nRuntime.getRuntime().exec(new String[]{\""cat\"", filePath});""","String fileName = request.getParameter(\file\"");\nif(fileName != null && fileName.matches(\""^[a-zA-Z0-9_.\\-]+$\"")) {\n    String filePath = \""/tmp/\"" + fileName;\n    Runtime.getRuntime().exec(new String[]{\""cat\"", filePath});\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Command Injection,"String searchTerm = request.getParameter(\search\"");\nString command = \""grep \"" + searchTerm + \"" /var/log/syslog\"";\nRuntime.getRuntime().exec(command);""","String searchTerm = request.getParameter(\search\"");\nif(searchTerm != null && searchTerm.matches(\""^[a-zA-Z0-9_\\-]+$\"")) {\n    String command = \""grep \"" + searchTerm + \"" /var/log/syslog\"";\n    Runtime.getRuntime().exec(new String[]{\""sh\"", \""-c\"", command});\n} else {\n    throw new IllegalArgumentException(\""Invalid search term\"");\n}"""
Java,Command Injection,"String command = \dig \"" + request.getParameter(\""domain\"");\nRuntime.getRuntime().exec(command);""","String domain = request.getParameter(\domain\"");\nif(domain != null && domain.matches(\""^[a-zA-Z0-9.-]+$\"")) {\n    String command = \""dig \"" + domain;\n    Runtime.getRuntime().exec(new String[]{\""dig\"", domain});\n} else {\n    throw new IllegalArgumentException(\""Invalid domain\"");\n}"""
Java,Command Injection,"String port = request.getParameter(\port\"");\nRuntime.getRuntime().exec(\""netstat -an | grep \"" + port);""","String port = request.getParameter(\port\"");\nif(port != null && port.matches(\""^[0-9]+$\"")) {\n    Runtime.getRuntime().exec(new String[]{\""netstat\"", \""-an\"", \""|\"", \""grep\"", port});\n} else {\n    throw new IllegalArgumentException(\""Invalid port number\"");\n}"""
Java,Command Injection,"string url = Request.QueryString[\url\""];\n// Vulnerable: Creating WebRequest with unsanitized user input\nWebRequest req = WebRequest.Create(url);\nWebResponse resp = req.GetResponse();""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    WebRequest req = WebRequest.Create(url);\n    WebResponse resp = req.GetResponse();\n} else {\n    throw new ArgumentException(\""URL not allowed\"");\n}"""
C#,Command Injection,"string ip = Request.QueryString[\ip\""];\n// Vulnerable: Creating WebRequest with user-supplied IP address\nWebRequest req = WebRequest.Create(\""http://\"" + ip);\nWebResponse resp = req.GetResponse();""","string ip = Request.QueryString[\ip\""];\nif(!string.IsNullOrEmpty(ip) && Regex.IsMatch(ip, \""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$\"")) {\n    WebRequest req = WebRequest.Create(\""http://\"" + ip);\n    WebResponse resp = req.GetResponse();\n} else {\n    throw new ArgumentException(\""Invalid IP address\"");\n}"""
C#,Command Injection,"string cmd = Request.QueryString[\cmd\""]; \n// Vulnerable: Directly executing command from user input\nProcess.Start(new ProcessStartInfo(\""cmd.exe\"", \""/c \"" + cmd));""","string cmd = Request.QueryString[\cmd\""]; \n// Fixed: Allow only a set of predefined commands\nList<string> allowed = new List<string> { \""dir\"", \""ipconfig\"" };\nif(!string.IsNullOrEmpty(cmd) && allowed.Contains(cmd)) {\n    Process.Start(new ProcessStartInfo(\""cmd.exe\"", \""/c \"" + cmd) { UseShellExecute = false });\n} else { throw new ArgumentException(\""Command not allowed\""); }\n"""
C#,Command Injection,"string file = Request.Form[\file\""]; \n// Vulnerable: Directly using user input to delete a file\nProcess.Start(new ProcessStartInfo(\""cmd.exe\"", \""/c del \"" + file));""","string file = Request.Form[\file\""]; \nif(!string.IsNullOrEmpty(file) && Regex.IsMatch(file, \""^[a-zA-Z0-9_.-]+$\"")) {\n    Process.Start(new ProcessStartInfo(\""cmd.exe\"", \""/c del \"" + file) { UseShellExecute = false });\n} else { throw new ArgumentException(\""Invalid file name\""); }\n"""
C#,Command Injection,"string script = Request.Form[\script\""]; \n// Vulnerable: Executing a user-supplied script\nProcess.Start(new ProcessStartInfo(\""bash\"", \""-c \"" + script));""","string script = Request.Form[\script\""]; \nif(!string.IsNullOrEmpty(script) && (script.Equals(\""backup.sh\"") || script.Equals(\""cleanup.sh\""))) {\n    Process.Start(new ProcessStartInfo(\""bash\"", \""-c \"" + script) { UseShellExecute = false });\n} else { throw new ArgumentException(\""Script not allowed\""); }\n"""
C#,Command Injection,"string option = Request.QueryString[\option\""]; \n// Vulnerable: Passing unsanitized parameter to a command\nProcess.Start(new ProcessStartInfo(""""ls"""", option));""","string option = Request.QueryString[\option\""]; \nif(!string.IsNullOrEmpty(option) && Regex.IsMatch(option, \""^[a-zA-Z0-9_.-]+$\"")) {\n    Process.Start(new ProcessStartInfo(""""ls"""", option) { UseShellExecute = false });\n} else { throw new ArgumentException(\""Invalid option\""); }\n"""
C#,Command Injection,"string domain = Request.QueryString[\domain\""]; \n// Vulnerable: Constructing a dig command with user input\nProcess.Start(new ProcessStartInfo(""""dig"""", domain));""","string domain = Request.QueryString[\domain\""]; \nif(!string.IsNullOrEmpty(domain) && Regex.IsMatch(domain, \""^[a-zA-Z0-9.-]+$\"")) {\n    Process.Start(new ProcessStartInfo(""""dig"""", domain) { UseShellExecute = false });\n} else { throw new ArgumentException(\""Invalid domain\""); }\n"""
C#,Command Injection,"string queryUrl = Request.QueryString[\queryUrl\""]; \n// Vulnerable: Building HTTP request with unsanitized queryUrl\nHttpWebRequest request = (HttpWebRequest)WebRequest.Create(queryUrl);\nWebResponse resp = request.GetResponse();""","string queryUrl = Request.QueryString[\queryUrl\""]; \nif(!string.IsNullOrEmpty(queryUrl) && queryUrl.StartsWith(\""https://api.trusted.net/\"")) {\n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(queryUrl);\n    WebResponse resp = request.GetResponse();\n} else { throw new ArgumentException(\""URL not allowed\""); }\n"""
C#,Command Injection,"string fileName = Request.QueryString[\fileName\""]; \n// Vulnerable: Using user input for file download\nstring filePath = """"C:\\images\\"""" + fileName;\nnew WebClient().DownloadFile(Request.QueryString[\""imageUrl\""], filePath);""","string fileName = Path.GetFileName(Request.QueryString[\fileName\""]);\nstring imageUrl = Request.QueryString[\""imageUrl\""];\nif(!string.IsNullOrEmpty(imageUrl) && imageUrl.StartsWith(\""https://images.trusted.com/\"")) {\n    string filePath = Path.Combine(\""C:\\images\\\"", fileName);\n    new WebClient().DownloadFile(imageUrl, filePath);\n} else { throw new Exception(\""Image URL not allowed\""); }\n"""
C#,Command Injection,"var client = new HttpClient();\nstring content = client.GetStringAsync(Request.QueryString[\contentUrl\""]).Result;""","string contentUrl = Request.QueryString[\contentUrl\""]; \nif(!string.IsNullOrEmpty(contentUrl) && contentUrl.StartsWith(\""https://content.trusted.com/\"")) {\n    var client = new HttpClient();\n    string content = client.GetStringAsync(contentUrl).Result;\n} else { throw new ArgumentException(\""URL not allowed\""); }\n"""
C#,Command Injection,"string apiEndpoint = Request.QueryString[\apiEndpoint\""]; \nHttpWebRequest req = (HttpWebRequest)WebRequest.Create(apiEndpoint);\nusing(WebResponse response = req.GetResponse()) {\n    // process response\n}""","string apiEndpoint = Request.QueryString[\apiEndpoint\""]; \nif(!string.IsNullOrEmpty(apiEndpoint) && apiEndpoint.StartsWith(\""https://service.trusted.com/\"")) {\n    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(apiEndpoint);\n    using(WebResponse response = req.GetResponse()) {\n         // process response\n    }\n} else { throw new ArgumentException(\""API endpoint not allowed\""); }\n"""
C#,Command Injection,"string targetUrl = Request.QueryString[\targetUrl\""]; \nResponse.Write(new WebClient().DownloadString(targetUrl));""","string targetUrl = Request.QueryString[\targetUrl\""]; \nif(!string.IsNullOrEmpty(targetUrl) && targetUrl.StartsWith(\""https://api.trusted.com/\"")) {\n    Response.Write(new WebClient().DownloadString(targetUrl));\n} else { throw new ArgumentException(\""URL not allowed\""); }\n"""
C#,Command Injection,"string ip = Request.QueryString[\ip\""]; \nSocket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\nsocket.Connect(ip, 80);""","string ip = Request.QueryString[\ip\""]; \nif(!string.IsNullOrEmpty(ip) && Regex.IsMatch(ip, \""^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$\"")) {\n    Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n    socket.Connect(ip, 80);\n} else { throw new ArgumentException(\""Invalid IP address\""); }\n"""
C#,Command Injection,"string fileUrl = Request.Form[\fileUrl\""]; \nFile.WriteAllBytes(""""C:\\uploads\\""""+ Request.Form[\""fileName\""], new WebClient().DownloadData(fileUrl));""","string fileUrl = Request.Form[\fileUrl\""]; \nif(!string.IsNullOrEmpty(fileUrl) && fileUrl.StartsWith(\""https://downloads.trusted.com/\"")) {\n    File.WriteAllBytes(Path.Combine(\""C:\\uploads\\\"", Path.GetFileName(Request.Form[\""fileName\""])), new WebClient().DownloadData(fileUrl));\n} else { throw new Exception(\""File URL not allowed\""); }\n"""
C#,Command Injection,"string apiUrl = Request.Form[\apiUrl\""]; \nHttpResponseMessage response = new HttpClient().GetAsync(apiUrl).Result;""","string apiUrl = Request.Form[\apiUrl\""]; \nif(!string.IsNullOrEmpty(apiUrl) && apiUrl.StartsWith(\""https://api.trusted.com/\"")) {\n    HttpResponseMessage response = new HttpClient().GetAsync(apiUrl).Result;\n} else { throw new Exception(\""API URL not allowed\""); }\n"""
C#,Command Injection,"var client = new WebClient();\nbyte[] data = client.DownloadData(Request.QueryString[\dataUrl\""]);""","string dataUrl = Request.QueryString[\dataUrl\""];\nif(!string.IsNullOrEmpty(dataUrl) && dataUrl.StartsWith(\""https://data.trusted.com/\"")) {\n    var client = new WebClient();\n    byte[] data = client.DownloadData(dataUrl);\n} else { throw new Exception(\""Data URL not allowed\""); }\n"""
C#,Command Injection,"string queryUrl = Request.QueryString[\queryUrl\""];\nHttpWebRequest req = (HttpWebRequest)WebRequest.Create(queryUrl);\nWebResponse resp = req.GetResponse();""","string queryUrl = Request.QueryString[\queryUrl\""];\nif(!string.IsNullOrEmpty(queryUrl) && queryUrl.StartsWith(\""https://api.trusted.net/\"")) {\n    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(queryUrl);\n    WebResponse resp = req.GetResponse();\n} else { throw new Exception(\""URL not allowed\""); }\n"""
C#,Cross-Site Request Forgery (CSRF),[HttpPost]\npublic ActionResult UpdateProfile(User data) {\n    // no CSRF validation\n    UpdateUser(data);\n},[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult UpdateProfile(User data) {\n    UpdateUser(data);\n}
Java,Cross-Site Request Forgery (CSRF),"protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n    String action = req.getParameter(\action\"");\n    if(action.equals(\""transfer\"")) {\n        // Process transfer without CSRF check\n        processTransfer(req);\n    }\n}""","protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n    String action = req.getParameter(\action\"");\n    String csrfToken = req.getParameter(\""csrfToken\"");\n    if(csrfToken != null && ValidCSRFToken(csrfToken)) {\n        processTransfer(req);\n    } else {\n        res.sendError(HttpServletResponse.SC_FORBIDDEN);\n    }\n}"""
Java,Cross-Site Request Forgery (CSRF),"<form action=\/deleteAccount\"" method=\""post\"">\n   <input type=\""hidden\"" name=\""userId\"" value=\""${user.id}\"">\n   <input type=\""submit\"" value=\""Delete Account\"">\n</form>""","<form action=\/deleteAccount\"" method=\""post\"">\n   <input type=\""hidden\"" name=\""userId\"" value=\""${user.id}\"">\n   <input type=\""hidden\"" name=\""csrfToken\"" value=\""${session.csrfToken}\"">\n   <input type=\""submit\"" value=\""Delete Account\"">\n</form>"""
Java,Cross-Site Request Forgery (CSRF),"protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n    String update = req.getParameter(\update\"");\n    // No CSRF validation is performed\n    updateUser(req);\n}""","protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n    String update = req.getParameter(\update\"");\n    String csrfToken = req.getParameter(\""csrfToken\"");\n    if(csrfToken != null && csrfManager.validateToken(csrfToken)) {\n        updateUser(req);\n    } else {\n        res.sendError(HttpServletResponse.SC_FORBIDDEN);\n    }\n}"""
Java,Cross-Site Request Forgery (CSRF),"<form action=\/submitOrder\"" method=\""post\"">\n  <input type=\""text\"" name=\""orderId\"" value=\""${order.id}\""/>\n  <button type=\""submit\"">Submit Order</button>\n</form>""","<form action=\/submitOrder\"" method=\""post\"">\n  <input type=\""text\"" name=\""orderId\"" value=\""${order.id}\""/>\n  <input type=\""hidden\"" name=\""csrfToken\"" value=\""${sessionScope.csrfToken}\""/>\n  <button type=\""submit\"">Submit Order</button>\n</form>"""
C#,Cross-Site Request Forgery (CSRF),[HttpPost]\npublic IActionResult UpdateProfile([FromBody] User user)\n{\n    userService.Update(user);\n    return Ok();\n},"[HttpPost]\n[ValidateAntiForgeryToken]\npublic IActionResult UpdateProfile([FromBody] User user, [FromHeader(Name = \X-CSRF-TOKEN\"")] string csrfToken)\n{\n    if(!csrfService.Validate(csrfToken))\n         return Forbid();\n    userService.Update(user);\n    return Ok();\n}"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult ChangeEmail(string email)\n{\n    userService.ChangeEmail(email);\n    return RedirectToAction(\Profile\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult ChangeEmail(string email)\n{\n    userService.ChangeEmail(email);\n    return RedirectToAction(\Profile\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult DeleteAccount(string userId)\n{\n    userService.DeleteAccount(userId);\n    return RedirectToAction(\Index\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult DeleteAccount(string userId)\n{\n    userService.DeleteAccount(userId);\n    return RedirectToAction(\Index\"");\n}"""
Java,Cross-Site Request Forgery (CSRF),"<form action=""/transfer"" method=""post"">\n    <input type=""hidden"" name=""amount"" value=""1000"">\n    <input type=""submit"" value=""Transfer"">\n</form>","<form action=""/transfer"" method=""post"">\n    <input type=""hidden"" name=""amount"" value=""1000"">\n    <input type=""hidden"" name=""csrfToken"" value=""${session.csrfToken}"">\n    <input type=""submit"" value=""Transfer"">\n</form>"
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult TransferFunds(decimal amount) {\n    ProcessTransfer(amount);\n    return RedirectToAction(""Success"");\n}","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult TransferFunds(decimal amount) {\n    ProcessTransfer(amount);\n    return RedirectToAction(""Success"");\n}"
Java,Cross-Site Request Forgery (CSRF),"<form action=\/submit\"" method=\""post\"">\n    <input type=\""text\"" name=\""data\"">\n    <input type=\""submit\"" value=\""Submit\"">\n</form>""","<form action=\/submit\"" method=\""post\"">\n    <input type=\""hidden\"" name=\""csrfToken\"" value=\""${session.csrfToken}\"">\n    <input type=\""text\"" name=\""data\"">\n    <input type=\""submit\"" value=\""Submit\"">\n</form>"""
Java,Cross-Site Request Forgery (CSRF),"PrintWriter out = response.getWriter();\nout.println(\<form action='/delete' method='post'>\"");\nout.println(\""<input type='hidden' name='id' value='123'>\"");\nout.println(\""<input type='submit' value='Delete'>\"");\nout.println(\""</form>\"");""","PrintWriter out = response.getWriter();\nout.println(\<form action='/delete' method='post'>\"");\nout.println(\""<input type='hidden' name='csrfToken' value='\"" + session.getAttribute(\""csrfToken\"") + \""'>\"");\nout.println(\""<input type='hidden' name='id' value='123'>\"");\nout.println(\""<input type='submit' value='Delete'>\"");\nout.println(\""</form>\"");"""
Java,Cross-Site Request Forgery (CSRF),"@RequestMapping(value = \""/api/transfer\"", method = RequestMethod.POST)\npublic ResponseEntity transfer(@RequestParam String amount) {\n    transactionService.transfer(amount);\n    return ResponseEntity.ok().build();\n}","@RequestMapping(value = \""/api/transfer\"", method = RequestMethod.POST)\npublic ResponseEntity transfer(@RequestParam String amount, @RequestParam String csrfToken) {\n    if(!csrfService.validate(csrfToken)) { return ResponseEntity.status(HttpStatus.FORBIDDEN).build(); }\n    transactionService.transfer(amount);\n    return ResponseEntity.ok().build();\n}"
Java,Cross-Site Request Forgery (CSRF),"public String execute() throws Exception {\n    String param = request.getParameter(\param\"");\n    doAction(param);\n    return SUCCESS;\n}""","public String execute() throws Exception {\n    String token = request.getParameter(\csrfToken\"");\n    if(token == null || !csrfChecker.isValid(token)) { return ERROR; }\n    String param = request.getParameter(\""param\"");\n    doAction(param);\n    return SUCCESS;\n}"""
Java,Cross-Site Request Forgery (CSRF),"out.write(\<form action='/modify' method='post'>\"");\nout.write(\""<input name='info' type='text'>\"");\nout.write(\""<input type='submit' value='Modify'>\"");\nout.write(\""</form>\"");""","out.write(\<form action='/modify' method='post'>\"");\nout.write(\""<input type='hidden' name='csrfToken' value='\"" + session.getAttribute(\""csrfToken\"") + \""'>\"");\nout.write(\""<input name='info' type='text'>\"");\nout.write(\""<input type='submit' value='Modify'>\"");\nout.write(\""</form>\"");"""
Java,Cross-Site Request Forgery (CSRF),"<form action=\/postComment\"" method=\""post\"">\n    <textarea name=\""comment\""></textarea>\n    <input type=\""submit\"" value=\""Post\"">\n</form>""","<form action=\/postComment\"" method=\""post\"">\n    <input type=\""hidden\"" name=\""csrfToken\"" value=\""${sessionScope.csrfToken}\"" />\n    <textarea name=\""comment\""></textarea>\n    <input type=\""submit\"" value=\""Post\"">\n</form>"""
Java,Cross-Site Request Forgery (CSRF),"public void handleRequest(HttpServletRequest req, HttpServletResponse res) throws Exception {\n    String json = req.getReader().readLine();\n    processJson(json);\n}","public void handleRequest(HttpServletRequest req, HttpServletResponse res) throws Exception {\n    String csrfToken = req.getHeader(\X-CSRF-Token\"");\n    if(csrfToken == null || !csrfService.validate(csrfToken)) {\n        res.sendError(HttpServletResponse.SC_FORBIDDEN);\n        return;\n    }\n    String json = req.getReader().readLine();\n    processJson(json);\n}"""
Java,Cross-Site Request Forgery (CSRF),"out.println(\<form action='/changePassword' method='post'>\"");\nout.println(\""<input type='password' name='newPassword'>\"");\nout.println(\""<input type='submit' value='Change'>\"");\nout.println(\""</form>\"");""","out.println(\<form action='/changePassword' method='post'>\"");\nout.println(\""<input type='hidden' name='csrfToken' value='\"" + session.getAttribute(\""csrfToken\"") + \""'>\"");\nout.println(\""<input type='password' name='newPassword'>\"");\nout.println(\""<input type='submit' value='Change'>\"");\nout.println(\""</form>\"");"""
Java,Cross-Site Request Forgery (CSRF),"String title = request.getParameter(\title\"");\nblogService.updateTitle(title);""","String token = request.getParameter(\csrfToken\"");\nif(token != null && csrfService.validate(token)) {\n    String title = request.getParameter(\""title\"");\n    blogService.updateTitle(title);\n} else {\n    response.sendError(HttpServletResponse.SC_FORBIDDEN);\n}"""
Java,Cross-Site Request Forgery (CSRF),<form action='/uploadFile' method='post' enctype='multipart/form-data'>\n    <input type='file' name='file'>\n    <input type='submit' value='Upload'>\n</form>,<form action='/uploadFile' method='post' enctype='multipart/form-data'>\n    <input type='hidden' name='csrfToken' value='${session.csrfToken}'>\n    <input type='file' name='file'>\n    <input type='submit' value='Upload'>\n</form>
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult UpdateProfile(User user) {\n    userService.Update(user);\n    return RedirectToAction(\Profile\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult UpdateProfile(User user) {\n    userService.Update(user);\n    return RedirectToAction(\Profile\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult ChangePassword(string newPassword) {\n    userService.ChangePassword(newPassword);\n    return RedirectToAction(\Index\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult ChangePassword(string newPassword) {\n    userService.ChangePassword(newPassword);\n    return RedirectToAction(\Index\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),"<form action=\/deleteAccount\"" method=\""post\"">\n    <input type=\""hidden\"" name=\""userId\"" value=\""@Model.UserId\"" />\n    <button type=\""submit\"">Delete Account</button>\n</form>""","<form action=\/deleteAccount\"" method=\""post\"">\n    @Html.AntiForgeryToken()\n    <input type=\""hidden\"" name=\""userId\"" value=\""@Model.UserId\"" />\n    <button type=\""submit\"">Delete Account</button>\n</form>"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult SubmitComment(string comment) {\n    commentService.Submit(comment);\n    return RedirectToAction(\Comments\"");\n}""","public ActionResult SubmitComment(string comment, string csrfToken) {\n    if(!CsrfHelper.Validate(csrfToken)) { return new HttpStatusCodeResult(403); }\n    commentService.Submit(comment);\n    return RedirectToAction(\Comments\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),[HttpPost]\npublic JsonResult AjaxRequest(string data) {\n    dataService.Process(data);\n    return Json(new { success = true });\n},"[HttpPost]\npublic JsonResult AjaxRequest(string data, string csrfToken) {\n    if(!CsrfHelper.Validate(csrfToken)) { return Json(new { success = false, error = \Invalid CSRF token\"" }); }\n    dataService.Process(data);\n    return Json(new { success = true });\n}"""
C#,Cross-Site Request Forgery (CSRF),public ActionResult ProcessOrder(int orderId) {\n    orderService.Process(orderId);\n    return View();\n},"public ActionResult ProcessOrder(int orderId, string csrfToken) {\n    if(!CsrfHelper.Validate(csrfToken)) { throw new HttpException(403, \Forbidden\""); }\n    orderService.Process(orderId);\n    return View();\n}"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult UpdateEmail(string email) {\n    userService.UpdateEmail(email);\n    return RedirectToAction(\Index\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult UpdateEmail(string email) {\n    userService.UpdateEmail(email);\n    return RedirectToAction(\Index\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),public JsonResult DeleteItem(int id) {\n    itemService.Delete(id);\n    return Json(new { success = true });\n},"public JsonResult DeleteItem(int id, string csrfToken) {\n    if(!CsrfHelper.Validate(csrfToken)) { return Json(new { success = false, error = \CSRF token invalid\"" }); }\n    itemService.Delete(id);\n    return Json(new { success = true });\n}"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult SaveSettings(SettingsModel model) {\n    settingsService.Save(model);\n    return RedirectToAction(\Settings\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult SaveSettings(SettingsModel model) {\n    settingsService.Save(model);\n    return RedirectToAction(\Settings\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult SubmitForm(FormCollection form) {\n    ProcessForm(form);\n    return RedirectToAction(\Index\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult SubmitForm(FormCollection form) {\n    ProcessForm(form);\n    return RedirectToAction(\Index\"");\n}"""
Java,Cross-Site Scripting (XSS),"out.println(""<html>"" + request.getParameter(""user"") + ""</html>"");","out.println(ESAPI.encoder().encodeForHTML(request.getParameter(""user"")));"
Java,Cross-Site Scripting (XSS),int otp = new Random().nextInt();,SecureRandom sr = SecureRandom.getInstanceStrong(); int otp = sr.nextInt();
C#,Cross-Site Scripting (XSS),"Response.Write(""<b>"" + Request.QueryString[""name""] + ""</b>"");","Response.Write(HttpUtility.HtmlEncode(Request.QueryString[""name""]));"
Java,Cross-Site Scripting (XSS),"out.println(""<div>"" + userInput + ""</div>"");","out.println(""<div>"" + escapeHtml(userInput) + ""</div>"");"
Java,Cross-Site Scripting (XSS),"response.getWriter().write(""<b>"" + comment + ""</b>"");","response.getWriter().write(""<b>"" + escapeHtml(comment) + ""</b>"");"
Java,Cross-Site Scripting (XSS),"writer.write(""<p>"" + message + ""</p>"");","writer.write(""<p>"" + escapeHtml(message) + ""</p>"");"
Java,Cross-Site Scripting (XSS),"out.write(""<script>"" + jsCode + ""</script>"");","out.write(""<script>"" + escapeJavaScript(jsCode) + ""</script>"");"
Java,Cross-Site Scripting (XSS),"String html = ""<span>"" + input + ""</span>"";","String html = ""<span>"" + escapeHtml(input) + ""</span>"";"
Java,Cross-Site Scripting (XSS),"out.println(""<div>"" + userInput + ""</div>"");","out.println(""<div>"" + escapeHtml(userInput) + ""</div>"");"
Java,Cross-Site Scripting (XSS),"response.getWriter().write(""<b>"" + comment + ""</b>"");","response.getWriter().write(""<b>"" + escapeHtml(comment) + ""</b>"");"
Java,Cross-Site Scripting (XSS),"writer.write(""<p>"" + message + ""</p>"");","writer.write(""<p>"" + escapeHtml(message) + ""</p>"");"
Java,Cross-Site Scripting (XSS),"out.write(""<script>"" + jsCode + ""</script>"");","out.write(""<script>"" + escapeJavaScript(jsCode) + ""</script>"");"
Java,Cross-Site Scripting (XSS),"String html = ""<span>"" + input + ""</span>"";","String html = ""<span>"" + escapeHtml(input) + ""</span>"";"
Java,Cross-Site Scripting (XSS),"out.println(""<div>"" + userInput + ""</div>"");","out.println(""<div>"" + ESAPI.encoder().encodeForHTML(userInput) + ""</div>"");"
C#,Cross-Site Scripting (XSS),"Response.Write(""<p>"" + userComment + ""</p>"");",Response.Write(HttpUtility.HtmlEncode(userComment));
Java,Cross-Site Scripting (XSS),"writer.write(""<script>"" + input + ""</script>"");","writer.write(""<script>"" + ESAPI.encoder().encodeForJavaScript(input) + ""</script>"");"
C#,Cross-Site Scripting (XSS),"label.Text = ""<b>"" + userInput + ""</b>"";",label.Text = Server.HtmlEncode(userInput);
Java,Cross-Site Scripting (XSS),"out.println(""<script>"" + userInput + ""</script>"");"," ""out.println(ESAPI.encoder().encodeForHTML(userInput));"""
Java,Cross-Site Scripting (XSS),"ObjectInputStream ois = new ObjectInputStream(new FileInputStream(""data.ser"")); Object obj = ois.readObject();"," ""ObjectInputStream ois = new ValidatedObjectInputStream(new FileInputStream(""""data.ser""""));"""
C#,Cross-Site Scripting (XSS),"Response.Write(""<script>"" + userInput + ""</script>"");"," ""Response.Write(Server.HtmlEncode(userInput));"""
Java,Cross-Site Scripting (XSS),"out.println(\Welcome \"" + userInput);"""," ""out.println(ESAPI.encoder().encodeForHTML(userInput));"""
C#,Cross-Site Scripting (XSS),"Response.Write(\<script>\"" + userInput + \""</script>\"");"""," ""Response.Write(Server.HtmlEncode(userInput));"""
Java,Cross-Site Scripting (XSS),"out.println(""<div>"" + userInput + ""</div>"");","out.println(""<div>"" + escapeHtml(userInput) + ""</div>"");"
C#,Cross-Site Scripting (XSS),"Response.Write(""<script>"" + userInput + ""</script>"");",Response.Write(Server.HtmlEncode(userInput));
Java,Cross-Site Scripting (XSS),"String userInput = request.getParameter(""input"");\nout.println(""<div>"" + userInput + ""</div>"");","String userInput = request.getParameter(""input"");\nout.println(""<div>"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(userInput) + ""</div>"");"
C#,Cross-Site Scripting (XSS),"string userInput = Request.QueryString[""input""];\nResponse.Write(""<p>"" + userInput + ""</p>"");","string userInput = Request.QueryString[""input""];\nResponse.Write(""<p>"" + HttpUtility.HtmlEncode(userInput) + ""</p>"");"
Java,Cross-Site Scripting (XSS),"String data = request.getParameter(""data"");\nout.println(""User input: "" + data);","String data = request.getParameter(""data"");\nout.println(""User input: "" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(data));"
Java,Cross-Site Scripting (XSS),"String userInput = request.getParameter(""input"");\nout.println("" <div>"" + userInput + ""</div>"");","String userInput = request.getParameter(""input"");\nout.println("" <div>"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(userInput) + ""</div>"");"
Java,Cross-Site Scripting (XSS),"String comment = request.getParameter(""comment"");\nwriter.write("" <p>"" + comment + ""</p>"");","String comment = request.getParameter(""comment"");\nwriter.write("" <p>"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(comment) + ""</p>"");"
Java,Cross-Site Scripting (XSS),"out.println(\<span title='\"" + request.getParameter(\""tooltip\"") + \""'>Info</span>\"");""","out.println(\<span title='\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""tooltip\"")) + \""'>Info</span>\"");"""
Java,Cross-Site Scripting (XSS),"String header = request.getHeader(\User-Agent\"");\nout.println(\""<div>User Agent: \"" + header + \""</div>\"");""","String header = request.getHeader(\User-Agent\"");\nout.println(\""<div>User Agent: \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(header) + \""</div>\"");"""
Java,Cross-Site Scripting (XSS),"response.getWriter().write(\<script>var data = '\"" + request.getParameter(\""data\"") + \""';</script>\"");""","response.getWriter().write(\<script>var data = '\"" + org.apache.commons.text.StringEscapeUtils.escapeEcmaScript(request.getParameter(\""data\"")) + \""';</script>\"");"""
Java,Cross-Site Scripting (XSS),"String message = request.getParameter(\message\"");\nout.print(\""<div>Message: \"" + message + \""</div>\"");""","String message = request.getParameter(\message\"");\nout.print(\""<div>Message: \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(message) + \""</div>\"");"""
Java,Cross-Site Scripting (XSS),"PrintWriter pw = response.getWriter();\nString input = request.getParameter(\input\"");\npw.println(\""<h1>\"" + input + \""</h1>\"");""","PrintWriter pw = response.getWriter();\nString input = request.getParameter(\input\"");\npw.println(\""<h1>\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(input) + \""</h1>\"");"""
Java,Cross-Site Scripting (XSS),"String urlParam = request.getParameter(\url\"");\nout.println(\""<a href='details.jsp?data=\"" + urlParam + \""'>Details</a>\"");""","String urlParam = request.getParameter(\url\"");\nout.println(\""<a href='details.jsp?data=\"" + org.apache.commons.text.StringEscapeUtils.escapeUrl(urlParam) + \""'>Details</a>\"");"""
Java,Cross-Site Scripting (XSS),"String userData = request.getParameter(\data\"");\nout.println(\""<div data-info='\"" + userData + \""'>Info</div>\"");""","String userData = request.getParameter(\data\"");\nout.println(\""<div data-info='\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(userData) + \""'>Info</div>\"");"""
Java,Cross-Site Scripting (XSS),"String jsVar = request.getParameter(\jsVar\"");\nout.println(\""<script>var userInput = '\"" + jsVar + \""';</script>\"");""","String jsVar = request.getParameter(\jsVar\"");\nout.println(\""<script>var userInput = '\"" + org.apache.commons.text.StringEscapeUtils.escapeEcmaScript(jsVar) + \""';</script>\"");"""
C#,Cross-Site Scripting (XSS),"string userInput = Request.QueryString[\input\""]; \nResponse.Write(\""<div>\"" + userInput + \""</div>\"");""","string userInput = Request.QueryString[\input\""]; \nResponse.Write(\""<div>\"" + HttpUtility.HtmlEncode(userInput) + \""</div>\"");"""
C#,Cross-Site Scripting (XSS),"string comment = Request.Form[\comment\""]; \nResponse.Write(\""<p>\"" + comment + \""</p>\"");""","string comment = Request.Form[\comment\""]; \nResponse.Write(\""<p>\"" + HttpUtility.HtmlEncode(comment) + \""</p>\"");"""
C#,Cross-Site Scripting (XSS),"LiteralControl ctrl = new LiteralControl(Request.QueryString[\data\""]);\nPage.Controls.Add(ctrl);""","LiteralControl ctrl = new LiteralControl(HttpUtility.HtmlEncode(Request.QueryString[\data\""]));\nPage.Controls.Add(ctrl);"""
C#,Cross-Site Scripting (XSS),"string header = Request.Headers[\User-Agent\""]; \nResponse.Write(\""<span>\"" + header + \""</span>\"");""","string header = Request.Headers[\User-Agent\""]; \nResponse.Write(\""<span>\"" + HttpUtility.HtmlEncode(header) + \""</span>\"");"""
C#,Cross-Site Scripting (XSS),"Response.Write(\<script>alert('\"" + Request.Form[\""msg\""] + \""');</script>\"");""","Response.Write(\<script>alert('\"" + HttpUtility.JavaScriptStringEncode(Request.Form[\""msg\""]) + \""');</script>\"");"""
C#,Cross-Site Scripting (XSS),"string jsCode = Request.QueryString[\jsCode\""]; \nResponse.Write(\""<script>var code = '\"" + jsCode + \""';</script>\"");""","string jsCode = Request.QueryString[\jsCode\""]; \nResponse.Write(\""<script>var code = '\"" + HttpUtility.JavaScriptStringEncode(jsCode) + \""';</script>\"");"""
C#,Cross-Site Scripting (XSS),"string urlParam = Request.QueryString[\url\""]; \nResponse.Write(\""<a href='details.aspx?data=\"" + urlParam + \""'>Details</a>\"");""","string urlParam = Request.QueryString[\url\""]; \nResponse.Write(\""<a href='details.aspx?data=\"" + HttpUtility.UrlEncode(urlParam) + \""'>Details</a>\"");"""
C#,Cross-Site Scripting (XSS),"string userData = Request.Form[\data\""]; \nResponse.Write(\""<div data-info='\"" + userData + \""'>Info</div>\"");""","string userData = Request.Form[\data\""]; \nResponse.Write(\""<div data-info='\"" + HttpUtility.HtmlEncode(userData) + \""'>Info</div>\"");"""
C#,Cross-Site Scripting (XSS),"string unsafeInput = Request.QueryString[\unsafe\""]; \nResponse.Write($\""<h1>{unsafeInput}</h1>\"");""","string unsafeInput = Request.QueryString[\unsafe\""]; \nResponse.Write($\""<h1>{HttpUtility.HtmlEncode(unsafeInput)}</h1>\"");"""
C#,Cross-Site Scripting (XSS),"string dynamicContent = Request.Form[\content\""]; \nResponse.Output.Write(\""<div>\"" + dynamicContent + \""</div>\"");""","string dynamicContent = Request.Form[\content\""]; \nResponse.Output.Write(\""<div>\"" + HttpUtility.HtmlEncode(dynamicContent) + \""</div>\"");"""
C#,Cross-Site Request Forgery (CSRF),"[HttpPost]\npublic ActionResult TransferFunds(string account, decimal amount)\n{\n    // Vulnerable: No CSRF token check\n    transactionService.Transfer(account, amount);\n    return RedirectToAction(\Success\"");\n}""","[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult TransferFunds(string account, decimal amount)\n{\n    transactionService.Transfer(account, amount);\n    return RedirectToAction(\Success\"");\n}"""
C#,Cross-Site Request Forgery (CSRF),"protected void btnSubmit_Click(object sender, EventArgs e)\n{\n    // Vulnerable: No CSRF protection\n    OrderService.SubmitOrder(txtOrderId.Text);\n}","protected void btnSubmit_Click(object sender, EventArgs e)\n{\n    if(Page.IsValid && ValidateCsrfToken())\n    {\n         OrderService.SubmitOrder(txtOrderId.Text);\n    }\n    else\n    {\n         Response.StatusCode = 403;\n    }\n}"
Java,Cross-Site Request Forgery (CSRF),"String action = request.getParameter(\action\"");\nif(action.equals(\""deleteAccount\"")) { userService.deleteAccount(userId); }""","String csrfToken = request.getParameter(\csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.deleteAccount(userId); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"String username = request.getParameter(\username\"");\nString password = request.getParameter(\""password\"");\nloginService.login(username, password);""","String csrfToken = request.getParameter(\csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { loginService.login(username, password); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"String profileData = request.getParameter(\profileData\"");\nuserService.updateProfile(profileData);""","String profileData = request.getParameter(\profileData\"");\nString csrfToken = request.getParameter(\""csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.updateProfile(profileData); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"String newPassword = request.getParameter(\newPassword\"");\nuserService.changePassword(newPassword);""","String newPassword = request.getParameter(\newPassword\"");\nString csrfToken = request.getParameter(\""csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.changePassword(newPassword); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"String token = request.getParameter(\token\"");\nif(token.equals(\""valid\"")) { processPayment(); }""","String csrfToken = request.getParameter(\csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { processPayment(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\transfer\"") != null) { bankService.transferFunds(); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { bankService.transferFunds(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"String settings = request.getParameter(\settings\"");\nsettingsService.updateSettings(settings);""","String settings = request.getParameter(\settings\"");\nString csrfToken = request.getParameter(\""csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { settingsService.updateSettings(settings); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\deleteItem\"") != null) { dataService.deleteItem(itemId); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { dataService.deleteItem(itemId); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"String newPassword = request.getParameter(\newPassword\"");\nuserService.changePassword(newPassword);""","if(request.getMethod().equals(\POST\"")) {\n    String newPassword = request.getParameter(\""newPassword\"");\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.changePassword(newPassword); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\updateProfile\"") != null) { userService.updateProfile(request.getParameter(\""profileData\"")); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.updateProfile(request.getParameter(\""profileData\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\deleteAccount\"") != null) { accountService.deleteAccount(userId); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { accountService.deleteAccount(userId); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\activate\"") != null) { userService.activateUser(userId); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.activateUser(userId); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"String settings = request.getParameter(\settings\"");\nuserService.updateSettings(settings);""","if(request.getMethod().equals(\POST\"")) {\n    String settings = request.getParameter(\""settings\"");\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.updateSettings(settings); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"processOrder(request.getParameter(\orderId\""));""","String csrfToken = request.getParameter(\csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { processOrder(request.getParameter(\""orderId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\upload\"") != null) { fileService.uploadFile(request.getParameter(\""fileName\"")); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { fileService.uploadFile(request.getParameter(\""fileName\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
Java,Cross-Site Request Forgery (CSRF),"userService.resetPassword(request.getParameter(\userId\""));""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { userService.resetPassword(request.getParameter(\""userId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
C#,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\authToken\"") != null) { processPayment(); }""","String csrfToken = request.getParameter(\csrfToken\"");\nif(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { processPayment(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
C#,Cross-Site Request Forgery (CSRF),"if(request.getParameter(\changeStatus\"") != null) { orderService.changeStatus(orderId, \""shipped\""); }""","if(request.getMethod().equals(\POST\"")) {\n    String csrfToken = request.getParameter(\""csrfToken\"");\n    if(request.getSession().getAttribute(\""csrfToken\"").equals(csrfToken)) { orderService.changeStatus(orderId, \""shipped\""); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }\n} else { response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED); }"""
C#,Cross-Site Request Forgery (CSRF),"string action = Request.QueryString[\action\""];\n// Vulnerable: State-changing GET request without CSRF token\nif(action == \""deleteAccount\"") { AccountService.DeleteAccount(userId); }""","string csrfToken = Request.QueryString[\csrfToken\""];\nif(Session[\""csrfToken\""].ToString() == csrfToken) {\n    if(action == \""deleteAccount\"") { AccountService.DeleteAccount(userId); }\n} else { throw new UnauthorizedAccessException(); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.Form[\login\""] == \""true\"") { AuthService.Login(Request.Form[\""username\""], Request.Form[\""password\""]); }""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) {\n         if(Request.Form[\""login\""] == \""true\"") { AuthService.Login(Request.Form[\""username\""], Request.Form[\""password\""]); }\n    } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"UserService.UpdateProfile(Request.Form[\profileData\""]);""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { UserService.UpdateProfile(Request.Form[\""profileData\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"ChangePassword(Request.Form[\newPassword\""]);""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { ChangePassword(Request.Form[\""newPassword\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.QueryString[\upgrade\""] == \""true\"") { MembershipService.UpgradeAccount(userId); }""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken && Request.QueryString[\""upgrade\""] == \""true\"") { MembershipService.UpgradeAccount(userId); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.Form[\coupon\""] != null) { CouponService.ApplyCoupon(Request.Form[\""coupon\""]); }""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken && Request.Form[\""coupon\""] != null) {\n         CouponService.ApplyCoupon(Request.Form[\""coupon\""]);\n    } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.QueryString[\cancel\""] != null) { OrderService.CancelOrder(Request.QueryString[\""orderId\""]); }""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) {\n         OrderService.CancelOrder(Request.Form[\""orderId\""]);\n    } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.Form[\freeShipping\""] == \""true\"") { shippingCost = 0; }""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) {\n         if(Request.Form[\""freeShipping\""] == \""true\"") { shippingCost = 0; } else { shippingCost = ShippingService.CalculateShipping(productId, quantity); }\n    } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"ChangePassword(Request.QueryString[""newPassword""]);","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { ChangePassword(Request.Form[\""newPassword\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.QueryString[""deleteUser""] != null) { UserService.DeleteUser(Request.QueryString[""userId""]); }","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { UserService.DeleteUser(Request.Form[\""userId\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"UpdateConfig(Request.Form[""configData""]);","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { UpdateConfig(Request.Form[\""configData\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"File.Delete(Request.QueryString[""filePath""]);","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { File.Delete(Request.Form[""""filePath""""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"AccountService.UpdateDetails(Request.Form[\details\""]);""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { AccountService.UpdateDetails(Request.Form[\""details\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Cross-Site Request Forgery (CSRF),"if(Request.QueryString[""pay""] == ""true"") { PaymentService.ProcessPayment(); }","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken && Request.Form[\""pay\""] == \""true\"") { PaymentService.ProcessPayment(); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
Java,Hardcoded Secrets,"AccountService.ChangeSubscription(Request.Form[\subscription\""]);""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken) { AccountService.ChangeSubscription(Request.Form[\""subscription\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
C#,Hardcoded Secrets,"if(Request.Form[\coupon\""] != null) { CouponService.ApplyCoupon(Request.Form[\""coupon\""]); }""","if(Request.HttpMethod == \POST\"") {\n    string csrfToken = Request.Form[\""csrfToken\""];\n    if(Session[\""csrfToken\""].ToString() == csrfToken && Request.Form[\""coupon\""] != null) { CouponService.ApplyCoupon(Request.Form[\""coupon\""]); } else { throw new UnauthorizedAccessException(); }\n} else { throw new HttpException(405, \""Method Not Allowed\""); }"""
Java,Hardcoded Secrets,"String password = ""admin123"";","String password = System.getenv(""DB_PASSWORD"");"
Java,Hardcoded Secrets,"String apiKey = ""AIzaSyD..."";","String apiKey = System.getenv(""GOOGLE_API_KEY"");"
Java,Hardcoded Secrets,"String secret = ""my_secret_key"";","String secret = System.getenv(""SECRET_KEY"");"
Java,Hardcoded Secrets,"final String token = ""abcd1234token"";","final String token = System.getenv(""ACCESS_TOKEN"");"
Java,Hardcoded Secrets,"connection.setPassword(""pass1234"");","connection.setPassword(System.getenv(""DB_PASS""));"
Java,Hardcoded Secrets,"props.setProperty(""aws.secret.key"", ""xyz987"");","props.setProperty(""aws.secret.key"", System.getenv(""AWS_SECRET_KEY""));"
Java,Hardcoded Secrets,"String ftpPassword = ""ftp@1234"";","String ftpPassword = System.getenv(""FTP_PASSWORD"");"
Java,Hardcoded Secrets,"credentials = new PasswordAuthentication(""user"", ""hardcodedPass123"".toCharArray());","credentials = new PasswordAuthentication(""user"", System.getenv(""MAIL_PASS"").toCharArray());"
Java,Hardcoded Secrets,"String twilioToken = ""sk_test_abc"";","String twilioToken = System.getenv(""TWILIO_TOKEN"");"
Java,Hardcoded Secrets,"String jwtSecret = ""jwt_secret_key"";","String jwtSecret = System.getenv(""JWT_SECRET"");"
C#,Hardcoded Secrets,"string password = ""admin123"";","string password = Environment.GetEnvironmentVariable(""DB_PASSWORD"");"
C#,Hardcoded Secrets,"string apiKey = ""AIzaSyD..."";","string apiKey = Environment.GetEnvironmentVariable(""GOOGLE_API_KEY"");"
C#,Hardcoded Secrets,"const string secret = ""my_secret"";","const string secret = Environment.GetEnvironmentVariable(""SECRET_KEY"");"
C#,Hardcoded Secrets,"string connectionString = ""Server=db;User Id=admin;Password=1234;"";","string connectionString = $""Server=db;User Id=admin;Password={Environment.GetEnvironmentVariable(\""DB_PASS\"")};"";"
C#,Hardcoded Secrets,"config[""azureKey""] = ""hardcodedkey123"";","config[""azureKey""] = Environment.GetEnvironmentVariable(""AZURE_KEY"");"
C#,Hardcoded Secrets,"string awsSecret = ""xyz987"";","string awsSecret = Environment.GetEnvironmentVariable(""AWS_SECRET_KEY"");"
C#,Hardcoded Secrets,"string smtpPass = ""mailpass123"";","string smtpPass = Environment.GetEnvironmentVariable(""SMTP_PASS"");"
C#,Hardcoded Secrets,"var credentials = new NetworkCredential(""user"", ""pass1234"");","var credentials = new NetworkCredential(""user"", Environment.GetEnvironmentVariable(""EMAIL_PASS""));"
C#,Hardcoded Secrets,"string jwtSecret = ""jwt_secret"";","string jwtSecret = Environment.GetEnvironmentVariable(""JWT_SECRET"");"
C#,Hardcoded Secrets,"client.Credentials = new NetworkCredential(""apiuser"", ""apipass"");","client.Credentials = new NetworkCredential(""apiuser"", Environment.GetEnvironmentVariable(""API_PASS""));"
Java,Hardcoded Secrets,"String password = ""admin123"";","String password = System.getenv(""DB_PASSWORD"");"
C#,Hardcoded Secrets,"string apiKey = ""12345-abcde"";","string apiKey = Environment.GetEnvironmentVariable(""API_KEY"");"
Java,Hardcoded Secrets,"String password = ""admin123"";","String password = System.getenv(""DB_PASSWORD"");"
Java,Hardcoded Secrets,"String apiKey = ""ABCDEF123456"";","String apiKey = System.getenv(""API_KEY"");"
Java,Hardcoded Secrets,"String token = ""static-token-xyz"";","String token = System.getenv(""AUTH_TOKEN"");"
Java,Hardcoded Secrets,"String secret = ""mysecret"";","String secret = System.getenv(""APP_SECRET"");"
Java,Hardcoded Secrets,"String dbUrl = ""jdbc:mysql://user:pass@localhost/db"";","String dbUrl = System.getenv(""DB_URL"");"
Java,Hardcoded Secrets,"String password = ""admin123"";","String password = System.getenv(""DB_PASSWORD"");"
Java,Hardcoded Secrets,"String apiKey = ""ABCDEF123456"";","String apiKey = System.getenv(""API_KEY"");"
Java,Hardcoded Secrets,"String token = ""static-token-xyz"";","String token = System.getenv(""AUTH_TOKEN"");"
Java,Hardcoded Secrets,"String secret = ""mysecret"";","String secret = System.getenv(""APP_SECRET"");"
Java,Hardcoded Secrets,"String dbUrl = ""jdbc:mysql://user:pass@localhost/db"";","String dbUrl = System.getenv(""DB_URL"");"
Java,Hardcoded Secrets,"String password = ""admin123"";","String password = System.getenv(""APP_PASSWORD"");"
Java,Hardcoded Secrets,"String apiKey = ""12345-abcde"";","String apiKey = System.getenv(""API_KEY"");"
C#,Hardcoded Secrets,"string secret = ""topSecret"";","string secret = Environment.GetEnvironmentVariable(""TOP_SECRET"");"
C#,Hardcoded Secrets,"string dbPass = ""pass123"";","string dbPass = ConfigurationManager.AppSettings[""DB_PASSWORD""];"
Java,Hardcoded Secrets,"String password = ""admin123"";","String password = System.getenv(""DB_PASSWORD"");"
Java,Hardcoded Secrets,"String apiKey = ""ABCDEF123456"";","String apiKey = System.getenv(""API_KEY"");"
C#,Hardcoded Secrets,"string password = ""mySecretPwd"";","string password = ConfigurationManager.AppSettings[""dbPassword""];"
C#,Hardcoded Secrets,"string apiKey = ""12345-abcde"";","string apiKey = Environment.GetEnvironmentVariable(""API_KEY"");"
Java,Improper Input Validation,"int age = Integer.parseInt(request.getParameter(""age""));"," ""try { int age = Integer.parseInt(request.getParameter(""""age"""")); } catch (NumberFormatException e) { age = 0; }"""
C#,Improper Input Validation,"int age = Convert.ToInt32(Request.QueryString[""age""]);"," ""int age; if(!int.TryParse(Request.QueryString[""""age""""], out age)) { age = 0; }"""
Java,Improper Input Validation,"int idx = Integer.parseInt(request.getParameter(""index""));\nItem item = items[idx];","int idx = Integer.parseInt(request.getParameter(""index""));\nif(idx >= 0 && idx < items.length) {\n    Item item = items[idx];\n}"
Java,Improper Input Validation,"int age = Integer.parseInt(request.getParameter(""age""));","try {\n    int age = Integer.parseInt(request.getParameter(\age\""));\n} catch (NumberFormatException e) {\n    age = 0;\n}"""
C#,Improper Input Validation,"int age = Convert.ToInt32(Request.QueryString[""age""]);","int age;\nif(!int.TryParse(Request.QueryString[\age\""]"
Java,Improper Input Validation,"String username = request.getParameter(\username\"");\n// Using user input without validation\nuserService.findUserByUsername(username);""","String username = request.getParameter(\username\"");\nif(username != null && username.length() <= 20 && username.matches(\""^[a-zA-Z0-9]+$\"")) {\n    userService.findUserByUsername(username);\n} else {\n    throw new IllegalArgumentException(\""Invalid username\"");\n}"""
Java,Improper Input Validation,"int age = Integer.parseInt(request.getParameter(\age\""));\n// No range check for age""","String ageStr = request.getParameter(\age\"");\nint age = Integer.parseInt(ageStr);\nif(age >= 0 && age <= 120) {\n    processAge(age);\n} else {\n    throw new IllegalArgumentException(\""Invalid age\"");\n}"""
Java,Improper Input Validation,"String filename = request.getParameter(\filename\"");\nFile file = new File(\""/uploads/\"" + filename);\nreadFile(file);""","String filename = request.getParameter(\filename\"");\nif(filename != null && filename.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File file = new File(\""/uploads/\"" + filename);\n    readFile(file);\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Improper Input Validation,"String dateStr = request.getParameter(\date\"");\nDate date = new SimpleDateFormat(\""yyyy-MM-dd\"").parse(dateStr);\nprocessDate(date);""","String dateStr = request.getParameter(\date\"");\ntry {\n    Date date = new SimpleDateFormat(\""yyyy-MM-dd\"").parse(dateStr);\n    processDate(date);\n} catch(ParseException e) {\n    throw new IllegalArgumentException(\""Invalid date format\"");\n}"""
Java,Improper Input Validation,"String email = request.getParameter(\email\"");\nregisterUser(email);""","String email = request.getParameter(\email\"");\nif(email != null && email.matches(\""^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$\"")) {\n    registerUser(email);\n} else {\n    throw new IllegalArgumentException(\""Invalid email address\"");\n}"""
Java,Improper Input Validation,"String comment = request.getParameter(\comment\"");\n// Directly displaying user input\nout.println(comment);""","String comment = request.getParameter(\comment\"");\nif(comment != null && comment.length() < 500) {\n    out.println(HtmlUtils.htmlEscape(comment));\n} else {\n    throw new IllegalArgumentException(\""Invalid comment\"");\n}"""
Java,Improper Input Validation,"String url = request.getParameter(\redirectUrl\"");\nresponse.sendRedirect(url);""","String url = request.getParameter(\redirectUrl\"");\nif(url != null && url.startsWith(\""https://www.example.com/\"")) {\n    response.sendRedirect(url);\n} else {\n    throw new IllegalArgumentException(\""Invalid redirect URL\"");\n}"""
Java,Improper Input Validation,"String json = request.getParameter(\data\"");\n// Parsing JSON without validation\nJSONObject obj = new JSONObject(json);\nprocess(obj);""","String json = request.getParameter(\data\"");\nif(json != null && json.trim().startsWith(\""{\"") && json.trim().endsWith(\""}\"")) {\n    JSONObject obj = new JSONObject(json);\n    process(obj);\n} else {\n    throw new IllegalArgumentException(\""Invalid JSON format\"");\n}"""
C#,Improper Input Validation,"string comment = Request.Form[\comment\""];\nResponse.Write(comment);""","string comment = Request.Form[\comment\""];\nif(!string.IsNullOrEmpty(comment) && comment.Length < 500) {\n    Response.Write(HttpUtility.HtmlEncode(comment));\n} else {\n    throw new ArgumentException(\""Invalid comment\"");\n}"""
C#,Improper Input Validation,"string redirectUrl = Request.QueryString[\redirectUrl\""];\nResponse.Redirect(redirectUrl);""","string redirectUrl = Request.QueryString[\redirectUrl\""];\nif(!string.IsNullOrEmpty(redirectUrl) && redirectUrl.StartsWith(\""https://www.example.com/\"")) {\n    Response.Redirect(redirectUrl);\n} else {\n    throw new ArgumentException(\""Invalid redirect URL\"");\n}"""
C#,Improper Input Validation,"string jsonData = Request.Form[\data\""];\nJObject obj = JObject.Parse(jsonData);\nProcessData(obj);""","string jsonData = Request.Form[\data\""];\nif(!string.IsNullOrEmpty(jsonData) && jsonData.Trim().StartsWith(\""{\"") && jsonData.Trim().EndsWith(\""}\"")) {\n    JObject obj = JObject.Parse(jsonData);\n    ProcessData(obj);\n} else {\n    throw new ArgumentException(\""Invalid JSON data\"");\n}"""
Java,Improper Input Validation,"String productId = request.getParameter(\productId\"");\nuseProduct(productId);""","String productId = request.getParameter(\productId\"");\nif(productId != null && productId.matches(\""^\\d+$\"")) {\n    int pid = Integer.parseInt(productId);\n    useProduct(pid);\n} else {\n    throw new IllegalArgumentException(\""Invalid productId\"");\n}"""
Java,Improper Input Validation,"String apiUrl = request.getParameter(\apiUrl\"");\ncallExternalApi(apiUrl);""","String apiUrl = request.getParameter(\apiUrl\"");\nif(apiUrl != null && apiUrl.startsWith(\""https://api.trusted.com/\"")) {\n    callExternalApi(apiUrl);\n} else {\n    throw new IllegalArgumentException(\""Invalid API URL\"");\n}"""
Java,Improper Input Validation,"int quantity = Integer.parseInt(request.getParameter(\quantity\""));\nprocessOrder(quantity);""","String qtyStr = request.getParameter(\quantity\"");\nif(qtyStr != null && qtyStr.matches(\""^\\d+$\"")) {\n    int quantity = Integer.parseInt(qtyStr);\n    if(quantity > 0 && quantity <= 1000) {\n        processOrder(quantity);\n    } else {\n        throw new IllegalArgumentException(\""Quantity out of range\"");\n    }\n} else {\n    throw new IllegalArgumentException(\""Invalid quantity\"");\n}"""
Java,Improper Input Validation,"String ip = request.getParameter(\ip\"");\nlogIp(ip);""","String ip = request.getParameter(\ip\"");\nif(ip != null && ip.matches(\""^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$\"")) {\n    logIp(ip);\n} else {\n    throw new IllegalArgumentException(\""Invalid IP address\"");\n}"""
Java,Improper Input Validation,"String zip = request.getParameter(\zip\"");\nprocessZip(zip);""","String zip = request.getParameter(\zip\"");\nif(zip != null && zip.matches(\""^\\d{5}(-\\d{4})?$\"")) {\n    processZip(zip);\n} else {\n    throw new IllegalArgumentException(\""Invalid ZIP code\"");\n}"""
Java,Improper Input Validation,"String state = request.getParameter(\state\"");\nsaveState(state);""","String state = request.getParameter(\state\"");\nif(state != null && state.matches(\""^[A-Z]{2}$\"")) {\n    saveState(state);\n} else {\n    throw new IllegalArgumentException(\""Invalid state code\"");\n}"""
Java,Improper Input Validation,"String password = request.getParameter(\password\"");\ncreateUser(password);""","String password = request.getParameter(\password\"");\nif(password != null && password.length() >= 8 && password.matches(\""^(?=.*[A-Z])(?=.*\\d).+$\"")) {\n    createUser(password);\n} else {\n    throw new IllegalArgumentException(\""Password does not meet complexity requirements\"");\n}"""
Java,Improper Input Validation,"String cc = request.getParameter(\cc\"");\nprocessPayment(cc);""","String cc = request.getParameter(\cc\"");\nif(cc != null && cc.matches(\""^(?:4[0-9]{12}(?:[0-9]{3})?)$\"")) {  // Example for Visa cards\n    processPayment(cc);\n} else {\n    throw new IllegalArgumentException(\""Invalid credit card number\"");\n}"""
Java,Improper Input Validation,"String review = request.getParameter(\review\"");\nsaveReview(review);""","String review = request.getParameter(\review\"");\nif(review != null && review.length() <= 1000) {\n    saveReview(HtmlUtils.htmlEscape(review));\n} else {\n    throw new IllegalArgumentException(\""Invalid review content\"");\n}"""
C#,Improper Input Validation,"string address = Request.Form[\address\""];\nsaveAddress(address);""","string address = Request.Form[\address\""];\nif(!string.IsNullOrEmpty(address) && address.Length <= 200) {\n    saveAddress(address);\n} else {\n    throw new ArgumentException(\""Invalid address\"");\n}"""
C#,Improper Input Validation,"string url = Request.QueryString[\url\""];\nRedirect(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""/\"")) {\n    Redirect(url);\n} else {\n    throw new ArgumentException(\""Invalid URL\"");\n}"""
C#,Improper Input Validation,"string feedback = Request.Form[\feedback\""];\nstoreFeedback(feedback);""","string feedback = Request.Form[\feedback\""];\nif(!string.IsNullOrEmpty(feedback) && feedback.Length <= 500) {\n    storeFeedback(HttpUtility.HtmlEncode(feedback));\n} else {\n    throw new ArgumentException(\""Invalid feedback\"");\n}"""
Java,Cross-Site Scripting (XSS),"String userInput = request.getParameter(\username\""); out.println(\""Welcome, \"" + userInput);""","String userInput = request.getParameter(\username\""); out.println(\""Welcome, \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(userInput));"""
Java,Cross-Site Scripting (XSS),"<%= request.getParameter(\msg\"") %>""","<%= org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\msg\"")) %>"""
Java,Cross-Site Scripting (XSS),"String comment = request.getParameter(\comment\""); response.getWriter().write(\""Comment: \"" + comment);""","String comment = request.getParameter(\comment\""); response.getWriter().write(\""Comment: \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(comment));"""
Java,Cross-Site Scripting (XSS),"out.println(\<div>\"" + request.getParameter(\""data\"") + \""</div>\"");""","out.println(\<div>\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""data\"")) + \""</div>\"");"""
Java,Cross-Site Scripting (XSS),"String title = request.getParameter(\title\"");\npage.setTitle(title);""","String title = request.getParameter(\title\"");\npage.setTitle(org.apache.commons.text.StringEscapeUtils.escapeHtml4(title));"""
Java,Cross-Site Scripting (XSS),"logger.info(\User input: \"" + request.getParameter(\""input\""));""","logger.info(\User input: \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""input\"")));"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Directly writing user-supplied URL to page\nout.println(\<a href='\"" + request.getParameter(\""url\"") + \""'>Click here</a>\"");""","out.println(\<a href='\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""url\"")) + \""'>Click here</a>\"");"""
Java,Cross-Site Scripting (XSS),"PrintWriter pw = response.getWriter();\npw.println(request.getParameter(\feedback\""));""","PrintWriter pw = response.getWriter();\npw.println(org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\feedback\"")));"""
Java,Cross-Site Scripting (XSS),"String html = request.getParameter(\htmlContent\"");\nout.write(html);""","String html = request.getParameter(\htmlContent\"");\nout.write(org.apache.commons.text.StringEscapeUtils.escapeHtml4(html));"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Passing user input into JavaScript directly\nout.println(\<script>var data='\"" + request.getParameter(\""data\"") + \""';</script>\"");""","out.println(\<script>var data='\"" + org.apache.commons.text.StringEscapeUtils.escapeEcmaScript(request.getParameter(\""data\"")) + \""';</script>\"");"""
Java,Cross-Site Scripting (XSS),"response.getWriter().print(request.getParameter(\search\""));""","response.getWriter().print(org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\search\"")));"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Embedding user input in an inline event handler\nout.println(\<button onclick='doAction(\"" + request.getParameter(\""id\"") + \"")'>Click</button>\"");""","out.println(\<button onclick='doAction(\"" + org.apache.commons.text.StringEscapeUtils.escapeEcmaScript(request.getParameter(\""id\"")) + \"")'>Click</button>\"");"""
Java,Cross-Site Scripting (XSS),"String desc = request.getParameter(\description\"");\nout.println(\""<p>\"" + desc + \""</p>\"");""","String desc = request.getParameter(\description\"");\nout.println(\""<p>\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(desc) + \""</p>\"");"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Using user input directly in attribute context\nout.println(\<img src='\"" + request.getParameter(\""imgUrl\"") + \""'>\"");""","out.println(\<img src='\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""imgUrl\"")) + \""'>\"");"""
Java,Cross-Site Scripting (XSS),"String value = request.getParameter(\value\"");\nout.println(value);""","String value = request.getParameter(\value\"");\nout.println(org.apache.commons.text.StringEscapeUtils.escapeHtml4(value));"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Unescaped user input in meta tag\nout.println(\<meta name='keywords' content='\"" + request.getParameter(\""keywords\"") + \""'>\"");""","out.println(\<meta name='keywords' content='\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""keywords\"")) + \""'>\"");"""
Java,Cross-Site Scripting (XSS),"String userComment = request.getParameter(\comment\"");\nhtmlOutput = \""<div>\"" + userComment + \""</div>\"";""","String userComment = request.getParameter(\comment\"");\nhtmlOutput = \""<div>\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(userComment) + \""</div>\"";"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Directly injecting input into JavaScript block\nout.println(\<script>var msg = '\"" + request.getParameter(\""msg\"") + \""'; alert(msg);</script>\"");""","out.println(\<script>var msg = '\"" + org.apache.commons.text.StringEscapeUtils.escapeEcmaScript(request.getParameter(\""msg\"")) + \""'; alert(msg);</script>\"");"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Embedding user data in style attribute without sanitization\nout.println(\<div style='background-image:url(\"" + request.getParameter(\""bgImage\"") + \"")'></div>\"");""","out.println(\<div style='background-image:url(\"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""bgImage\"")) + \"")'></div>\"");"""
Java,Cross-Site Scripting (XSS),"PrintWriter out = response.getWriter();\nout.write(request.getParameter(\content\""));""","PrintWriter out = response.getWriter();\nout.write(org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\content\"")));"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Directly reflecting query parameter in dynamic page\nout.println(\Search results for: \"" + request.getParameter(\""query\""));""","out.println(\Search results for: \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(request.getParameter(\""query\"")));"""
Java,Cross-Site Scripting (XSS),"String input = request.getParameter(\input\"");\nresponse.getWriter().print(input);""","String input = request.getParameter(\input\"");\nresponse.getWriter().print(org.apache.commons.text.StringEscapeUtils.escapeHtml4(input));"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Unescaped input in a dynamically generated link\nout.println(\<a href='page.jsp?ref=\"" + request.getParameter(\""ref\"") + \""'>Link</a>\"");""","out.println(\<a href='page.jsp?ref=\"" + org.apache.commons.text.StringEscapeUtils.escapeUrl(request.getParameter(\""ref\"")) + \""'>Link</a>\"");"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Using unfiltered request parameter in JSON response\nString json = \{\\\""message\\\"": \\\""\"" + request.getParameter(\""msg\"") + \""\\\""}\"";\nout.println(json);""","String json = \{\\\""message\\\"": \\\""\"" + org.apache.commons.text.StringEscapeUtils.escapeJson(request.getParameter(\""msg\"")) + \""\\\""}\"";\nout.println(json);"""
Java,Cross-Site Scripting (XSS),"// Vulnerable: Direct injection of HTML from request\nString html = request.getParameter(\html\"");\nout.print(html);""","String html = request.getParameter(\html\"");\nout.print(org.apache.commons.text.StringEscapeUtils.escapeHtml4(html));"""
C#,Cross-Site Scripting (XSS),"string userInput = Request.QueryString[\input\""]; \nResponse.Write(\""User input: \"" + userInput);""","string userInput = Request.QueryString[\input\""]; \nResponse.Write(\""User input: \"" + HttpUtility.HtmlEncode(userInput));"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Direct output of unencoded user comment\nResponse.Write(Request.Form[\comment\""]);""","Response.Write(HttpUtility.HtmlEncode(Request.Form[\comment\""]));"""
C#,Cross-Site Scripting (XSS),"string data = Request.QueryString[\data\""]; \nLiteralControl lc = new LiteralControl(data);\nPage.Controls.Add(lc);""","string data = Request.QueryString[\data\""]; \nLiteralControl lc = new LiteralControl(HttpUtility.HtmlEncode(data));\nPage.Controls.Add(lc);"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Including user-supplied parameter in an inline event handler\nResponse.Write(\<button onclick='alert(\"" + Request.Form[\""alertMsg\""] + \"")'>Click</button>\"");""","Response.Write(\<button onclick='alert(\"" + HttpUtility.JavaScriptStringEncode(Request.Form[\""alertMsg\""]) + \"")'>Click</button>\"");"""
C#,Cross-Site Scripting (XSS),"string htmlContent = Request.Form[\htmlContent\""]; \nResponse.Write(htmlContent);""","string htmlContent = Request.Form[\htmlContent\""]; \nResponse.Write(HttpUtility.HtmlEncode(htmlContent));"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Reflecting query parameter directly in a hyperlink\nResponse.Write(\<a href='page.aspx?ref=\"" + Request.QueryString[\""ref\""] + \""'>Link</a>\"");""","Response.Write(\<a href='page.aspx?ref=\"" + HttpUtility.UrlEncode(Request.QueryString[\""ref\""]) + \""'>Link</a>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Unencoded user input inserted into JSON response\nstring json = \{\\\""msg\\\"": \\\""\"" + Request.Form[\""msg\""] + \""\\\""}\"";\nResponse.Write(json);""","string json = \{\\\""msg\\\"": \\\""\"" + HttpUtility.JavaScriptStringEncode(Request.Form[\""msg\""]) + \""\\\""}\"";\nResponse.Write(json);"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Outputting user input from URL directly in HTML\nResponse.Write(\<div>\"" + Request.QueryString[\""content\""] + \""</div>\"");""","Response.Write(\<div>\"" + HttpUtility.HtmlEncode(Request.QueryString[\""content\""]) + \""</div>\"");"""
C#,Cross-Site Scripting (XSS),"string value = Request.Form[\value\""]; \nResponse.Write(value);""","string value = Request.Form[\value\""]; \nResponse.Write(HttpUtility.HtmlEncode(value));"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Using inline user input in a style attribute\nResponse.Write(\<div style='background-image:url(\"" + Request.QueryString[\""imgUrl\""] + \"")'></div>\"");""","Response.Write(\<div style='background-image:url(\"" + HttpUtility.HtmlEncode(Request.QueryString[\""imgUrl\""]) + \"")'></div>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Directly returning user input in the response\nResponse.Write(Request.QueryString[\feedback\""]);""","Response.Write(HttpUtility.HtmlEncode(Request.QueryString[\feedback\""]));"""
C#,Cross-Site Scripting (XSS),"string input = Request.QueryString[\input\""]; \nResponse.Write(\""<p>\"" + input + \""</p>\"");""","string input = Request.QueryString[\input\""]; \nResponse.Write(\""<p>\"" + HttpUtility.HtmlEncode(input) + \""</p>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Direct injection of untrusted data into JavaScript\nResponse.Write(\<script>var data = '\"" + Request.QueryString[\""data\""] + \""';</script>\"");""","Response.Write(\<script>var data = '\"" + HttpUtility.JavaScriptStringEncode(Request.QueryString[\""data\""]) + \""';</script>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Using unescaped user input in meta tag\nResponse.Write(\<meta name='keywords' content='\"" + Request.QueryString[\""keywords\""] + \""'>\"");""","Response.Write(\<meta name='keywords' content='\"" + HttpUtility.HtmlEncode(Request.QueryString[\""keywords\""]) + \""'>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Direct use of query parameter in dynamic HTML\nResponse.Write(\<span>\"" + Request.QueryString[\""info\""] + \""</span>\"");""","Response.Write(\<span>\"" + HttpUtility.HtmlEncode(Request.QueryString[\""info\""]) + \""</span>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Returning unencoded data in JSON response\nstring json = \{\\\""email\\\"": \\\""\"" + Request.Form[\""email\""] + \""\\\""}\"";\nResponse.Write(json);""","string json = \{\\\""email\\\"": \\\""\"" + HttpUtility.JavaScriptStringEncode(Request.Form[\""email\""]) + \""\\\""}\"";\nResponse.Write(json);"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Including untrusted data in an attribute without encoding\nResponse.Write(\<input type='text' value='\"" + Request.Form[\""value\""] + \""'>\"");""","Response.Write(\<input type='text' value='\"" + HttpUtility.HtmlEncode(Request.Form[\""value\""]) + \""'>\"");"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Directly printing query string parameter\nResponse.Write(Request.QueryString[\search\""]);""","Response.Write(HttpUtility.HtmlEncode(Request.QueryString[\search\""]));"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Echoing user input into a page without encoding\nLabel1.Text = Request.Form[\userInput\""];""","Label1.Text = HttpUtility.HtmlEncode(Request.Form[\userInput\""]);"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Writing untrusted content directly into a div\nLiteralControl lc = new LiteralControl(Request.QueryString[\content\""]);\nPage.Controls.Add(lc);""","LiteralControl lc = new LiteralControl(HttpUtility.HtmlEncode(Request.QueryString[\content\""]));\nPage.Controls.Add(lc);"""
C#,Cross-Site Scripting (XSS),"// Vulnerable: Outputting unencoded user feedback\nResponse.Write(Request.Form[\feedback\""]);""","Response.Write(HttpUtility.HtmlEncode(Request.Form[\feedback\""]));"""
Java,Business Logic Vulnerability,"boolean isPaid = Boolean.parseBoolean(req.getParameter(""paid""));\nif(isPaid) {\n    grantPremium(user);\n}",if(paymentService.hasPaid(user)) {\n    grantPremium(user);\n}
Java,Improper Input Validation,"int age = Integer.parseInt(request.getParameter(""age""));"," ""try { int age = Integer.parseInt(request.getParameter(""""age"""")); } catch (NumberFormatException e) { age = 0; }"""
C#,Improper Input Validation,"int age = Convert.ToInt32(Request.QueryString[""age""]);"," ""int age; if(!int.TryParse(Request.QueryString[""""age""""], out age)) { age = 0; }"""
Java,Improper Input Validation,"int idx = Integer.parseInt(request.getParameter(""index""));\nItem item = items[idx];","int idx = Integer.parseInt(request.getParameter(""index""));\nif(idx >= 0 && idx < items.length) {\n    Item item = items[idx];\n}"
Java,Improper Input Validation,"int age = Integer.parseInt(request.getParameter(""age""));","try {\n    int age = Integer.parseInt(request.getParameter(\age\""));\n} catch (NumberFormatException e) {\n    age = 0;\n}"""
C#,Improper Input Validation,"int age = Convert.ToInt32(Request.QueryString[""age""]);","int age;\nif(!int.TryParse(Request.QueryString[\age\""]"
Java,Improper Input Validation,"String username = request.getParameter(\username\"");\n// Using user input without validation\nuserService.findUserByUsername(username);""","String username = request.getParameter(\username\"");\nif(username != null && username.length() <= 20 && username.matches(\""^[a-zA-Z0-9]+$\"")) {\n    userService.findUserByUsername(username);\n} else {\n    throw new IllegalArgumentException(\""Invalid username\"");\n}"""
Java,Improper Input Validation,"int age = Integer.parseInt(request.getParameter(\age\""));\n// No range check for age""","String ageStr = request.getParameter(\age\"");\nint age = Integer.parseInt(ageStr);\nif(age >= 0 && age <= 120) {\n    processAge(age);\n} else {\n    throw new IllegalArgumentException(\""Invalid age\"");\n}"""
Java,Improper Input Validation,"String filename = request.getParameter(\filename\"");\nFile file = new File(\""/uploads/\"" + filename);\nreadFile(file);""","String filename = request.getParameter(\filename\"");\nif(filename != null && filename.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File file = new File(\""/uploads/\"" + filename);\n    readFile(file);\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Improper Input Validation,"String dateStr = request.getParameter(\date\"");\nDate date = new SimpleDateFormat(\""yyyy-MM-dd\"").parse(dateStr);\nprocessDate(date);""","String dateStr = request.getParameter(\date\"");\ntry {\n    Date date = new SimpleDateFormat(\""yyyy-MM-dd\"").parse(dateStr);\n    processDate(date);\n} catch(ParseException e) {\n    throw new IllegalArgumentException(\""Invalid date format\"");\n}"""
Java,Improper Input Validation,"String email = request.getParameter(\email\"");\nregisterUser(email);""","String email = request.getParameter(\email\"");\nif(email != null && email.matches(\""^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$\"")) {\n    registerUser(email);\n} else {\n    throw new IllegalArgumentException(\""Invalid email address\"");\n}"""
Java,Improper Input Validation,"String comment = request.getParameter(\comment\"");\n// Directly displaying user input\nout.println(comment);""","String comment = request.getParameter(\comment\"");\nif(comment != null && comment.length() < 500) {\n    out.println(HtmlUtils.htmlEscape(comment));\n} else {\n    throw new IllegalArgumentException(\""Invalid comment\"");\n}"""
Java,Improper Input Validation,"String url = request.getParameter(\redirectUrl\"");\nresponse.sendRedirect(url);""","String url = request.getParameter(\redirectUrl\"");\nif(url != null && url.startsWith(\""https://www.example.com/\"")) {\n    response.sendRedirect(url);\n} else {\n    throw new IllegalArgumentException(\""Invalid redirect URL\"");\n}"""
Java,Improper Input Validation,"String json = request.getParameter(\data\"");\n// Parsing JSON without validation\nJSONObject obj = new JSONObject(json);\nprocess(obj);""","String json = request.getParameter(\data\"");\nif(json != null && json.trim().startsWith(\""{\"") && json.trim().endsWith(\""}\"")) {\n    JSONObject obj = new JSONObject(json);\n    process(obj);\n} else {\n    throw new IllegalArgumentException(\""Invalid JSON format\"");\n}"""
C#,Improper Input Validation,"string comment = Request.Form[\comment\""];\nResponse.Write(comment);""","string comment = Request.Form[\comment\""];\nif(!string.IsNullOrEmpty(comment) && comment.Length < 500) {\n    Response.Write(HttpUtility.HtmlEncode(comment));\n} else {\n    throw new ArgumentException(\""Invalid comment\"");\n}"""
C#,Improper Input Validation,"string redirectUrl = Request.QueryString[\redirectUrl\""];\nResponse.Redirect(redirectUrl);""","string redirectUrl = Request.QueryString[\redirectUrl\""];\nif(!string.IsNullOrEmpty(redirectUrl) && redirectUrl.StartsWith(\""https://www.example.com/\"")) {\n    Response.Redirect(redirectUrl);\n} else {\n    throw new ArgumentException(\""Invalid redirect URL\"");\n}"""
C#,Improper Input Validation,"string jsonData = Request.Form[\data\""];\nJObject obj = JObject.Parse(jsonData);\nProcessData(obj);""","string jsonData = Request.Form[\data\""];\nif(!string.IsNullOrEmpty(jsonData) && jsonData.Trim().StartsWith(\""{\"") && jsonData.Trim().EndsWith(\""}\"")) {\n    JObject obj = JObject.Parse(jsonData);\n    ProcessData(obj);\n} else {\n    throw new ArgumentException(\""Invalid JSON data\"");\n}"""
Java,Improper Input Validation,"String productId = request.getParameter(\productId\"");\nuseProduct(productId);""","String productId = request.getParameter(\productId\"");\nif(productId != null && productId.matches(\""^\\d+$\"")) {\n    int pid = Integer.parseInt(productId);\n    useProduct(pid);\n} else {\n    throw new IllegalArgumentException(\""Invalid productId\"");\n}"""
Java,Improper Input Validation,"String apiUrl = request.getParameter(\apiUrl\"");\ncallExternalApi(apiUrl);""","String apiUrl = request.getParameter(\apiUrl\"");\nif(apiUrl != null && apiUrl.startsWith(\""https://api.trusted.com/\"")) {\n    callExternalApi(apiUrl);\n} else {\n    throw new IllegalArgumentException(\""Invalid API URL\"");\n}"""
Java,Improper Input Validation,"int quantity = Integer.parseInt(request.getParameter(\quantity\""));\nprocessOrder(quantity);""","String qtyStr = request.getParameter(\quantity\"");\nif(qtyStr != null && qtyStr.matches(\""^\\d+$\"")) {\n    int quantity = Integer.parseInt(qtyStr);\n    if(quantity > 0 && quantity <= 1000) {\n        processOrder(quantity);\n    } else {\n        throw new IllegalArgumentException(\""Quantity out of range\"");\n    }\n} else {\n    throw new IllegalArgumentException(\""Invalid quantity\"");\n}"""
Java,Improper Input Validation,"String ip = request.getParameter(\ip\"");\nlogIp(ip);""","String ip = request.getParameter(\ip\"");\nif(ip != null && ip.matches(\""^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$\"")) {\n    logIp(ip);\n} else {\n    throw new IllegalArgumentException(\""Invalid IP address\"");\n}"""
Java,Improper Input Validation,"String zip = request.getParameter(\zip\"");\nprocessZip(zip);""","String zip = request.getParameter(\zip\"");\nif(zip != null && zip.matches(\""^\\d{5}(-\\d{4})?$\"")) {\n    processZip(zip);\n} else {\n    throw new IllegalArgumentException(\""Invalid ZIP code\"");\n}"""
Java,Improper Input Validation,"String state = request.getParameter(\state\"");\nsaveState(state);""","String state = request.getParameter(\state\"");\nif(state != null && state.matches(\""^[A-Z]{2}$\"")) {\n    saveState(state);\n} else {\n    throw new IllegalArgumentException(\""Invalid state code\"");\n}"""
Java,Improper Input Validation,"String password = request.getParameter(\password\"");\ncreateUser(password);""","String password = request.getParameter(\password\"");\nif(password != null && password.length() >= 8 && password.matches(\""^(?=.*[A-Z])(?=.*\\d).+$\"")) {\n    createUser(password);\n} else {\n    throw new IllegalArgumentException(\""Password does not meet complexity requirements\"");\n}"""
Java,Improper Input Validation,"String cc = request.getParameter(\cc\"");\nprocessPayment(cc);""","String cc = request.getParameter(\cc\"");\nif(cc != null && cc.matches(\""^(?:4[0-9]{12}(?:[0-9]{3})?)$\"")) {  // Example for Visa cards\n    processPayment(cc);\n} else {\n    throw new IllegalArgumentException(\""Invalid credit card number\"");\n}"""
Java,Improper Input Validation,"String review = request.getParameter(\review\"");\nsaveReview(review);""","String review = request.getParameter(\review\"");\nif(review != null && review.length() <= 1000) {\n    saveReview(HtmlUtils.htmlEscape(review));\n} else {\n    throw new IllegalArgumentException(\""Invalid review content\"");\n}"""
C#,Improper Input Validation,"string address = Request.Form[\address\""];\nsaveAddress(address);""","string address = Request.Form[\address\""];\nif(!string.IsNullOrEmpty(address) && address.Length <= 200) {\n    saveAddress(address);\n} else {\n    throw new ArgumentException(\""Invalid address\"");\n}"""
C#,Improper Input Validation,"string url = Request.QueryString[\url\""];\nRedirect(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""/\"")) {\n    Redirect(url);\n} else {\n    throw new ArgumentException(\""Invalid URL\"");\n}"""
C#,Improper Input Validation,"string feedback = Request.Form[\feedback\""];\nstoreFeedback(feedback);""","string feedback = Request.Form[\feedback\""];\nif(!string.IsNullOrEmpty(feedback) && feedback.Length <= 500) {\n    storeFeedback(HttpUtility.HtmlEncode(feedback));\n} else {\n    throw new ArgumentException(\""Invalid feedback\"");\n}"""
Java,Business Logic Vulnerability,"int productId = Integer.parseInt(request.getParameter(\productId\""));\ndouble price = Double.parseDouble(request.getParameter(\""price\""));\nint quantity = Integer.parseInt(request.getParameter(\""quantity\""));\ndouble total = price * quantity;""","int productId = Integer.parseInt(request.getParameter(\productId\""));\ndouble price = ProductService.getPrice(productId);\nint quantity = Integer.parseInt(request.getParameter(\""quantity\""));\ndouble total = price * quantity;"""
Java,Business Logic Vulnerability,"double discount = Double.parseDouble(request.getParameter(\discount\""));\ndouble finalPrice = originalPrice - (originalPrice * discount / 100);""",double discount = DiscountService.getDiscountForUser(userId);\ndouble finalPrice = originalPrice - (originalPrice * discount / 100);
Java,Business Logic Vulnerability,"// Vulnerable: Free shipping applied if client indicates \true\""\nif(request.getParameter(\""freeShipping\"") != null && request.getParameter(\""freeShipping\"").equals(\""true\"")) {\n    shippingCost = 0;\n}""","if(UserService.isEligibleForFreeShipping(userId)) {\n    shippingCost = 0;\n} else {\n    shippingCost = ShippingService.calculateShipping(productId, quantity);\n}"
Java,Business Logic Vulnerability,"if(request.getParameter(\trial\"") != null && request.getParameter(\""trial\"").equals(\""extended\"")) {\n    account.setTrialPeriod(account.getTrialPeriod() + 30);\n}""","if(AdminService.isApprovedTrialExtension(userId)) {\n    account.setTrialPeriod(account.getTrialPeriod() + 30);\n} else {\n    throw new SecurityException(\Unauthorized trial extension request\"");\n}"""
Java,Business Logic Vulnerability,"double total = Double.parseDouble(request.getParameter(\total\""));""",double total = OrderService.calculateTotal(orderId);
Java,Business Logic Vulnerability,"if(request.getParameter(\shippingOverride\"") != null && request.getParameter(\""shippingOverride\"").equals(\""true\"")) {\n    shippingCost = 0;\n}""","if(AdminService.isAuthorizedForFreeShipping(userId)) {\n    shippingCost = 0;\n} else {\n    shippingCost = ShippingService.calculateShipping(productId, quantity);\n}"
Java,Business Logic Vulnerability,"if(request.getParameter(\cashback\"") != null && request.getParameter(\""cashback\"").equals(\""100%\"")) {\n    account.credit(total);\n}""","if(CashbackService.isEligible(userId)) {\n    account.credit(CashbackService.calculateCashback(total));\n} else {\n    throw new Exception(\Not eligible for cashback\"");\n}"""
Java,Business Logic Vulnerability,"int pointsUsed = Integer.parseInt(request.getParameter(\pointsUsed\""));\nfinalTotal -= pointsUsed * pointValue;""","int pointsUsed = Integer.parseInt(request.getParameter(\pointsUsed\""));\nif(pointsUsed <= LoyaltyService.getAvailablePoints(userId)) {\n    finalTotal -= pointsUsed * pointValue;\n} else {\n    throw new Exception(\""Not enough loyalty points available\"");\n}"""
Java,Business Logic Vulnerability,"if(request.getParameter(\subscribe\"") != null && request.getParameter(\""subscribe\"").equals(\""free\"")) {\n    account.setSubscription(\""free\"");\n}""","if(UserService.isEligibleForFreeSubscription(userId)) {\n    account.setSubscription(\free\"");\n} else {\n    throw new SecurityException(\""Subscription upgrade required\"");\n}"""
Java,Business Logic Vulnerability,"user.setRole(request.getParameter(\newRole\""));""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isSuperAdmin()) {\n    user.setRole(request.getParameter(\""newRole\""));\n} else {\n    throw new SecurityException(\""Unauthorized role change attempt\"");\n}"""
Java,Business Logic Vulnerability,"double total = Double.parseDouble(request.getParameter(\total\""));""",double total = OrderService.calculateTotal(orderId);
Java,Business Logic Vulnerability,"if(request.getParameter(\shippingOverride\"") != null && request.getParameter(\""shippingOverride\"").equals(\""true\"")) {\n    shippingCost = 0;\n}""","if(AdminService.isAuthorizedForFreeShipping(userId)) {\n    shippingCost = 0;\n} else {\n    shippingCost = ShippingService.calculateShipping(productId, quantity);\n}"
Java,Business Logic Vulnerability,"if(request.getParameter(\referralBonus\"") != null && request.getParameter(\""referralBonus\"").equals(\""yes\"")) {\n    account.credit(referralAmount);\n}""","if(ReferralService.isValidReferral(userId, referredUserId)) {\n    account.credit(ReferralService.getReferralBonus());\n} else {\n    throw new IllegalArgumentException(\Referral bonus not applicable\"");\n}"""
Java,Business Logic Vulnerability,"double tax = Double.parseDouble(request.getParameter(\taxRate\"")) * orderTotal;\n""",double taxRate = TaxService.getTaxRate(location);\ndouble tax = taxRate * orderTotal;
Java,Business Logic Vulnerability,"if(Double.parseDouble(request.getParameter(\orderAmount\"")) < 50.0) {\n    applyPromo();\n}""","if(OrderService.getOrderTotal(orderId) < 50.0) {\n    throw new IllegalArgumentException(\Order amount too low for promotion\"");\n}"""
Java,Business Logic Vulnerability,"int pointsUsed = Integer.parseInt(request.getParameter(\pointsUsed\""));\nfinalTotal -= pointsUsed * pointValue;\n""","int pointsUsed = Integer.parseInt(request.getParameter(\pointsUsed\""));\nif(pointsUsed <= LoyaltyService.getAvailablePoints(userId)) {\n    finalTotal -= pointsUsed * pointValue;\n} else {\n    throw new IllegalArgumentException(\""Not enough loyalty points\"");\n}"""
Java,Business Logic Vulnerability,"if(request.getParameter(\referralBonus\"") != null && request.getParameter(\""referralBonus\"").equals(\""claim\"")) {\n    account.credit(100);\n}""","if(ReferralService.canClaimBonus(userId)) {\n    account.credit(ReferralService.getBonusAmount());\n} else {\n    throw new IllegalArgumentException(\Referral bonus already claimed\"");\n}"""
Java,Business Logic Vulnerability,"double invoiceTotal = Double.parseDouble(request.getParameter(\invoiceTotal\""));""",double invoiceTotal = InvoiceService.calculateInvoiceTotal(orderId);
Java,Business Logic Vulnerability,"if(request.getParameter(\freeDiscount\"") != null && request.getParameter(\""freeDiscount\"").equals(\""true\"")) {\n    total = 0;\n}""","if(PromotionService.isEligibleForFreeDiscount(userId)) {\n    total = 0;\n} else {\n    throw new SecurityException(\Not eligible for free discount\"");\n}"""
Java,Business Logic Vulnerability,"if(request.getParameter(\applyReferral\"") != null && request.getParameter(\""applyReferral\"").equals(\""true\"")) {\n    account.credit(50);\n}""","if(ReferralService.isValidReferral(userId, referredUserId)) {\n    account.credit(ReferralService.getReferralBonus());\n} else {\n    throw new SecurityException(\Referral bonus invalid\"");\n}"""
Java,Business Logic Vulnerability,"double commission = baseSalary * Double.parseDouble(request.getParameter(\commissionRate\""));""",double commission = CommissionService.calculateCommission(salesVolume);
Java,Business Logic Vulnerability,"int points = Integer.parseInt(request.getParameter(\pointsUsed\""));\naccount.addPoints(points);""",int points = LoyaltyService.calculatePoints(orderId);\naccount.addPoints(points);
Java,Business Logic Vulnerability,"if(request.getParameter(\subscription\"") != null && request.getParameter(\""subscription\"").equals(\""free\"")) {\n    account.setSubscription(\""free\"");\n}""","if(UserService.isEligibleForFreeSubscription(userId)) {\n    account.setSubscription(\free\"");\n} else {\n    throw new SecurityException(\""Upgrade not permitted\"");\n}"""
Java,Business Logic Vulnerability,"if(request.getParameter(\bonusClaim\"") != null && request.getParameter(\""bonusClaim\"").equals(\""true\"")) {\n    account.credit(50);\n}""","if(ReferralService.canClaimBonus(userId)) {\n    account.credit(ReferralService.getBonus());\n} else {\n    throw new SecurityException(\Bonus already claimed or invalid\"");\n}"""
Java,Business Logic Vulnerability,"double tax = Double.parseDouble(request.getParameter(\taxRate\"")) * orderTotal;""",double taxRate = TaxService.getTaxRate(location);\ndouble tax = taxRate * orderTotal;
Java,Business Logic Vulnerability,"double total = Double.parseDouble(request.getParameter(\total\""));""",double total = OrderService.calculateTotal(orderId);
Java,Business Logic Vulnerability,"if(request.getParameter(\upgrade\"") != null && request.getParameter(\""upgrade\"").equals(\""true\"")) {\n    account.setMembership(\""premium\"");\n}""","if(AdminService.approveMembershipUpgrade(userId)) {\n    account.setMembership(\premium\"");\n} else {\n    throw new SecurityException(\""Upgrade not authorized\"");\n}"""
C#,Business Logic Vulnerability,"double price = double.Parse(Request.Form[\price\""]);\nint quantity = int.Parse(Request.Form[\""quantity\""]);\ndouble total = price * quantity;""","int productId = int.Parse(Request.Form[\productId\""]);\ndouble price = ProductService.GetPrice(productId);\nint quantity = int.Parse(Request.Form[\""quantity\""]);\ndouble total = price * quantity;"""
C#,Business Logic Vulnerability,"double discount = double.Parse(Request.Form[\discount\""]);\ndouble finalPrice = originalPrice - (originalPrice * discount / 100);""",double discount = DiscountService.GetDiscountForUser(userId);\ndouble finalPrice = originalPrice - (originalPrice * discount / 100);
C#,Business Logic Vulnerability,"if(Request.Form[\freeShipping\""] == \""true\"") {\n    shippingCost = 0;\n}""","if(UserService.IsEligibleForFreeShipping(userId)) {\n    shippingCost = 0;\n} else {\n    shippingCost = ShippingService.CalculateShipping(productId, quantity);\n}"
C#,Business Logic Vulnerability,"if(Request.QueryString[\trial\""] == \""extend\"") {\n    account.TrialDays += 30;\n}""",if(AdminService.IsApprovedTrialExtension(userId)) {\n    account.TrialDays += 30;\n} else {\n    throw new UnauthorizedAccessException();\n}
C#,Business Logic Vulnerability,"double total = double.Parse(Request.Form[\total\""]);""",double total = OrderService.CalculateTotal(orderId);
C#,Business Logic Vulnerability,"if(Request.Form[\shippingOverride\""] == \""true\"") {\n    shippingCost = 0;\n}""","if(AdminService.IsAuthorizedForFreeShipping(userId)) {\n    shippingCost = 0;\n} else {\n    shippingCost = ShippingService.CalculateShipping(productId, quantity);\n}"
C#,Business Logic Vulnerability,"if(Request.Form[\cashback\""] == \""100%\"") {\n    account.Credit(total);\n}""","if(CashbackService.IsEligible(userId)) {\n    account.Credit(CashbackService.CalculateCashback(total));\n} else {\n    throw new Exception(\Cashback not applicable\"");\n}"""
C#,Business Logic Vulnerability,"int pointsUsed = int.Parse(Request.Form[\pointsUsed\""]);\naccount.AddPoints(-pointsUsed);""",int pointsUsed = LoyaltyService.CalculatePoints(orderId);\naccount.AddPoints(-pointsUsed);
C#,Business Logic Vulnerability,"if(Request.QueryString[\subscribe\""] == \""free\"") {\n    account.Subscription = \""free\"";\n}""","if(UserService.IsEligibleForFreeSubscription(userId)) {\n    account.Subscription = \free\"";\n} else {\n    throw new UnauthorizedAccessException();\n}"""
C#,Business Logic Vulnerability,"user.Role = Request.QueryString[\newRole\""];""",// Do not allow client to change role directly; retain stored role\n
C#,Business Logic Vulnerability,"double total = double.Parse(Request.Form[\total\""]);""",double total = OrderService.CalculateTotal(orderId);
C#,Business Logic Vulnerability,"if(Request.QueryString[\upgrade\""] == \""true\"") { account.Subscription = \""premium\""; }""","if(AdminService.approveMembershipUpgrade(userId)) { account.Subscription = \premium\""; } else { throw new UnauthorizedAccessException(); }\n"""
C#,Business Logic Vulnerability,"if(Request.Form[\referralBonus\""] == \""true\"") { account.Credit(100); }""","if(ReferralService.IsValidReferral(userId, referredUserId)) { account.Credit(ReferralService.GetBonus()); } else { throw new Exception(\Invalid referral bonus\""); }\n"""
C#,Business Logic Vulnerability,"double tax = double.Parse(Request.Form[\taxRate\""]) * orderTotal;""",double taxRate = TaxService.GetTaxRate(location);\ndouble tax = taxRate * orderTotal;
C#,Business Logic Vulnerability,"double total = double.Parse(Request.Form[\total\""]);""",double total = OrderService.CalculateTotal(orderId);
C#,Business Logic Vulnerability,"if(Request.QueryString[\membership\""] == \""upgrade\"") { account.Membership = \""premium\""; }""","if(UserService.IsEligibleForUpgrade(userId)) { account.Membership = \premium\""; } else { throw new UnauthorizedAccessException(); }\n"""
C#,Business Logic Vulnerability,"if(Request.Form[\bonusClaim\""] == \""true\"") { account.Credit(50); }""","if(BonusService.CanClaimBonus(userId)) { account.Credit(BonusService.CalculateBonus(orderId)); } else { throw new Exception(\Bonus already claimed\""); }"""
C#,Business Logic Vulnerability,"string totalStr = Request.Form[\invoiceTotal\""];\ndouble invoiceTotal = double.Parse(totalStr);""",double invoiceTotal = InvoiceService.CalculateInvoiceTotal(orderId);
C#,Business Logic Vulnerability,"double fee = double.Parse(Request.Form[\serviceFee\""]);\n""",double fee = ServiceFeeCalculator.CalculateFee(orderId);
C#,Business Logic Vulnerability,"user.Role = Request.QueryString[\newRole\""];""",// Do not allow role change via client input\n
C#,Business Logic Vulnerability,"if(Request.Form[\upgrade\""] == \""true\"") { account.Membership = \""premium\""; }""","if(UserService.IsEligibleForUpgrade(userId)) { account.Membership = \premium\""; } else { throw new UnauthorizedAccessException(); }"""
C#,Business Logic Vulnerability,"int points = int.Parse(Request.Form[\points\""]);\naccount.AddPoints(points);""",int points = RewardService.CalculatePoints(orderId);\naccount.AddPoints(points);
C#,Business Logic Vulnerability,"if(Request.Form[\bonusFlag\""] == \""true\"") { account.Credit(20); }""","if(BonusService.IsEligibleBonus(userId)) { account.Credit(BonusService.GetBonusAmount()); } else { throw new Exception(\Bonus not allowed\""); }"""
C#,Business Logic Vulnerability,"if(Request.Form[\taxExempt\""] == \""true\"") { tax = 0; }""",if(TaxService.IsExempt(userId)) { tax = 0; } else { tax = TaxService.CalculateTax(orderTotal); }
C#,Business Logic Vulnerability,"double commission = baseAmount * double.Parse(Request.Form[\commissionRate\""]);\n""",double commission = CommissionService.CalculateCommission(salesVolume);
C#,Business Logic Vulnerability,"if(Request.Form[\giftCard\""] == \""apply\"") { account.DeductBalance(50); }""","if(GiftCardService.IsValid(userId, giftCardCode)) { account.DeductBalance(GiftCardService.GetAmount(giftCardCode)); } else { throw new Exception(\Invalid gift card\""); }"""
C#,Business Logic Vulnerability,"if(Request.Form[\promo\""] == \""apply\"") { total -= 30; }""","if(PromotionService.IsEligible(userId)) { total -= PromotionService.GetDiscountAmount(userId); } else { throw new Exception(\Promotion not applicable\""); }"""
C#,Business Logic Vulnerability,"double tax = double.Parse(Request.Form[\taxRate\""]) * orderTotal;""",double taxRate = TaxService.GetTaxRate(location);\ndouble tax = taxRate * orderTotal;
C#,Business Logic Vulnerability,"double total = double.Parse(Request.Form[\total\""]);""",double total = OrderService.CalculateTotal(orderId);
C#,Business Logic Vulnerability,"if(Request.QueryString[\upgrade\""] == \""true\"") { account.Membership = \""premium\""; }""","if(UserService.IsEligibleForUpgrade(userId)) { account.Membership = \premium\""; } else { throw new UnauthorizedAccessException(); }"""
C#,Business Logic Vulnerability,"if(Request.Form[\referralBonus\""] == \""true\"") { account.Credit(100); }""","if(ReferralService.IsValidReferral(userId, referredUserId)) { account.Credit(ReferralService.GetBonus()); } else { throw new Exception(\Referral bonus already claimed or not applicable\""); }"""
C#,Business Logic Vulnerability,"string invoiceAmount = Request.Form[\invoiceTotal\""];\ndouble total = double.Parse(invoiceAmount);""",double total = InvoiceService.CalculateInvoiceTotal(orderId);
C#,Business Logic Vulnerability,"int bonusPoints = int.Parse(Request.Form[\bonusPoints\""]);\naccount.Credit(bonusPoints * 0.01);""",int bonusPoints = RewardService.CalculateBonusPoints(orderId);\naccount.Credit(bonusPoints * 0.01);
C#,Business Logic Vulnerability,"account.Membership = Request.Form[\membership\""];""",account.Membership = MembershipService.getMembershipLevel(userId);
C#,Business Logic Vulnerability,"double serviceCharge = double.Parse(Request.Form[\serviceCharge\""]);\n""",double serviceCharge = ServiceChargeCalculator.CalculateCharge(orderId);
C#,Business Logic Vulnerability,"double commission = baseAmount * double.Parse(Request.Form[\commissionRate\""]);\n""",double commission = CommissionService.CalculateCommission(salesVolume);
C#,Business Logic Vulnerability,"if(Request.Form[\discountCode\""] == \""SAVE50\"") { total -= 50; }""","if(DiscountService.IsValidDiscount(userId, Request.Form[\discountCode\""])) { total -= DiscountService.GetDiscountAmount(Request.Form[\""discountCode\""]); } else { throw new Exception(\""Invalid discount code\""); }"""
Java,Information Exposure,System.out.println(e.getMessage());,"logger.error(""An error occurred: "", e);"
C#,Information Exposure,Console.WriteLine(ex.ToString());,"logger.LogError(ex, ""Exception occurred"");"
C#,Information Exposure,Console.WriteLine(ex.ToString());,"logger.LogError(ex, ""Exception occurred"");"
Java,Information Exposure,System.out.println(e.getMessage());,"logger.error(\An error occurred: \"""
Java,Information Exposure,"String connInfo = \jdbc:mysql://db.example.com:3306/app?user=admin&password=secret\"";\nlogger.info(\""Connecting using \"" + connInfo);""","// Fixed: Do not log sensitive connection strings\nlogger.info(\Connecting to database.\"");\nString connInfo = \""jdbc:mysql://db.example.com:3306/app\"";  // Credentials retrieved securely"""
Java,Information Exposure,"Properties config = new Properties();\nconfig.load(new FileInputStream(\config.properties\""));\nout.println(\""Configuration: \"" + config.toString());""","Properties config = SecureConfigLoader.load(\config.enc\"");\n// Do not expose configuration details to users\nlogger.debug(\""Configuration loaded.\"");"""
Java,Information Exposure,"System.out.println(\Env variable: \"" + System.getenv(\""SECRET_KEY\""));""","// Fixed: Do not print sensitive environment variables\nlogger.debug(\Environment variable loaded.\"");"""
Java,Information Exposure,"System.out.println(\System properties: \"" + System.getProperties().toString());""","logger.debug(\System properties loaded.\"");\n// Do not expose system properties to the user\nout.println(\""System information not available.\"");"""
Java,Information Exposure,"logger.debug(\SQL Query: SELECT * FROM users WHERE email='\"" + email + \""'\"");""","logger.debug(\SQL Query executed.\"");  // Avoid printing full queries with sensitive data"""
Java,Information Exposure,"File file = new File(\/etc/passwd\"");\nBufferedReader br = new BufferedReader(new FileReader(file));\nwhile((line = br.readLine()) != null){ out.println(line); }""","// Fixed: Do not expose sensitive system files\nlogger.error(\Attempt to access restricted file.\"");\nout.println(\""Access denied.\"");"""
Java,Information Exposure,"logger.info(\Session ID: \"" + session.getId());""","logger.info(\Session initialized.\"");  // Avoid logging actual session IDs if possible"""
Java,Information Exposure,"String apiKey = \ABC123-SECRET-APIKEY\"";\nout.println(\""API Key: \"" + apiKey);""","String apiKey = System.getenv(\API_KEY\"");\n// Do not display API keys to end users\nout.println(\""API Key is securely stored.\"");"""
Java,Information Exposure,"out.println(\User email: \"" + user.getEmail());""","out.println(\User email: \"" + StringEscapeUtils.escapeHtml4(user.getEmail()));"""
Java,Information Exposure,String plainPwd = password;\nuser.setPassword(plainPwd);,"String hashedPwd = BCrypt.hashpw(password, BCrypt.gensalt());\nuser.setPassword(hashedPwd);"
Java,Information Exposure,"EmailSender.send(email, \Your password is \"" + password);""","EmailSender.send(email, \Your password has been reset. Please check your secure portal.\"");"""
Java,Information Exposure,"logger.info(\Debug data: \"" + sensitiveData);""","logger.info(\Debug data: [REDACTED]\"");"""
Java,Information Exposure,"out.println(\Auth Token: \"" + session.getAttribute(\""authToken\""));""","out.println(\Auth Token: [REDACTED]\"");"""
Java,Information Exposure,"logger.info(\Full configuration: \"" + config.toString());""","logger.info(\Configuration loaded securely.\"");"""
C#,Information Exposure,"try {\n    DoSensitiveOperation();\n} catch(Exception ex) {\n    Console.WriteLine(\Error: \"" + ex.ToString());\n}""","try {\n    DoSensitiveOperation();\n} catch(Exception ex) {\n    logger.Error(ex, \Operation failed.\"");\n    Console.WriteLine(\""An error occurred. Please contact support.\"");\n}"""
C#,Information Exposure,"logger.Info(\User password: \"" + password);""","logger.Info(\User password: [REDACTED]\"");"""
C#,Information Exposure,"string apiKey = \XYZ-SECRET-APIKEY\"";\nConsole.WriteLine(\""API Key: \"" + apiKey);""","string apiKey = Environment.GetEnvironmentVariable(\API_KEY\"");\nConsole.WriteLine(\""API Key is securely stored.\"");"""
C#,Information Exposure,"cmd.CommandText = \INSERT INTO Users (SSN) VALUES ('\"" + ssn + \""')\"";""","string encryptedSSN = EncryptionUtil.Encrypt(ssn);\ncmd.CommandText = \INSERT INTO Users (SSN) VALUES ('\"" + encryptedSSN + \""')\"";"""
C#,Information Exposure,"HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\http://sensitive.example.com/data\"");""","HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\https://sensitive.example.com/data\"");"""
C#,Information Exposure,"EmailService.Send(email, \Your password is: \"" + password);""","EmailService.SendSecure(email, \Your password is: \"" + EncryptionUtil.Mask(password));"""
C#,Information Exposure,"string connStr = \Data Source=db.example.com;Initial Catalog=app;User ID=user;Password=pass\"";\nConsole.WriteLine(connStr);""","logger.Info(\Database connection established using secure settings.\""); // Do not print connection string"""
C#,Information Exposure,StringBuilder sensitiveInfo = new StringBuilder();\nsensitiveInfo.Append(userInput);\n// Data remains in memory,StringBuilder sensitiveInfo = new StringBuilder();\nsensitiveInfo.Append(userInput);\n// Clear sensitive data from memory\nsensitiveInfo.Clear();
C#,Information Exposure,"catch(Exception ex) { Response.Write(\Error: \"" + ex.Message); }""","catch(Exception ex) { Response.Write(\An error occurred. Please try again later.\""); logger.Error(ex); }"""
C#,Information Exposure,string encoded = Convert.ToBase64String(Encoding.UTF8.GetBytes(sensitiveInfo));,string encrypted = EncryptionUtil.Encrypt(sensitiveInfo);\nstring encoded = Convert.ToBase64String(Encoding.UTF8.GetBytes(encrypted));
C#,Information Exposure,"logger.Debug(\Session token: \"" + Session.SessionID);""","logger.Debug(\Session token: [REDACTED]\"");"""
C#,Insecure JWT Handling,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var tokenS = handler.ReadToken(token);""","var validationParams = GetValidationParameters(); var principal = handler.ValidateToken(token, validationParams, out var validatedToken);"
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token); // No signature verification\nString userId = jwt.getClaim(\userId\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""myIssuer\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nString userId = jwt.getClaim(\""userId\"").asString();"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token); // Does not check algorithm\nif(jwt.getAlgorithm().equals(\none\"")) { /* Accept token incorrectly */ }""","if(JWT.decode(token).getAlgorithm().equals(\none\"")) {\n    throw new SecurityException(\""Token with 'none' algorithm not allowed\"");\n}\nJWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\""JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(\secret\""))\n    .build();\nDecodedJWT jwt = verifier.verify(token);""","String secret = Config.get(\jwt.secret\"");\nJWTVerifier verifier = JWT.require(Algorithm.HMAC256(secret))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Does not check expiration\nDate exp = jwt.getExpiresAt(); // Vulnerable,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptLeeway(60)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Missing issuer validation\nString issuer = jwt.getIssuer();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Missing audience check\nList<String> aud = jwt.getAudience();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withAudience(\""myAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token); // No signature verification\nString role = jwt.getClaim(\role\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nString role = jwt.getClaim(\""role\"").asString();"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // No check on algorithm type,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString user = jwt.getClaim(\user\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nString user = jwt.getClaim(\""user\"").asString();"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Signature not verified,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"JWTVerifier verifier = JWT.require(Algorithm.HMAC384(\weakSecret\""))\n    .build();\nDecodedJWT jwt = verifier.verify(token);""","String secret = Config.get(\jwt.secret\"");\nJWTVerifier verifier = JWT.require(Algorithm.HMAC256(secret))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Not enforcing expiration validation\nDate exp = jwt.getExpiresAt();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // No check on issued at claim\nDate issued = jwt.getIssuedAt();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nString subject = jwt.getSubject(); // Vulnerable: Subject is unverified,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withSubject(\""expectedSubject\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nString subject = jwt.getSubject();"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString nonce = jwt.getClaim(\nonce\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nString nonce = jwt.getClaim(\""nonce\"").asString();\nif(!\""expectedNonce\"".equals(nonce)) { throw new SecurityException(\""Invalid nonce\""); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Vulnerable if token uses different algorithm,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // Vulnerable to algorithm substitution attacks,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token); // No token revocation check performed,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenBlacklist.isRevoked(token)) { throw new SecurityException(\""Token revoked\""); }"""
Java,Insecure JWT Handling,"logger.info(\JWT Token: \"" + token);""","logger.info(\JWT token received (length: \"" + token.length() + \"")\"");"""
Java,Insecure JWT Handling,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(300)\n    .build();\nDecodedJWT jwt = verifier.verify(token);""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(300)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,CustomJWTParser parser = new CustomJWTParser();\nDecodedJWT jwt = parser.parse(token);\n// No signature verification,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenBlacklist.isRevoked(token)) { throw new SecurityException(\""Token revoked\""); }"""
Java,Insecure JWT Handling,"out.println(\API Key from JWT: \"" + jwt.getClaim(\""apiKey\"").asString());""","// Do not expose sensitive claims directly\nString masked = \[REDACTED]\"";\nout.println(\""API Key: \"" + masked);"""
Java,Insecure JWT Handling,"logger.debug(\JWT details: \"" + jwt.toString());""","logger.debug(\JWT token received (length: \"" + token.length() + \"")\"");"""
Java,Insecure JWT Handling,"int claimsValue = jwt.getClaim(\value\"").asInt();""","int claimsValue = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .build()\n    .verify(token)\n    .getClaim(\""value\"").asInt();"""
Java,Insecure JWT Handling,int total = a + b; // Vulnerable arithmetic using claims (example context),"int total = Math.addExact(a, b); // Use secure arithmetic if based on token claims"
C#,Insecure JWT Handling,"var tokenHandler = new JwtSecurityTokenHandler();\nvar validationParameters = new TokenValidationParameters {\n    ValidateLifetime = false, // Vulnerable: Does not check expiration\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret))\n};\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out var st);","var tokenHandler = new JwtSecurityTokenHandler();\nvar validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret))\n};\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out var st);"
C#,Insecure JWT Handling,"try {\n    var principal = tokenHandler.ValidateToken(token, parameters, out var st);\n} catch(Exception ex) {\n    // Vulnerable: Exception swallowed\n}","try {\n    var principal = tokenHandler.ValidateToken(token, parameters, out var st);\n} catch(Exception ex) {\n    logger.Error(ex);\n    throw new SecurityTokenException(\Invalid token\"");\n}"""
C#,Insecure JWT Handling,var jwt = new JwtSecurityToken(token); // Vulnerable: Does not verify signature\nvar alg = jwt.Header.Alg;,"var tokenHandler = new JwtSecurityTokenHandler();\nvar parameters = new TokenValidationParameters {\n    RequireSignedTokens = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret))\n};\nvar principal = tokenHandler.ValidateToken(token, parameters, out var st);"
C#,Insecure JWT Handling,"var principal = tokenHandler.ValidateToken(token, parameters, out var st);","var principal = tokenHandler.ValidateToken(token, parameters, out var st);\nif(TokenRevocationService.IsRevoked(token)) { throw new SecurityTokenException(\Token revoked\""); }"""
C#,Insecure JWT Handling,"string tokenInput = Request.QueryString[\token\""];\nResponse.Redirect(tokenInput); // Vulnerable: Logging sensitive token""","if(!string.IsNullOrEmpty(tokenInput)) {\n    var principal = tokenHandler.ValidateToken(tokenInput, parameters, out var st);\n    // Do not log full token details\n    logger.Info(\JWT received (length: \"" + tokenInput.Length + \"")\"");\n    // Process token...\n} else { throw new SecurityTokenException(\""Token missing\""); }"""
C#,Insecure JWT Handling,"catch(Exception ex) {\n    logger.Error(\JWT Error: \"" + ex.Message);\n}""","catch(Exception ex) {\n    logger.Error(ex, \JWT validation failed\"");\n    throw new SecurityTokenException(\""Invalid token\"");\n}"""
C#,Insecure JWT Handling,"var parameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret))\n};\nvar principal = tokenHandler.ValidateToken(token, parameters, out var st);","var parameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret))\n};\nvar principal = tokenHandler.ValidateToken(token, parameters, out var st);"
C#,Insecure JWT Handling,"var jwtToken = tokenHandler.ReadJwtToken(token); // Does not verify signature\nvar claim = jwtToken.Claims.FirstOrDefault(c => c.Type == \role\"")?.Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret)),\n    ValidateLifetime = true\n};\nSecurityToken st;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out st);\nvar claim = principal.FindFirst(\role\"")?.Value;"""
C#,Insecure JWT Handling,"var principal = tokenHandler.ValidateToken(token, parameters, out var st);","var principal = tokenHandler.ValidateToken(token, parameters, out var st);\nif(TokenRevocationService.IsRevoked(token)) { throw new SecurityTokenException(\Token revoked\""); }"""
C#,Insecure JWT Handling,"string tokenInput = Request.QueryString[\token\""];\nResponse.Redirect(tokenInput); // Vulnerable: Logging sensitive token""","if(!string.IsNullOrEmpty(tokenInput)) {\n    var principal = tokenHandler.ValidateToken(tokenInput, parameters, out var st);\n    // Do not log full token details\n    logger.Info(\JWT received (length: \"" + tokenInput.Length + \"")\"");\n    // Process token...\n} else { throw new SecurityTokenException(\""Token missing\""); }"""
C#,Insecure JWT Handling,"string tokenInput = Request.QueryString[\token\""];\nResponse.Redirect(tokenInput); // Vulnerable: Logging sensitive token""","if(!string.IsNullOrEmpty(tokenInput)) {\n    var principal = tokenHandler.ValidateToken(tokenInput, parameters, out var st);\n    // Do not log full token details\n    logger.Info(\JWT received (length: \"" + tokenInput.Length + \"")\"");\n    // Process token...\n} else { throw new SecurityTokenException(\""Token missing\""); }"""
C#,Insecure JWT Handling,"return Redirect(Request.QueryString[\nextPage\""]);""","string nextPage = Request.QueryString[\nextPage\""];\nif(!string.IsNullOrEmpty(nextPage) && nextPage.StartsWith(\""/\"")) { return Redirect(nextPage); } else { return Redirect(\""/home\""); }"""
C#,Insecure JWT Handling,"if(Request.Params[\action\""] == \""go\"") { Response.Redirect(Request.Params[\""url\""]); }""","if(Request.Params[\action\""] == \""go\"") {\n    string url = Request.Params[\""url\""];\n    if(!string.IsNullOrEmpty(url) && url.StartsWith(\""/\"")) { Response.Redirect(url); } else { Response.Redirect(\""/default\""); }\n}"""
C#,Insecure JWT Handling,"string finalRedirect = Request.QueryString[\final\""];\nResponse.Redirect(finalRedirect);""","string finalRedirect = Request.QueryString[\final\""];\nif(!string.IsNullOrEmpty(finalRedirect) && finalRedirect.StartsWith(\""/\"")) { Response.Redirect(finalRedirect); } else { Response.Redirect(\""/error\""); }"""
Java,Insecure JWT Signing Key,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""123\"").parseClaimsJws(jwt).getBody();"""," ""String jwt = request.getHeader(\""Authorization\""); Claims claims = Jwts.parser().setSigningKey(env.getSecretKey()).parseClaimsJws(jwt).getBody();"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\secret\""); // Hardcoded weak key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")); // Use secure key from environment"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\12345\""); // Insecure hardcoded numeric key""",Algorithm alg = Algorithm.HMAC256(Config.getSecretKey()); // Retrieve key securely from configuration
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\my_jwt_key\""); // Weak hardcoded key""","Algorithm alg = Algorithm.HMAC256(System.getProperty(\jwt.secret\"")); // Use system property for secret"""
Java,Insecure JWT Signing Key,"String signingKey = \default\""; // Insecure default key\nAlgorithm alg = Algorithm.HMAC256(signingKey);""","String signingKey = System.getenv(\JWT_SIGNING_KEY\"");\nAlgorithm alg = Algorithm.HMAC256(signingKey);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\pass\""); // Key too short and predictable""",Algorithm alg = Algorithm.HMAC256(generateSecureKey()); // Generate a secure key dynamically
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\password\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET_KEY\""));"""
Java,Insecure JWT Signing Key,"String key = \secretkey\""; // Hardcoded in source code\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = KeyStoreUtil.getKey(\jwtKey\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"String key = properties.getProperty(\jwt.key\"");\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = SecureConfigLoader.getEncryptedProperty(\jwt.key\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\weakkey\""); // Insufficient entropy""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \admin_key\"";\nAlgorithm alg = Algorithm.HMAC256(key);""",String key = SecureKeyGenerator.generateKey();\nAlgorithm alg = Algorithm.HMAC256(key);
Java,Insecure JWT Signing Key,"String key = properties.getProperty(\jwt.key\"");\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = SecureConfigLoader.getEncryptedProperty(\jwt.key\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\default_secret\""); // Weak and predictable key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String jwtKey = \short\"";\nAlgorithm alg = Algorithm.HMAC256(jwtKey);""","String jwtKey = System.getenv(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(jwtKey);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\abcdefg\""); // Very short key""",Algorithm alg = Algorithm.HMAC256(generateLongSecureKey());
Java,Insecure JWT Signing Key,Algorithm alg = Algorithm.HMAC256(Secrets.DEFAULT_KEY);,"Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \key123\""; // Hardcoded and predictable\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = ConfigurationManager.getSecureKey(\jwtKey\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\mySecret\""); // Insecure fixed key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET_KEY\""));"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\""123456\"");""","String jwtSecret = SecureKeyUtil.getKey(\jwt.secret\"");\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);"""
Java,Insecure JWT Signing Key,"String key = \staticKey\"";\nAlgorithm alg = Algorithm.HMAC256(key);""",String key = KeyManagement.getDynamicJWTKey();\nAlgorithm alg = Algorithm.HMAC256(key);
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\Qwerty\""); // Common password as key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String jwtSecret = \secret!\"";\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);""","String jwtSecret = KeystoreUtil.getDecryptedKey(\jwt.secret\"");\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\adminPass\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_ADMIN_KEY\""));"""
Java,Insecure JWT Signing Key,"String key = \password123\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = System.getenv(\JWT_SECURE_KEY\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"DecodedJWT jwt = JWT.decode(token);\nAlgorithm alg = Algorithm.HMAC256(\secret_key\"");""","DecodedJWT jwt = JWT.decode(token);\nAlgorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
C#,Insecure JWT Signing Key,"var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\mykey\""));""","var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]));"""
C#,Insecure JWT Signing Key,"var tokenHandler = new JwtSecurityTokenHandler();\nvar key = Encoding.UTF8.GetBytes(\simplekey\"");""","var tokenHandler = new JwtSecurityTokenHandler();\nvar key = Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));"""
C#,Insecure JWT Signing Key,"var symmetricKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\hardCodedKey\""));""","var symmetricKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(SecureConfigLoader.GetKey(\JWT_SECRET\"")));"""
C#,Insecure JWT Signing Key,"var keyBytes = Encoding.ASCII.GetBytes(\weakkey\"");\nvar signingKey = new SymmetricSecurityKey(keyBytes);""","var keyBytes = Encoding.ASCII.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));\nvar signingKey = new SymmetricSecurityKey(keyBytes);"""
C#,Insecure JWT Signing Key,"string keyString = \fixedKey\"";\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = SecureKeyManager.RetrieveKey(\JWT_SECRET\"");\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var tokenS = handler.ReadToken(token);"""," ""var validationParameters = GetValidationParameters(); var principal = handler.ValidateToken(token  validationParameters  out var validatedToken);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // No signature verification,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Does not check expiration\nDate exp = jwt.getExpiresAt();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).acceptExpiresAt(0).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Issuer not validated\nString issuer = jwt.getIssuer();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).withIssuer(\""trustedIssuer\"").build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Audience not validated\nList<String> aud = jwt.getAudience();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).withAudience(\""trustedAudience\"").build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Direct decode without verification,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Accepts token with 'none' algorithm,"if(JWT.decode(token).getAlgorithm().equalsIgnoreCase(\none\"")) { throw new SecurityException(\""Tokens with 'none' algorithm not allowed\""); }\nJWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\""JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Subject claim not validated,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).withSubject(\""expectedSubject\"").build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // No notBefore validation,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getNotBefore() != null && jwt.getNotBefore().after(new Date())) { throw new SecurityException(\""Token not yet valid\""); }"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // No token revocation check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenRevocationService.isRevoked(token)) { throw new SecurityException(\""Token is revoked\""); }"""
Java,Insecure JWT Validation,"logger.info(\Token details: \"" + token); // Exposes full token""","logger.info(\Token received (length: \"" + token.length() + \"")\"");"""
Java,Insecure JWT Validation,CustomJWTParser parser = new CustomJWTParser();\nDecodedJWT jwt = parser.parse(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // Missing nonce validation\nString nonce = jwt.getClaim(\nonce\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nString nonce = jwt.getClaim(\""nonce\"").asString();\nif(!\""expectedNonce\"".equals(nonce)) { throw new SecurityException(\""Invalid nonce\""); }"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // No token type validation\nString typ = jwt.getHeaderClaim(\typ\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(!\""JWT\"".equals(jwt.getHeaderClaim(\""typ\"").asString())) { throw new SecurityException(\""Invalid token type\""); }"""
Java,Insecure JWT Validation,DecodedJWT jwt = LegacyJWTParser.parse(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Missing clock skew validation,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptLeeway(60)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // Allows token with wrong algorithm\nif(!jwt.getAlgorithm().equals(\HS256\"")) { /* token accepted wrongly */ }""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // Does not verify token version\nint version = jwt.getClaim(\version\"").asInt();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getClaim(\""version\"").asInt() != 2) { throw new SecurityException(\""Unsupported token version\""); }"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // No required claim validation\nString user = jwt.getClaim(\user\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaimPresence(\""user\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);\nString user = jwt.getClaim(\""user\"").asString();"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // Accepts token with static key verification\nAlgorithm alg = Algorithm.HMAC256(\defaultSecret\"");\nDecodedJWT jwt = JWT.decode(token);""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));\nJWTVerifier verifier = JWT.require(alg).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // Does not check revocation status,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenRevocationService.isRevoked(token)) { throw new SecurityException(\""Token revoked\""); }"""
Java,Insecure JWT Validation,"logger.info(\JWT: \"" + token); // Logging full token""","logger.info(\JWT received (length: \"" + token.length() + \"")\"");"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);\n// No verification of expiration claim,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);\nString issuer = jwt.getIssuer();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);\nList<String> audience = jwt.getAudience();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withAudience(\""myAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
C#,Insecure Randomness,int code = new Random().Next();,"using (var rng = new RNGCryptoServiceProvider()) { byte[] data = new byte[4]; rng.GetBytes(data); int code = BitConverter.ToInt32(data, 0); }"
Java,Insecure Randomness,SecureRandom sr = SecureRandom.getInstanceStrong(); int otp = sr.nextInt();,// Using a cryptographically secure RNG
Java,Insecure Randomness,int otp = new Random().nextInt();,SecureRandom sr = SecureRandom.getInstanceStrong();\nint otp = sr.nextInt();
C#,Insecure Randomness,int code = new Random().Next();,"using(var rng = new RNGCryptoServiceProvider()) {\n    byte[] data = new byte[4];\n    rng.GetBytes(data);\n    int code = BitConverter.ToInt32(data, 0);\n}"
Java,Insecure Randomness,Random rand = new Random();\nint token = rand.nextInt();,SecureRandom rand = SecureRandom.getInstanceStrong();\nint token = rand.nextInt();
Java,Insecure Randomness,int code = new Random().nextInt(1000);,SecureRandom sr = SecureRandom.getInstanceStrong();\nint code = sr.nextInt(1000);
Java,Insecure Randomness,double value = Math.random();,SecureRandom sr = SecureRandom.getInstanceStrong();\ndouble value = sr.nextDouble();
Java,Insecure Randomness,String token = Long.toHexString(new Random().nextLong());,SecureRandom sr = SecureRandom.getInstanceStrong();\nString token = Long.toHexString(sr.nextLong());
Java,Insecure Randomness,byte[] keyBytes = new byte[16];\nnew Random().nextBytes(keyBytes);,byte[] keyBytes = new byte[16];\nSecureRandom sr = SecureRandom.getInstanceStrong();\nsr.nextBytes(keyBytes);
Java,Insecure Randomness,int id = new Random().nextInt(100000);,int id = new SecureRandom().nextInt(100000);
Java,Insecure Randomness,"Random random = new Random();\nString orderId = \ORD\"" + random.nextInt(9999);""","SecureRandom random = SecureRandom.getInstanceStrong();\nString orderId = \ORD\"" + random.nextInt(9999);"""
Java,Insecure Randomness,Random random = new Random();\nint lottery = random.nextInt(1000000);,int lottery = SecureRandom.getInstanceStrong().nextInt(1000000);
Java,Insecure Randomness,int sessionToken = new Random().nextInt();,int sessionToken = SecureRandom.getInstanceStrong().nextInt();
Java,Insecure Randomness,Random r = new Random(System.currentTimeMillis());\nint pin = r.nextInt(10000);,SecureRandom sr = SecureRandom.getInstanceStrong();\nint pin = sr.nextInt(10000);
Java,Insecure Randomness,long nonce = new Random().nextLong();,long nonce = SecureRandom.getInstanceStrong().nextLong();
Java,Insecure Randomness,String randomString = UUID.randomUUID().toString(); // May not be cryptographically secure,"String randomString = new BigInteger(130, SecureRandom.getInstanceStrong()).toString(32);"
Java,Insecure Randomness,int randomValue = new Random().nextInt(50) + 50;,int randomValue = new SecureRandom().nextInt(50) + 50;
Java,Insecure Randomness,Random random = new Random();\nfloat weight = random.nextFloat();,SecureRandom random = SecureRandom.getInstanceStrong();\nfloat weight = random.nextFloat();
Java,Insecure Randomness,int r = (int)(Math.random() * 100);,int r = SecureRandom.getInstanceStrong().nextInt(100);
Java,Insecure Randomness,Random random = new Random();\nint secure = random.nextInt();,SecureRandom random = SecureRandom.getInstanceStrong();\nint secure = random.nextInt();
Java,Insecure Randomness,long id = new Random().nextLong(); // Not secure,long id = SecureRandom.getInstanceStrong().nextLong();
Java,Insecure Randomness,String token = Base64.getEncoder().encodeToString(new Random().nextBytes(new byte[32]));,byte[] bytes = new byte[32];\nSecureRandom.getInstanceStrong().nextBytes(bytes);\nString token = Base64.getEncoder().encodeToString(bytes);
Java,Insecure Randomness,Random random = new Random(12345); // Hard-coded seed,SecureRandom random = SecureRandom.getInstanceStrong(); // Do not use fixed seed
Java,Insecure Randomness,int randomNum = new Random().nextInt(1000);,int randomNum = new SecureRandom().nextInt(1000);
Java,Insecure Randomness,Random r = new Random();\nint result = r.nextInt();,SecureRandom r = SecureRandom.getInstanceStrong();\nint result = r.nextInt();
Java,Insecure Randomness,double randDouble = Math.random();,SecureRandom sr = SecureRandom.getInstanceStrong();\ndouble randDouble = sr.nextDouble();
Java,Insecure Randomness,Random random = new Random();\nint seq = random.nextInt();,SecureRandom sRandom = SecureRandom.getInstanceStrong();\nint seq = sRandom.nextInt();
Java,Insecure Randomness,int result = a + b;,"int result = Math.addExact(a, b);"
Java,Insecure Randomness,int result = score + bonus;,"int result = Math.addExact(score, bonus);"
Java,Insecure Randomness,int result = number << 3;,"int result = Math.multiplyExact(number, 8);"
Java,Insecure Randomness,int totalCost = 0;\nfor(Product p : cart) {\n    totalCost += p.getPrice() * p.getQuantity();\n},"int totalCost = 0;\nfor(Product p : cart) {\n    int cost = Math.multiplyExact(p.getPrice(), p.getQuantity());\n    totalCost = Math.addExact(totalCost, cost);\n}"
Java,Insecure Randomness,int value = Integer.parseInt(largeValueString);\nint computed = value * 1000;,"int value = Integer.parseInt(largeValueString);\nint computed = Math.multiplyExact(value, 1000);"
Java,Insecure Randomness,int result = a + b;,"int a = 1500000000, b = 1500000000;\nint result = Math.addExact(a, b);"
Java,Insecure Randomness,int shifted = value << 2;,"int shifted = Math.multiplyExact(value, 4);"
Java,Insecure Randomness,int diff = min - decrement;,"int diff = Math.subtractExact(min, decrement);"
Java,Insecure Randomness,int total = 0;\nfor(int i = 0; i < array.length; i++) {\n    total += array[i];\n},"int total = 0;\nfor(int i = 0; i < array.length; i++) {\n    total = Math.addExact(total, array[i]);\n}"
Java,Insecure Randomness,int result = number << 3;,"int result = Math.multiplyExact(number, 8);"
C#,Insecure Randomness,Random rnd = new Random();\nint token = rnd.Next();,"using (var rng = RandomNumberGenerator.Create()) {\n    byte[] data = new byte[4];\n    rng.GetBytes(data);\n    int token = BitConverter.ToInt32(data, 0);\n}"
C#,Insecure Randomness,int code = new Random().Next(1000);,int code = RandomNumberGenerator.GetInt32(1000);
C#,Insecure Randomness,double value = new Random().NextDouble();,double value = GetSecureRandomDouble(); // Implement a secure random double using RNG
C#,Insecure Randomness,string token = Guid.NewGuid().ToString(); // Not cryptographically secure,string token = Convert.ToBase64String(RandomNumberGenerator.GetBytes(32));
C#,Insecure Randomness,Random random = new Random();\nint id = random.Next(100000);,int id = RandomNumberGenerator.GetInt32(100000);
C#,Insecure Randomness,Random rndFixed = new Random(12345);\nint pin = rndFixed.Next(10000);,int pin = RandomNumberGenerator.GetInt32(10000);
C#,Insecure Randomness,int num = new Random().Next();,"int num = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,Random rnd = new Random();\nint lottery = rnd.Next(1000000);,int lottery = RandomNumberGenerator.GetInt32(1000000);
C#,Insecure Randomness,int sessionToken = new Random().Next();,"int sessionToken = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,"Random r = new Random();\nint result = r.Next(50, 100);","int result = RandomNumberGenerator.GetInt32(50, 100);"
C#,Insecure Randomness,Random rnd = new Random(42);\nint fixedResult = rnd.Next();,"int fixedResult = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,"int randomValue = new Random().Next(0, 1000);","int randomValue = RandomNumberGenerator.GetInt32(0, 1000);"
C#,Insecure Randomness,"int num = new Random().Next(5000, 6000);","int num = RandomNumberGenerator.GetInt32(5000, 6000);"
C#,Insecure Randomness,int rNum = new Random().Next();,"int rNum = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,// Example using NextDouble\ndouble x = new Random().NextDouble();,double x = GetSecureRandomDouble();   // Implement a method using RNG
C#,Insecure Randomness,"int result = new Random().Next(0, 100);","int result = RandomNumberGenerator.GetInt32(0, 100);"
C#,Insecure Randomness,int rNum = new Random().Next();,"int rNum = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,int sum = new Random().Next(1000);,int sum = RandomNumberGenerator.GetInt32(1000);
C#,Insecure Randomness,int a = new Random().Next(100);,"int a = RandomNumberGenerator.GetInt32(0, 100);"
C#,Insecure Randomness,int rec = new Random().Next();,"int rec = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,"int n = new Random().Next(1, 1000);","int n = RandomNumberGenerator.GetInt32(1, 1000);"
C#,Insecure Randomness,int baseRandom = new Random().Next();,"int baseRandom = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
C#,Insecure Randomness,int value = new Random().Next(100);,int value = RandomNumberGenerator.GetInt32(100);
C#,Insecure Randomness,"int total = new Random().Next(0, 200);","int total = RandomNumberGenerator.GetInt32(0, 200);"
C#,Insecure Randomness,int recursive = new Random().Next();,"int recursive = RandomNumberGenerator.GetInt32(0, int.MaxValue);"
Java,Integer Overflow,"int x = 1000000, y = 1000000;\nint z = x * y; // overflow","int x = 1000000, y = 1000000;\nlong z = (long)x * y;"
Java,Integer Overflow,int a = 1000000;\nint b = 1000000;\nint result = a * b; // May overflow,"int a = 1000000;\nint b = 1000000;\nint result = Math.multiplyExact(a, b);"
Java,Integer Overflow,int x = Integer.MAX_VALUE;\nint y = 1;\nint sum = x + y;,"int x = Integer.MAX_VALUE;\nint y = 1;\nint sum = Math.addExact(x, y);"
Java,Integer Overflow,int total = 0;\nfor (int i = 0; i < 1000000; i++) {\n    total += i;\n},"int total = 0;\nfor (int i = 0; i < 1000000; i++) {\n    total = Math.addExact(total, i);\n}"
Java,Integer Overflow,int product = 1;\nfor (int i = 1; i <= 20; i++) {\n    product *= i;\n},"int product = 1;\nfor (int i = 1; i <= 20; i++) {\n    product = Math.multiplyExact(product, i);\n}"
Java,Integer Overflow,int balance = 2147483640;\nint deposit = 20;\nbalance += deposit;,"int balance = 2147483640;\nint deposit = 20;\nbalance = Math.addExact(balance, deposit);"
Java,Integer Overflow,int x = -2147483648;\nint diff = x - 1;,"int x = -2147483648;\nint diff = Math.subtractExact(x, 1);"
Java,Integer Overflow,"public int calculateArea(int width, int height) {\n    return width * height;\n}","public int calculateArea(int width, int height) {\n    return Math.multiplyExact(width, height);\n}"
Java,Integer Overflow,int sum = 0;\nfor (int num : numbers) {\n    sum += num;\n},"int sum = 0;\nfor (int num : numbers) {\n    sum = Math.addExact(sum, num);\n}"
Java,Integer Overflow,int a = -1000000;\nint b = 3000;\nint result = a * b;,"int a = -1000000;\nint b = 3000;\nint result = Math.multiplyExact(a, b);"
Java,Integer Overflow,int price = 2000000;\nint quantity = 1000;\nint cost = price * quantity;,"int price = 2000000;\nint quantity = 1000;\nint cost = Math.multiplyExact(price, quantity);"
Java,Integer Overflow,int shifted = value << 2; // shifting multiplies by 4,"int shifted = Math.multiplyExact(value, 4);"
Java,Integer Overflow,public int factorial(int n) {\n    return (n == 1) ? 1 : n * factorial(n - 1);\n},"public int factorial(int n) {\n    return (n == 1) ? 1 : Math.multiplyExact(n, factorial(n - 1));\n}"
Java,Integer Overflow,"int a = 1500000000, b = 1500000000;\nint result = a + b;","int a = 1500000000, b = 1500000000;\nint result = Math.addExact(a, b);"
Java,Integer Overflow,int total = 0;\nfor (int i = 1; i <= n; i++) {\n    total += i;\n},"int total = 0;\nfor (int i = 1; i <= n; i++) {\n    total = Math.addExact(total, i);\n}"
Java,Integer Overflow,int result = Integer.parseInt(valueStr) * 1000;,"int result = Math.multiplyExact(Integer.parseInt(valueStr), 1000);"
Java,Integer Overflow,int result = number << 3;,"int result = Math.multiplyExact(number, 8);"
Java,Integer Overflow,int diff = min - decrement;,"int diff = Math.subtractExact(min, decrement);"
Java,Integer Overflow,int large = a * b;,BigInteger large = BigInteger.valueOf(a).multiply(BigInteger.valueOf(b));
Java,Integer Overflow,int result = a + b;,"int result = Math.addExact(a, b);"
Java,Integer Overflow,int result = score + bonus;,"int result = Math.addExact(score, bonus);"
Java,Integer Overflow,int result = number << 3;,"int result = Math.multiplyExact(number, 8);"
Java,Integer Overflow,int totalCost = 0;\nfor(Product p : cart) {\n    totalCost += p.getPrice() * p.getQuantity();\n},"int totalCost = 0;\nfor(Product p : cart) {\n    int cost = Math.multiplyExact(p.getPrice(), p.getQuantity());\n    totalCost = Math.addExact(totalCost, cost);\n}"
Java,Integer Overflow,int value = Integer.parseInt(largeValueString);\nint computed = value * 1000;,"int value = Integer.parseInt(largeValueString);\nint computed = Math.multiplyExact(value, 1000);"
Java,Integer Overflow,int result = a + b;,"int a = 1500000000, b = 1500000000;\nint result = Math.addExact(a, b);"
Java,Integer Overflow,int shifted = value << 2;,"int shifted = Math.multiplyExact(value, 4);"
Java,Integer Overflow,int diff = min - decrement;,"int diff = Math.subtractExact(min, decrement);"
Java,Integer Overflow,// Use BigInteger for very large numbers\nint result = a * b;,BigInteger result = BigInteger.valueOf(a).multiply(BigInteger.valueOf(b));
Java,Integer Overflow,int total = 0;\nfor(int i=0;i<list.length;i++){\n    total += list[i];\n},"int total = 0;\nfor(int i=0;i<list.length;i++){\n    total = Math.addExact(total, list[i]);\n}"
C#,Integer Overflow,int a = 1000000;\nint b = 1000000;\nint result = a * b; // may overflow,int a = 1000000;\nint b = 1000000;\nint result = checked(a * b);
C#,Integer Overflow,int x = int.MaxValue;\nint y = 1;\nint sum = x + y;,int x = int.MaxValue;\nint y = 1;\nint sum = checked(x + y);
C#,Integer Overflow,int total = 0;\nfor(int i = 0; i < 1000000; i++) { total += i; },int total = 0;\nfor(int i = 0; i < 1000000; i++) { total = checked(total + i); }
C#,Integer Overflow,int product = 1;\nfor(int i = 1; i <= 20; i++) { product *= i; },int product = 1;\nfor(int i = 1; i <= 20; i++) { product = checked(product * i); }
C#,Integer Overflow,int balance = 2147483640;\nbalance += 20;,int balance = 2147483640;\nbalance = checked(balance + 20);
C#,Integer Overflow,int total = 0;\nforeach(int num in numbers) { total += num; },int total = 0;\nforeach(int num in numbers) { total = checked(total + num); }
C#,Integer Overflow,"int factor = int.Parse(Request.QueryString[\factor\""]);\nint result = 5000 * factor;""","int factor = int.Parse(Request.QueryString[\factor\""]);\nint result = checked(5000 * factor);"""
C#,Integer Overflow,int diff = int.MinValue - 1;,int diff = checked(int.MinValue - 1);
C#,Integer Overflow,int result = a * b;,BigInteger result = new BigInteger(a) * new BigInteger(b);
C#,Integer Overflow,"int a = 1500000000, b = 1500000000;\nint sum = a + b;","int a = 1500000000, b = 1500000000;\nint sum = checked(a + b);"
C#,Integer Overflow,int shifted = value << 2;,int shifted = checked(value << 2);
C#,Integer Overflow,public int Factorial(int n) { return n == 1 ? 1 : n * Factorial(n - 1); },public int Factorial(int n) { return n == 1 ? 1 : checked(n * Factorial(n - 1)); }
C#,Integer Overflow,int result = a + b;,int result = checked(a + b);
C#,Integer Overflow,"int result = baseValue + int.Parse(Request.QueryString[\addValue\""]);""","int result = checked(baseValue + int.Parse(Request.QueryString[\addValue\""]));"""
C#,Integer Overflow,int total = 0;\nfor(int i = 1; i <= n; i++) { total += i; },int total = 0;\nfor(int i = 1; i <= n; i++) { total = checked(total + i); }
C#,Integer Overflow,int result = int.Parse(valueStr) * 1000;,int result = checked(int.Parse(valueStr) * 1000);
C#,Integer Overflow,int diff = min - decrement;,int diff = checked(min - decrement);
C#,Integer Overflow,int RecursiveSum(int n) { return n == 0 ? 0 : n + RecursiveSum(n - 1); },int RecursiveSum(int n) { return n == 0 ? 0 : checked(n + RecursiveSum(n - 1)); }
Java,Improper Input Validation,"String input = request.getParameter(""param25"");
process(input);","String input = request.getParameter(""param25"");
if(input != null && input.matches(""^[a-zA-Z0-9_]+$"")) { process(input); } else { throw new IllegalArgumentException(""Invalid input""); }"
C#,Improper Input Validation,"string input = Request.QueryString[""param1""];
Process(input);","string input = Request.QueryString[""param1""];
if(!string.IsNullOrEmpty(input) && Regex.IsMatch(input, ""^[a-zA-Z0-9_]+$"")) { Process(input); } else { throw new ArgumentException(""Invalid input""); }"
Java,Race Condition,"File file = new File(""data.txt"");\nif(!file.exists()) {\n    file.createNewFile();\n}","File file = new File(""data.txt"");\nsynchronized(this) {\n    if(!file.exists()) {\n        file.createNewFile();\n    }\n}"
Java,Sensitive Data Exposure,"response.getWriter().write(""Your email is: "" + email);"," ""response.getWriter().write(""""Your request is processed."""");"""
C#,Sensitive Data Exposure,"Response.Write(""Your email: "" + email);"," ""Response.Write(""""Request received."""");"""
Java,Sensitive Data Exposure,"response.getWriter().write(\Password: \"" + password);"""," ""response.getWriter().write(\""Your request is processed.\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Password: \"" + password);"""," ""Response.Write(\""Request received.\"");"""
Java,Sensitive Data Exposure,"response.getWriter().write(""Your email is: "" + email);","response.getWriter().write(""Your request is processed."");"
C#,Sensitive Data Exposure,"Response.Write(""Your email: "" + email);","Response.Write(""Request received."");"
Java,Sensitive Data Exposure,"response.getWriter().write(\Password: \"" + password);""","response.getWriter().write(\Your request is processed.\"");"""
C#,Sensitive Data Exposure,// Storing password in plain text\nstring plainPwd = password;,// Store hashed password instead of plain text
Java,Sensitive Data Exposure,"String pwd = request.getParameter(\pwd\""); // stored as plain text""","String pwdHash = BCrypt.hash(request.getParameter(\pwd\"")); store(pwdHash);"""
Java,Server-Side Request Forgery (SSRF),URL url = new URL(userInput); InputStream in = url.openStream();," ""if (isSafeURL(userInput)) { URL url = new URL(userInput); InputStream in = url.openStream(); }"""
C#,Server-Side Request Forgery (SSRF),WebClient client = new WebClient(); string result = client.DownloadString(userInput);," ""if(IsSafeUrl(userInput)) { WebClient client = new WebClient(); string result = client.DownloadString(userInput); }"""
Java,Server-Side Request Forgery (SSRF),URL url = new URL(userInput); InputStream in = url.openStream();,if (isSafeURL(userInput)) {\n    URL url = new URL(userInput);\n    InputStream in = url.openStream();\n}
C#,Server-Side Request Forgery (SSRF),WebClient client = new WebClient(); string result = client.DownloadString(userInput);,if(IsSafeUrl(userInput)) {\n    WebClient client = new WebClient();\n    string result = client.DownloadString(userInput);\n}
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURL target = new URL(url);\nURLConnection conn = target.openConnection();\nInputStream response = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url.startsWith(\""https://api.trusted.com/\"")) {\n    URL target = new URL(url);\n    URLConnection conn = target.openConnection();\n    InputStream response = conn.getInputStream();\n} else {\n    throw new SecurityException(\""Invalid URL\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpGet get = new HttpGet(url);\nHttpResponse response = HttpClientBuilder.create().build().execute(get);""","String url = request.getParameter(\url\"");\nif(url.matches(\""https://trusted\\.(com|org)/.*\"")) {\n    HttpGet get = new HttpGet(url);\n    HttpResponse response = HttpClientBuilder.create().build().execute(get);\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\nconn.setRequestMethod(\""GET\"");\nInputStream in = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url.startsWith(\""https://secure.example.com/\"")) {\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    conn.setRequestMethod(\""GET\"");\n    InputStream in = conn.getInputStream();\n} else {\n    throw new SecurityException(\""Invalid URL\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String endpoint = request.getParameter(\endpoint\"");\nString url = \""https://external.example.com/\"" + endpoint;\nURL target = new URL(url);\nInputStream is = target.openStream();""","String endpoint = request.getParameter(\endpoint\"");\nif(endpoint.matches(\""^[a-zA-Z0-9_/]+$\"")) {\n    String url = \""https://external.example.com/\"" + endpoint;\n    URL target = new URL(url);\n    InputStream is = target.openStream();\n} else {\n    throw new SecurityException(\""Invalid endpoint\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURL target = new URL(url);\nBufferedReader in = new BufferedReader(new InputStreamReader(target.openStream()));""","String url = request.getParameter(\url\"");\nif(url.contains(\""trustedparam=value\"")) {\n    URL target = new URL(url);\n    BufferedReader in = new BufferedReader(new InputStreamReader(target.openStream()));\n} else {\n    throw new SecurityException(\""Invalid URL parameters\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpClient client = HttpClientBuilder.create().build();\nHttpResponse response = client.execute(new HttpGet(url));""","String url = request.getParameter(\url\"");\nif(url.startsWith(\""https://api.safe.com/\"")) {\n    HttpClient client = HttpClientBuilder.create().build();\n    HttpResponse response = client.execute(new HttpGet(url));\n} else {\n    throw new SecurityException(\""URL is not permitted\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nWebClient client = new WebClient(); \nstring result = client.DownloadString(url);""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://trusted.com/\"")) { \n    WebClient client = new WebClient(); \n    string result = client.DownloadString(url); \n} else { \n    throw new Exception(\""Invalid URL\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nHttpWebRequest request = (HttpWebRequest)WebRequest.Create(url); \nHttpWebResponse response = (HttpWebResponse)request.GetResponse();""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://api.safesite.com/\"")) { \n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url); \n    HttpWebResponse response = (HttpWebResponse)request.GetResponse(); \n} else { \n    throw new Exception(\""URL not allowed\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nHttpClient client = new HttpClient(); \nvar response = client.GetAsync(url).Result;""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://secureapi.example.com/\"")) { \n    HttpClient client = new HttpClient(); \n    var response = client.GetAsync(url).Result; \n} else { \n    throw new Exception(\""Invalid URL\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.Form[\url\""]; \nWebRequest request = WebRequest.Create(url); \nWebResponse response = request.GetResponse();""","string url = Request.Form[\url\""]; \nif(url.StartsWith(\""https://validated.com/\"")) { \n    WebRequest request = WebRequest.Create(url); \n    WebResponse response = request.GetResponse(); \n} else { \n    throw new Exception(\""URL is not allowed\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nvar client = new RestClient(url); \nvar request = new RestRequest(Method.GET); \nIRestResponse response = client.Execute(request);""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://api.trustedsource.com/\"")) { \n    var client = new RestClient(url); \n    var request = new RestRequest(Method.GET); \n    IRestResponse response = client.Execute(request); \n} else { \n    throw new Exception(\""URL not permitted\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nusing(var client = new HttpClient()) { \n    var result = client.GetStringAsync(url).Result; \n}""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://cdn.safecontent.com/\"")) { \n    using(var client = new HttpClient()) { \n        var result = client.GetStringAsync(url).Result; \n    } \n} else { \n    throw new Exception(\""URL not allowed\""); \n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""]; \nusing(WebClient wc = new WebClient()) { \n    string data = wc.DownloadString(url); \n}""","string url = Request.QueryString[\url\""]; \nif(url.StartsWith(\""https://files.safe.net/\"")) { \n    using(WebClient wc = new WebClient()) { \n        string data = wc.DownloadString(url); \n    } \n} else { \n    throw new Exception(\""URL not allowed\""); \n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(""url"");\nURL target = new URL(url);\nURLConnection conn = target.openConnection();\nInputStream in = conn.getInputStream();","String url = request.getParameter(""url"");\nif(url != null && url.startsWith(""https://api.trusted.com/"")) {\n    URL target = new URL(url);\n    URLConnection conn = target.openConnection();\n    InputStream in = conn.getInputStream();\n} else {\n    throw new SecurityException(""URL not allowed"");\n}"
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[""url""];\nWebClient client = new WebClient();\nstring result = client.DownloadString(url);","string url = Request.QueryString[""url""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(""https://api.safesite.com/"")) {\n    WebClient client = new WebClient();\n    string result = client.DownloadString(url);\n} else {\n    throw new Exception(""URL not allowed"");\n}"
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[""url""];\nHttpClient client = new HttpClient();\nvar response = client.GetStringAsync(url).Result;","string url = Request.QueryString[""url""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(""https://secure.api.com/"")) {\n    HttpClient client = new HttpClient();\n    var response = client.GetStringAsync(url).Result;\n} else {\n    throw new Exception(""URL not allowed"");\n}"
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURL target = new URL(url);\nInputStream response = target.openStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    URL target = new URL(url);\n    InputStream response = target.openStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\nInputStream in = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    InputStream in = conn.getInputStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nHttpGet get = new HttpGet(url);\nHttpResponse response = HttpClientBuilder.create().build().execute(get);""","String url = request.getParameter(\url\"");\nif(url != null && url.matches(\""^https://(www\\.)?trusted\\.(com|org)/.*$\"")) {\n    HttpGet get = new HttpGet(url);\n    HttpResponse response = HttpClientBuilder.create().build().execute(get);\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nURLConnection conn = new URL(url).openConnection();\nconn.setConnectTimeout(5000);\nInputStream is = conn.getInputStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    URLConnection conn = new URL(url).openConnection();\n    conn.setConnectTimeout(5000);\n    InputStream is = conn.getInputStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nInputStream stream = new URL(url).openStream();""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n    InputStream stream = new URL(url).openStream();\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"CloseableHttpClient client = HttpClients.createDefault();\nHttpGet request = new HttpGet(request.getParameter(\url\""));\nCloseableHttpResponse response = client.execute(request);""","CloseableHttpClient client = HttpClients.createDefault();\nString url = request.getParameter(\url\"");\nif(url != null && url.matches(\""^https://secure\\.trusted\\.net/.*$\"")) {\n    HttpGet request = new HttpGet(url);\n    CloseableHttpResponse response = client.execute(request);\n} else {\n    throw new SecurityException(\""URL not allowed\"");\n}"""
Java,Server-Side Request Forgery (SSRF),"try {\n    String url = request.getParameter(\url\"");\n    URL target = new URL(url);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(target.openStream()));\n    String line;\n    while((line = reader.readLine()) != null) {\n        out.println(line);\n    }\n} catch(Exception e) { }""","try {\n    String url = request.getParameter(\url\"");\n    if(url != null && url.startsWith(\""https://api.trusted.com/\"")) {\n        URL target = new URL(url);\n        BufferedReader reader = new BufferedReader(new InputStreamReader(target.openStream()));\n        String line;\n        while((line = reader.readLine()) != null) {\n            out.println(line);\n        }\n    } else {\n        throw new SecurityException(\""URL not allowed\"");\n    }\n} catch(Exception e) { }"""
Java,Server-Side Request Forgery (SSRF),"String url = request.getParameter(\url\"");\nif(url.contains(\""http://\"") || url.contains(\""file://\"")) {\n    URL target = new URL(url);\n    InputStream in = target.openStream();\n    process(in);\n}""","String url = request.getParameter(\url\"");\nif(url != null && url.startsWith(\""https://\"") && url.contains(\""trusted.com\"")) {\n    URL target = new URL(url);\n    InputStream in = target.openStream();\n    process(in);\n} else {\n    throw new SecurityException(\""Invalid URL\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nWebClient client = new WebClient();\nstring result = client.DownloadString(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    WebClient client = new WebClient();\n    string result = client.DownloadString(url);\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nHttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\nHttpWebResponse response = (HttpWebResponse)request.GetResponse();""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n    HttpWebResponse response = (HttpWebResponse)request.GetResponse();\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.Form[\url\""];\nusing(var client = new HttpClient()) {\n    var response = client.GetAsync(url).Result;\n}""","string url = Request.Form[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://secureapi.example.com/\"")) {\n    using(var client = new HttpClient()) {\n        var response = client.GetAsync(url).Result;\n    }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nWebRequest webRequest = WebRequest.Create(url);\nusing(WebResponse webResponse = webRequest.GetResponse()) {\n    // Process response\n}""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    WebRequest webRequest = WebRequest.Create(url);\n    using(WebResponse webResponse = webRequest.GetResponse()) {\n        // Process response\n    }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nvar client = new RestClient(url);\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    var client = new RestClient(url);\n    var request = new RestRequest(Method.GET);\n    IRestResponse response = client.Execute(request);\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\ntry {\n    HttpClient client = new HttpClient();\n    var result = client.GetStringAsync(url).Result;\n} catch(Exception ex) { }""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    try {\n        HttpClient client = new HttpClient();\n        var result = client.GetStringAsync(url).Result;\n    } catch(Exception ex) { }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.Form[\url\""];\nif(url.Contains(\""http://\"") || url.Contains(\""ftp://\"")) {\n    string data = new WebClient().DownloadString(url);\n}""","string url = Request.Form[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://\"") && url.Contains(\""trusted.com\"")) {\n    string data = new WebClient().DownloadString(url);\n} else {\n    throw new Exception(\""Invalid URL\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nvar client = new WebClient();\nbyte[] bytes = client.DownloadData(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    var client = new WebClient();\n    byte[] bytes = client.DownloadData(url);\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nHttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);\nHttpWebResponse resp = (HttpWebResponse)req.GetResponse();""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://api.trusted.com/\"")) {\n    HttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);\n    HttpWebResponse resp = (HttpWebResponse)req.GetResponse();\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
C#,Server-Side Request Forgery (SSRF),"string url = Request.QueryString[\url\""];\nusing (var client = new HttpClient()) {\n    var response = client.GetAsync(url).Result;\n    var content = response.Content.ReadAsStringAsync().Result;\n}""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""https://secure.trusted.net/\"")) {\n    using (var client = new HttpClient()) {\n        var response = client.GetAsync(url).Result;\n        var content = response.Content.ReadAsStringAsync().Result;\n    }\n} else {\n    throw new Exception(\""URL not allowed\"");\n}"""
Java,Sensitive Data Exposure,"logger.info(\User password: \"" + password);""","logger.info(\User password: [REDACTED]\"");"""
Java,Sensitive Data Exposure,"String apiKey = \ABC123-SECRET-APIKEY\"";""","String apiKey = System.getenv(\API_KEY\"");"""
Java,Sensitive Data Exposure,"// Store SSN in plaintext\njdbc.executeUpdate(\INSERT INTO users (ssn) VALUES ('\"" + ssn + \""')\"");""","// Encrypt SSN before storing\nString encryptedSSN = EncryptionUtil.encrypt(ssn);\njdbc.executeUpdate(\INSERT INTO users (ssn) VALUES ('\"" + encryptedSSN + \""')\"");"""
Java,Sensitive Data Exposure,"URL url = new URL(\http://sensitive.example.com/data\"");\nURLConnection conn = url.openConnection();""","URL url = new URL(\https://sensitive.example.com/data\"");\nURLConnection conn = url.openConnection();"""
Java,Sensitive Data Exposure,"EmailService.send(emailAddress, \Your password is: \"" + password);""","EmailService.sendSecure(emailAddress, \Your password is: \"" + EncryptionUtil.mask(password));"""
Java,Sensitive Data Exposure,"Properties props = new Properties();\nprops.load(new FileInputStream(\config.properties\""));\n// config.properties contains plaintext credentials""","Properties props = ConfigLoader.loadSecureConfig(\config.enc\"");"""
Java,Sensitive Data Exposure,StringBuilder sensitiveData = new StringBuilder();\nsensitiveData.append(userInput);\n// sensitive data remains in memory,StringBuilder sensitiveData = new StringBuilder();\nsensitiveData.append(userInput);\n// Clear sensitive data after use\nsensitiveData.setLength(0);
Java,Sensitive Data Exposure,String encoded = Base64.getEncoder().encodeToString(sensitiveInfo.getBytes());,String encrypted = EncryptionUtil.encrypt(sensitiveInfo);\nString encoded = Base64.getEncoder().encodeToString(encrypted.getBytes(StandardCharsets.UTF_8));
Java,Sensitive Data Exposure,"FileWriter writer = new FileWriter(\data.csv\"");\nwriter.write(userData);""","FileWriter writer = new FileWriter(\data_encrypted.csv\"");\nwriter.write(EncryptionUtil.encrypt(userData));"""
Java,Sensitive Data Exposure,"logger.debug(\Session token: \"" + session.getId());""","logger.debug(\Session token: [REDACTED]\"");"""
Java,Sensitive Data Exposure,"File uploadedFile = new File(\/uploads/\"" + fileName);\nfile.transferTo(uploadedFile);""","File uploadedFile = new File(\/uploads/\"" + fileName);\nfile.transferTo(EncryptionUtil.encryptFile(uploadedFile));"""
Java,Sensitive Data Exposure,String encryptedPassword = AesUtil.encrypt(password); // Reversible encryption\nuser.setPassword(encryptedPassword);,"String hashedPassword = BCrypt.hashpw(password, BCrypt.gensalt());\nuser.setPassword(hashedPassword);"
Java,Sensitive Data Exposure,"String secretKey = \hardcodedSecretKey\"";\nProperties props = new Properties();\nprops.load(new FileInputStream(\""app.properties\""));""","String secretKey = System.getenv(\SECRET_KEY\"");\nProperties props = ConfigLoader.loadSecureConfig(\""app.enc\"");"""
Java,Sensitive Data Exposure,"FileOutputStream fos = new FileOutputStream(\user_data.txt\"");\nfos.write(userData.getBytes());""","FileOutputStream fos = new FileOutputStream(\user_data_encrypted.txt\"");\nfos.write(EncryptionUtil.encrypt(userData).getBytes(StandardCharsets.UTF_8));"""
Java,Sensitive Data Exposure,"response.sendRedirect(\/profile?token=\"" + session.getId());""","response.sendRedirect(\/profile?token=\"" + EncryptionUtil.encrypt(session.getId()));"""
Java,Sensitive Data Exposure,"logger.warn(\Sensitive data: \"" + sensitiveData);""","logger.warn(\Sensitive data: [REDACTED]\"");"""
Java,Sensitive Data Exposure,"String paymentInfo = creditCardNumber + \:\"" + expiryDate;\nPaymentService.process(paymentInfo);""",String encryptedPaymentInfo = EncryptionUtil.encrypt(paymentInfo);\nPaymentService.process(encryptedPaymentInfo);
Java,Sensitive Data Exposure,"File configFile = new File(\/conf/config.xml\"");\n// configuration file contains sensitive keys in plaintext""","File configFile = new File(\/conf/config.xml\"");\nProperties config = SecureConfigLoader.load(configFile);"""
C#,Sensitive Data Exposure,"logger.Info(\User password: \"" + password);""","logger.Info(\User password: [REDACTED]\"");"""
C#,Sensitive Data Exposure,"string apiKey = \XYZ-SECRET-APIKEY\"";""","string apiKey = Environment.GetEnvironmentVariable(\API_KEY\"");"""
C#,Sensitive Data Exposure,"command.CommandText = \INSERT INTO Users (SSN) VALUES ('\"" + ssn + \""')\"";""","string encryptedSSN = EncryptionUtil.Encrypt(ssn);\ncommand.CommandText = \INSERT INTO Users (SSN) VALUES ('\"" + encryptedSSN + \""')\"";"""
C#,Sensitive Data Exposure,"HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\http://sensitive.example.com/data\"");""","HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\https://sensitive.example.com/data\"");"""
C#,Sensitive Data Exposure,"EmailService.Send(email, \Your password is: \"" + password);""","EmailService.SendSecure(email, \Your password is: \"" + EncryptionUtil.Mask(password));"""
C#,Sensitive Data Exposure,"var config = ConfigurationManager.AppSettings[\DbPassword\""];""","var config = SecureConfigLoader.Load(\DbPassword\"");"""
C#,Sensitive Data Exposure,StringBuilder sensitiveData = new StringBuilder();\nsensitiveData.Append(userInput);\n// Data remains in memory,StringBuilder sensitiveData = new StringBuilder();\nsensitiveData.Append(userInput);\n// Clear sensitive data after use\nsensitiveData.Clear();
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Error: \"" + ex.Message); }""","catch(Exception ex) { Response.Write(\An error occurred. Please contact support.\""); logger.Error(ex); }"""
C#,Sensitive Data Exposure,string encoded = Convert.ToBase64String(Encoding.UTF8.GetBytes(sensitiveInfo));,string encrypted = EncryptionUtil.Encrypt(sensitiveInfo);\nstring encoded = Convert.ToBase64String(Encoding.UTF8.GetBytes(encrypted));
C#,Sensitive Data Exposure,"logger.Debug(\Session token: \"" + Session.SessionID);""","logger.Debug(\Session token: [REDACTED]\"");"""
C#,Sensitive Data Exposure,string encryptedPwd = AesEncryptor.Encrypt(password);\nuser.Password = encryptedPwd;,string hashedPwd = BCrypt.Net.BCrypt.HashPassword(password);\nuser.Password = hashedPwd;
C#,Sensitive Data Exposure,"SqlConnection conn = new SqlConnection(\Data Source=db.example.com;Initial Catalog=app;User ID=user;Password=pass;\"");""","SqlConnection conn = new SqlConnection(\Data Source=db.example.com;Initial Catalog=app;User ID=user;Password=pass;Encrypt=True;TrustServerCertificate=False;\"");"""
Java,Race Condition,public class Counter {\n    private int count = 0;\n    public void increment() {\n        count++; // unsynchronized increment\n    }\n},public class Counter {\n    private int count = 0;\n    public synchronized void increment() {\n        count++;\n    }\n}
Java,Race Condition,public class SharedList {\n    public List<Integer> list = new ArrayList<>();\n    public void addItem(int item) {\n        list.add(item); // unsynchronized modification\n    }\n},public class SharedList {\n    public List<Integer> list = new ArrayList<>();\n    public synchronized void addItem(int item) {\n        list.add(item);\n    }\n}
Java,Race Condition,public class Singleton {\n    private static Singleton instance;\n    public static Singleton getInstance() {\n        if(instance == null) { // race condition\n            instance = new Singleton();\n        }\n        return instance;\n    }\n},public class Singleton {\n    private static volatile Singleton instance;\n    public static Singleton getInstance() {\n        if(instance == null) {\n            synchronized(Singleton.class) {\n                if(instance == null) {\n                    instance = new Singleton();\n                }\n            }\n        }\n        return instance;\n    }\n}
Java,Race Condition,"if(map.get(key) == null) {\n    map.put(key, value); // check-then-act without lock\n}","synchronized(map) {\n    if(map.get(key) == null) {\n        map.put(key, value);\n    }\n}"
Java,Race Condition,public Resource getResource() {\n    if(resource == null) { // lazy initialization unsynchronized\n        resource = new Resource();\n    }\n    return resource;\n},public synchronized Resource getResource() {\n    if(resource == null) {\n        resource = new Resource();\n    }\n    return resource;\n}
Java,Race Condition,public void writeData(String data) {\n    file.write(data); // unsynchronized file write\n},public void writeData(String data) {\n    synchronized(this) {\n        file.write(data);\n    }\n}
Java,Race Condition,public void updateTotal(int value) {\n    total += value; // unsynchronized update\n},"public synchronized void updateTotal(int value) {\n    total = Math.addExact(total, value);\n}"
Java,Race Condition,public class Counter {\n    public int counter = 0;\n    public void increment() {\n        counter = counter + 1;\n    }\n},public class Counter {\n    private AtomicInteger counter = new AtomicInteger(0);\n    public void increment() {\n        counter.incrementAndGet();\n    }\n}
Java,Race Condition,public void process() {\n    if(flag == false) {\n        doWork();\n        flag = true;\n    }\n},public synchronized void process() {\n    if(!flag) {\n        doWork();\n        flag = true;\n    }\n}
Java,Race Condition,"public void update(String item) {\n    list.set(0, item); // unsynchronized access\n}","public void update(String item) {\n    synchronized(list) {\n         list.set(0, item);\n    }\n}"
Java,Race Condition,public int getValue() {\n    return value; // read without lock\n},public synchronized int getValue() {\n    return value;\n}
Java,Race Condition,public void addItem(Object item) {\n    if(!set.contains(item)) { // check-then-act\n        set.add(item);\n    }\n},public void addItem(Object item) {\n    synchronized(set) {\n        if(!set.contains(item)) {\n            set.add(item);\n        }\n    }\n}
Java,Race Condition,public void updateValue() {\n    value = value + 1; // unsynchronized update\n},"public synchronized void updateValue() {\n    value = value + 1;\n    // Alternatively, use an AtomicInteger\n}"
Java,Race Condition,public void updateResource(String data) {\n    resource.setData(data); // unsynchronized update\n},public void updateResource(String data) {\n    synchronized(resource) {\n         resource.setData(data);\n    }\n}
Java,Race Condition,public void incrementCounter() {\n    counter++; // unsynchronized\n},public void incrementCounter() {\n    counter.incrementAndGet();\n}
Java,Race Condition,public Object getInstance() {\n    if(instance == null) {\n        instance = new Object();\n    }\n    return instance;\n},public Object getInstance() {\n    if(instance == null) {\n        synchronized(this) {\n            if(instance == null) {\n                instance = new Object();\n            }\n        }\n    }\n    return instance;\n}
Java,Race Condition,public void logMessage(String msg) {\n    logger.log(msg); // unsynchronized logging\n},public void logMessage(String msg) {\n    synchronized(logger) {\n         logger.log(msg);\n    }\n}
Java,Race Condition,for(int i = 0; i < 1000; i++) {\n    total += compute(i); // unsynchronized loop update\n},"public synchronized void calculate() {\n    int total = 0;\n    for(int i = 0; i < 1000; i++) {\n        total = Math.addExact(total, compute(i));\n    }\n    this.result = total;\n}"
Java,Race Condition,"public void updateStatus() {\n    status = \updated\""; // unsynchronized\n}""","public void updateStatus() {\n    synchronized(this) {\n         status = \updated\"";\n    }\n}"""
Java,Race Condition,public void start() {\n    if(thread == null) {\n        thread = new Thread(this);\n        thread.start();\n    }\n},public void start() {\n    if(thread == null) {\n        synchronized(this) {\n            if(thread == null) {\n                thread = new Thread(this);\n                thread.start();\n            }\n        }\n    }\n}
Java,Race Condition,"if(object.getStatus().equals(\READY\"")) { begin(); }""","if(object != null && object.getStatus() != null && object.getStatus().equals(\READY\"")) {\n    synchronized(object) {\n         if(object.getStatus().equals(\""READY\"")) { begin(); }\n    }\n}"""
Java,Race Condition,public void addToTotal(int value) {\n    total = total + value; // unsynchronized addition\n},"public void addToTotal(int value) {\n    total = Math.addExact(total, value);\n}"
Java,Race Condition,public void updateCounter(int delta) {\n    counter = counter + delta;\n},"public synchronized void updateCounter(int delta) {\n    counter = Math.addExact(counter, delta);\n}"
Java,Race Condition,public void setData(String data) {\n    this.data = data; // no synchronization\n},public void setData(String data) {\n    synchronized(this) {\n         this.data = data;\n    }\n}
Java,Race Condition,public void processQueue() {\n    while(!queue.isEmpty()) {\n        process(queue.remove());\n    }\n},public void processQueue() {\n    synchronized(queue) {\n         while(!queue.isEmpty()) {\n             process(queue.remove());\n         }\n    }\n}
C#,Race Condition,public class Counter {\n    public int count = 0;\n    public void Increment() {\n        count++;\n    }\n},public class Counter {\n    private int count = 0;\n    public int Count { get { lock(this) { return count; } } }\n    public void Increment() {\n        lock(this) {\n            count++;\n        }\n    }\n}
C#,Race Condition,public void UpdateData(){\n    sharedData = GetData();\n},public void UpdateData(){\n    lock(sharedLock) {\n         sharedData = GetData();\n    }\n}
C#,Race Condition,if(myObject != null && myObject.IsReady) {\n    myObject.DoWork();\n},if(myObject != null) {\n    lock(myObject) {\n         if(myObject.IsReady) {\n             myObject.DoWork();\n         }\n    }\n}
C#,Race Condition,public void ProcessItem() {\n    if(item == null) {\n        item = new Item();\n    }\n    item.Process();\n},public void ProcessItem() {\n    if(item == null) {\n        lock(this) {\n            if(item == null) {\n                item = new Item();\n            }\n        }\n    }\n    item.Process();\n}
C#,Race Condition,sharedCounter++;,sharedCounter = Interlocked.Increment(ref sharedCounter);
C#,Race Condition,if(!flag) {\n    DoWork();\n    flag = true;\n},lock(processLock) {\n    if(!flag) {\n         DoWork();\n         flag = true;\n    }\n}
C#,Race Condition,public int GetCount() {\n    return count;\n},public int GetCount() {\n    lock(syncObj) {\n         return count;\n    }\n}
C#,Race Condition,dataList.Add(new Data());,lock(dataList) {\n    dataList.Add(new Data());\n}
C#,Race Condition,if(processing == false) {\n    Process();\n    processing = true;\n},if(!processing) {\n    lock(processLock) {\n         if(!processing) {\n             Process();\n             processing = true;\n         }\n    }\n}
C#,Race Condition,total += value;,"total = Interlocked.Add(ref total, value);"
C#,Race Condition,for(int i = 0; i < items.Count; i++) {\n    sum += items[i];\n},"int localSum = 0;\nfor(int i = 0; i < items.Count; i++) {\n    localSum += items[i];\n}\nInterlocked.Exchange(ref sum, localSum);"
C#,Race Condition,if(sharedData == null) {\n    sharedData = new Data();\n},if(sharedData == null) {\n    lock(dataLock) {\n         if(sharedData == null) { sharedData = new Data(); }\n    }\n}
C#,Race Condition,worker.Start();,lock(workerLock) {\n    if(!worker.IsRunning) {\n         worker.Start();\n    }\n}
C#,Race Condition,if(instance == null) {\n    instance = new Singleton();\n},public static Singleton Instance {\n    get {\n         if(instance == null) {\n              lock(syncRoot) {\n                   if(instance == null) {\n                        instance = new Singleton();\n                   }\n              }\n         }\n         return instance;\n    }\n}
C#,Race Condition,"public void UpdateCache(string key, object value) {\n    cache[key] = value;\n}","public void UpdateCache(string key, object value) {\n    lock(cache) {\n         cache[key] = value;\n    }\n}"
C#,Race Condition,void AppendMessage(string msg) {\n    log += msg;\n},void AppendMessage(string msg) {\n    lock(logLock) {\n         log += msg;\n    }\n}
C#,Race Condition,if(condition) { ExecuteTask(); },if(condition) {\n    lock(taskLock) {\n         if(condition) { ExecuteTask(); }\n    }\n}
C#,Race Condition,counter = counter + 1;,counter = Interlocked.Increment(ref counter);
C#,Race Condition,public void WriteData(string data) {\n    file.Write(data);\n},public void WriteData(string data) {\n    lock(file) {\n         file.Write(data);\n    }\n}
C#,Race Condition,if(!sharedSet.Contains(item)) { sharedSet.Add(item); },lock(sharedSet) {\n    if(!sharedSet.Contains(item)) { sharedSet.Add(item); }\n}
C#,Race Condition,result = currentValue + delta;,"result = Interlocked.Add(ref currentValue, delta);"
C#,Race Condition,orderService.UpdateOrder(order.Id);,lock(orderLock) { orderService.UpdateOrder(order.Id); }
Java,Unrestricted File Upload,"String fileName = file.getOriginalFilename();\nFiles.copy(file.getInputStream(), Paths.get(""uploads"", fileName));","String fileName = Paths.get(file.getOriginalFilename()).getFileName().toString();\nif(fileName.endsWith("".png"") || fileName.endsWith("".jpg"")) {\n    Files.copy(file.getInputStream(), Paths.get(""uploads"", fileName));\n}"
Java,Unvalidated Redirects,"response.sendRedirect(request.getParameter(""url""));","String url = request.getParameter(""url""); if (isValid(url)) { response.sendRedirect(url); }"
C#,Unvalidated Redirects,"Response.Redirect(Request.QueryString[""url""]);","string url = Request.QueryString[""url""]; if (IsValidRedirectUrl(url)) Response.Redirect(url);"
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(""MD5"");\nbyte[] hash = md.digest(password.getBytes());","MessageDigest md = MessageDigest.getInstance(""SHA-256"");\nbyte[] hash = md.digest(password.getBytes());"
C#,Weak Cryptography,using(var md5 = MD5.Create()) {\n    byte[] hash = md5.ComputeHash(passwordBytes);\n},using(var sha256 = SHA256.Create()) {\n    byte[] hash = sha256.ComputeHash(passwordBytes);\n}
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(""MD5"");\nbyte[] hash = md.digest(password.getBytes());","MessageDigest md = MessageDigest.getInstance(""SHA-256"");\nbyte[] hash = md.digest(password.getBytes(StandardCharsets.UTF_8));"
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(""DES"");\nSecretKeySpec key = new SecretKeySpec(""12345678"".getBytes(), ""DES"");\ncipher.init(Cipher.ENCRYPT_MODE, key);\nbyte[] encrypted = cipher.doFinal(data.getBytes());","Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");\nSecretKeySpec key = new SecretKeySpec(getAesKey(), ""AES"");\nIvParameterSpec iv = new IvParameterSpec(getInitializationVector());\ncipher.init(Cipher.ENCRYPT_MODE, key, iv);\nbyte[] encrypted = cipher.doFinal(data.getBytes(StandardCharsets.UTF_8));"
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(""AES/ECB/PKCS5Padding"");\nSecretKeySpec key = new SecretKeySpec(secretKey.getBytes(), ""AES"");\ncipher.init(Cipher.ENCRYPT_MODE, key);\nbyte[] encrypted = cipher.doFinal(plainText.getBytes());","Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");\nSecretKeySpec key = new SecretKeySpec(secretKey.getBytes(StandardCharsets.UTF_8), ""AES"");\nIvParameterSpec iv = new IvParameterSpec(initializationVector);\ncipher.init(Cipher.ENCRYPT_MODE, key, iv);\nbyte[] encrypted = cipher.doFinal(plainText.getBytes(StandardCharsets.UTF_8));"
Java,Weak Cryptography,"SecretKeySpec key = new SecretKeySpec(""hardcodedkey"".getBytes(), ""AES"");\nCipher cipher = Cipher.getInstance(""AES"");\ncipher.init(Cipher.ENCRYPT_MODE, key);","SecretKey key = KeyStoreUtil.getEncryptionKey(""myKeyAlias"");\nCipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");\nIvParameterSpec iv = new IvParameterSpec(getIV());\ncipher.init(Cipher.ENCRYPT_MODE, key, iv);"
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(""RC4"");\nSecretKeySpec key = new SecretKeySpec(secret.getBytes(), ""RC4"");\ncipher.init(Cipher.ENCRYPT_MODE, key);\nbyte[] encrypted = cipher.doFinal(data.getBytes());","Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");\nSecretKeySpec key = new SecretKeySpec(getAesKey(), ""AES"");\nIvParameterSpec iv = new IvParameterSpec(getIV());\ncipher.init(Cipher.ENCRYPT_MODE, key, iv);\nbyte[] encrypted = cipher.doFinal(data.getBytes(StandardCharsets.UTF_8));"
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(""SHA-1"");\nbyte[] hash = md.digest(password.getBytes());","SecretKeyFactory factory = SecretKeyFactory.getInstance(""PBKDF2WithHmacSHA256"");\nKeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 10000, 256);\nSecretKey key = factory.generateSecret(spec);\nbyte[] hash = key.getEncoded();"
Java,Weak Cryptography,"SecretKeyFactory factory = SecretKeyFactory.getInstance(""PBKDF2WithHmacSHA1"");\nKeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 1000, 128);\nSecretKey key = factory.generateSecret(spec);\nbyte[] hash = key.getEncoded();","SecretKeyFactory factory = SecretKeyFactory.getInstance(""PBKDF2WithHmacSHA256"");\nKeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 10000, 256);\nSecretKey key = factory.generateSecret(spec);\nbyte[] hash = key.getEncoded();"
Java,Weak Cryptography,"KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""RSA"");\nkeyGen.initialize(512);\nKeyPair pair = keyGen.generateKeyPair();","KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""RSA"");\nkeyGen.initialize(2048);\nKeyPair pair = keyGen.generateKeyPair();"
C#,Weak Cryptography,using (MD5 md5 = MD5.Create()) {\n    byte[] hash = md5.ComputeHash(Encoding.UTF8.GetBytes(password));\n},using (SHA256 sha256 = SHA256.Create()) {\n    byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\n}
C#,Weak Cryptography,"using (DESCryptoServiceProvider des = new DESCryptoServiceProvider()) {\n    des.Key = Encoding.UTF8.GetBytes(""12345678"");\n    des.IV = Encoding.UTF8.GetBytes(""12345678"");\n    ICryptoTransform encryptor = des.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}","using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Key = GetAesKey();\n    aes.IV = GetAesIV();\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}"
C#,Weak Cryptography,"using (TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider()) {\n    tdes.Mode = CipherMode.ECB;\n    tdes.Key = Encoding.UTF8.GetBytes(""0123456789abcdef01234567"");\n    ICryptoTransform encryptor = tdes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}","using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Mode = CipherMode.CBC;\n    aes.Key = GetAesKey();\n    aes.IV = GetAesIV();\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}"
C#,Weak Cryptography,"string keyString = ""hardcodedkey123"";\nbyte[] key = Encoding.UTF8.GetBytes(keyString);\nusing (AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Key = key;\n    aes.IV = GetInitializationVector();\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}","byte[] key = KeyManagement.GetEncryptionKey();\nusing (AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Key = key;\n    aes.IV = KeyManagement.GetInitializationVector();\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}"
C#,Weak Cryptography,using (SHA1CryptoServiceProvider sha1 = new SHA1CryptoServiceProvider()) {\n    byte[] hash = sha1.ComputeHash(Encoding.UTF8.GetBytes(password));\n},using (SHA256Managed sha256 = new SHA256Managed()) {\n    byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\n}
C#,Weak Cryptography,"var pdb = new Rfc2898DeriveBytes(password, salt, 1000);\nbyte[] key = pdb.GetBytes(32);","var pdb = new Rfc2898DeriveBytes(password, salt, 10000);\nbyte[] key = pdb.GetBytes(32);"
C#,Weak Cryptography,"using (RC2CryptoServiceProvider rc2 = new RC2CryptoServiceProvider()) {\n    rc2.Key = Encoding.UTF8.GetBytes(""weakkey1234567"");\n    rc2.IV = Encoding.UTF8.GetBytes(""12345678"");\n    ICryptoTransform encryptor = rc2.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}","using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Key = GetAesKey();\n    aes.IV = GetAesIV();\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(dataBytes, 0, dataBytes.Length);\n}"
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(""MD5"");\nbyte[] hash = md.digest(password.getBytes());","MessageDigest md = MessageDigest.getInstance(""SHA-256"");\nbyte[] hash = md.digest(password.getBytes(StandardCharsets.UTF_8));"
C#,Weak Cryptography,using (MD5 md5 = MD5.Create()) {\n    byte[] hash = md5.ComputeHash(Encoding.UTF8.GetBytes(password));\n},using (SHA256 sha256 = SHA256.Create()) {\n    byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\n}
Java,XML External Entity (XXE),DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder(); Document doc = db.parse(inputStream);," ""DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); dbf.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\""  true); Document doc = dbf.newDocumentBuilder().parse(inputStream);"""
C#,XML External Entity (XXE),XmlDocument doc = new XmlDocument(); doc.Load(inputStream);," ""XmlReaderSettings settings = new XmlReaderSettings(); settings.DtdProcessing = DtdProcessing.Prohibit; XmlReader reader = XmlReader.Create(inputStream  settings); XmlDocument doc = new XmlDocument(); doc.Load(reader);"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(""input.xml""));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(""input.xml""));"
Java,XML External Entity (XXE),"SAXParserFactory spf = SAXParserFactory.newInstance();\nSAXParser saxParser = spf.newSAXParser();\nsaxParser.parse(new File(""input.xml""), new DefaultHandler());","SAXParserFactory spf = SAXParserFactory.newInstance();\nspf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);\nspf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);\nSAXParser saxParser = spf.newSAXParser();\nsaxParser.parse(new File(""input.xml""), new DefaultHandler());"
Java,XML External Entity (XXE),DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nDocumentBuilder builder = factory.newDocumentBuilder();\nDocument doc = builder.parse(inputStream);,"DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nfactory.setFeature(""http://xml.org/sax/features/external-general-entities"", false);\nfactory.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);\nfactory.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);\nDocumentBuilder builder = factory.newDocumentBuilder();\nDocument doc = builder.parse(inputStream);"
Java,XML External Entity (XXE),"XMLInputFactory xif = XMLInputFactory.newInstance();\nXMLStreamReader xsr = xif.createXMLStreamReader(new FileInputStream(""input.xml""));","XMLInputFactory xif = XMLInputFactory.newInstance();\nxif.setProperty(XMLInputFactory.SUPPORT_DTD, false);\nxif.setProperty(""javax.xml.stream.isSupportingExternalEntities"", false);\nXMLStreamReader xsr = xif.createXMLStreamReader(new FileInputStream(""input.xml""));"
Java,XML External Entity (XXE),"DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nDocumentBuilder builder = factory.newDocumentBuilder();\nDocument document = builder.parse(""input.xml"");","DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nfactory.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);\nDocumentBuilder builder = factory.newDocumentBuilder();\nDocument document = builder.parse(""input.xml"");"
Java,XML External Entity (XXE),"DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nDocumentBuilder builder = factory.newDocumentBuilder();\nbuilder.setEntityResolver(null);\nDocument doc = builder.parse(new File(""input.xml""));","DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nfactory.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);\nDocumentBuilder builder = factory.newDocumentBuilder();\nbuilder.setEntityResolver(new EntityResolver() {\n    public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n         return new InputSource(new StringReader(\\""));\n    }\n});\nDocument doc = builder.parse(new File(""""input.xml""""));"""
C#,XML External Entity (XXE),"XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.Load(""input.xml"");","XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.XmlResolver = null;\nxmlDoc.Load(""input.xml"");"
C#,XML External Entity (XXE),"XmlReader reader = XmlReader.Create(""input.xml"");\nwhile(reader.Read()) { }","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nXmlReader reader = XmlReader.Create(""input.xml"", settings);\nwhile(reader.Read()) { }"
C#,XML External Entity (XXE),"XDocument doc = XDocument.Load(""input.xml"");","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nusing (XmlReader reader = XmlReader.Create(""input.xml"", settings))\n{\n    XDocument doc = XDocument.Load(reader);\n}"
C#,XML External Entity (XXE),"XmlTextReader reader = new XmlTextReader(""input.xml"");\nwhile(reader.Read()) { }","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nXmlTextReader reader = new XmlTextReader(""input.xml"");\nreader.DtdProcessing = DtdProcessing.Prohibit;\nwhile(reader.Read()) { }"
C#,XML External Entity (XXE),"DataSet ds = new DataSet();\nds.ReadXml(""input.xml"");","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nusing (XmlReader reader = XmlReader.Create(""input.xml"", settings))\n{\n    DataSet ds = new DataSet();\n    ds.ReadXml(reader);\n}"
C#,XML External Entity (XXE),"using (XmlReader reader = XmlReader.Create(""input.xml"")) {\n    XmlSerializer serializer = new XmlSerializer(typeof(Order));\n    Order order = (Order)serializer.Deserialize(reader);\n}","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nusing (XmlReader reader = XmlReader.Create(""input.xml"", settings)) {\n    XmlSerializer serializer = new XmlSerializer(typeof(Order));\n    Order order = (Order)serializer.Deserialize(reader);\n}"
C#,XML External Entity (XXE),"using(FileStream fs = new FileStream(""input.xml"", FileMode.Open)) {\n    XmlDocument doc = new XmlDocument();\n    doc.Load(fs);\n}","using(FileStream fs = new FileStream(""input.xml"", FileMode.Open)) {\n    XmlReaderSettings settings = new XmlReaderSettings();\n    settings.DtdProcessing = DtdProcessing.Prohibit;\n    using(XmlReader reader = XmlReader.Create(fs, settings)) {\n         XmlDocument doc = new XmlDocument();\n         doc.XmlResolver = null;\n         doc.Load(reader);\n    }\n}"
C#,XML External Entity (XXE),"XElement xml = XElement.Load(""input.xml"");","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nusing(XmlReader reader = XmlReader.Create(""input.xml"", settings)) {\n    XElement xml = XElement.Load(reader);\n}"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(""input.xml""));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(""input.xml""));"
C#,XML External Entity (XXE),"XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.Load(""input.xml"");","XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.XmlResolver = null;\nxmlDoc.Load(""input.xml"");"
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\"");\nbyte[] hash = md.digest(password.getBytes());""","MessageDigest md = MessageDigest.getInstance(\SHA-256\"");\nbyte[] hash = md.digest(password.getBytes(StandardCharsets.UTF_8));"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\SHA-1\"");\nbyte[] hash = md.digest(data.getBytes());""","MessageDigest md = MessageDigest.getInstance(\SHA-256\"");\nbyte[] hash = md.digest(data.getBytes(StandardCharsets.UTF_8));"""
Java,Weak Cryptography,"SecureRandom sr = new SecureRandom();\nbyte[] keyBytes = new byte[16];\nsr.nextBytes(keyBytes);\nSecretKey key = new SecretKeySpec(keyBytes, \AES\"");""","SecureRandom sr = SecureRandom.getInstanceStrong();\nbyte[] keyBytes = new byte[16];\nsr.nextBytes(keyBytes);\nSecretKey key = new SecretKeySpec(keyBytes, \AES\"");"""
Java,Weak Cryptography,"SecretKeyFactory factory = SecretKeyFactory.getInstance(""""PBKDF2WithHmacSHA1"""");\nKeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 1000, 128);\nSecretKey key = factory.generateSecret(spec);\nbyte[] hash = key.getEncoded();","SecretKeyFactory factory = SecretKeyFactory.getInstance(""""PBKDF2WithHmacSHA256"""");\nKeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 10000, 256);\nSecretKey key = factory.generateSecret(spec);\nbyte[] hash = key.getEncoded();"
Java,Weak Cryptography,"KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\RSA\"");\nkeyGen.initialize(512);\nKeyPair pair = keyGen.generateKeyPair();""","KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\RSA\"");\nkeyGen.initialize(2048);\nKeyPair pair = keyGen.generateKeyPair();"""
Java,Weak Cryptography,"Signature signature = Signature.getInstance(\MD5withRSA\"");\nsignature.initSign(privateKey);\nsignature.update(data.getBytes());\nbyte[] digitalSignature = signature.sign();""","Signature signature = Signature.getInstance(\SHA256withRSA\"");\nsignature.initSign(privateKey);\nsignature.update(data.getBytes(StandardCharsets.UTF_8));\nbyte[] digitalSignature = signature.sign();"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\SHA-256\"");\nbyte[] hash = md.digest(password.getBytes());""","byte[] salt = getSecureSalt();\nMessageDigest md = MessageDigest.getInstance(\SHA-256\"");\nmd.update(salt);\nbyte[] hash = md.digest(password.getBytes(StandardCharsets.UTF_8));"""
Java,Weak Cryptography,String apiKeyHash = MD5Util.hash(apiKey);\nif(apiKeyHash.equals(storedHash)) { grantAccess(); },"String apiKeyHash = HashUtil.hashWithSHA256(apiKey, salt);\nif(apiKeyHash.equals(storedHash)) { grantAccess(); }"
C#,Weak Cryptography,using(MD5 md5 = MD5.Create()) {\n    byte[] hash = md5.ComputeHash(Encoding.UTF8.GetBytes(password));\n},using(SHA256 sha256 = SHA256.Create()) {\n    byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\n}
C#,Weak Cryptography,using(SHA1CryptoServiceProvider sha1 = new SHA1CryptoServiceProvider()) {\n    byte[] hash = sha1.ComputeHash(Encoding.UTF8.GetBytes(data));\n},using(SHA256Managed sha256 = new SHA256Managed()) {\n    byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(data));\n}
C#,Weak Cryptography,using(SHA256 sha256 = SHA256.Create()) {\n    byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\n},byte[] salt = GetSalt();\nusing(SHA256 sha256 = SHA256.Create()) {\n    byte[] combined = salt.Concat(Encoding.UTF8.GetBytes(password)).ToArray();\n    byte[] hash = sha256.ComputeHash(combined);\n}
C#,Weak Cryptography,"string keyString = \hardcodedkey123\"";\nbyte[] key = Encoding.UTF8.GetBytes(keyString);""",byte[] key = KeyManager.GetEncryptionKey();
C#,Weak Cryptography,"var pdb = new Rfc2898DeriveBytes(password, salt, 1000);\nbyte[] key = pdb.GetBytes(32);","var pdb = new Rfc2898DeriveBytes(password, salt, 10000);\nbyte[] key = pdb.GetBytes(32);"
C#,Weak Cryptography,RSACryptoServiceProvider rsa = new RSACryptoServiceProvider(512);,RSACryptoServiceProvider rsa = new RSACryptoServiceProvider(2048);
C#,Weak Cryptography,"using(AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Mode = CipherMode.ECB;\n    aes.Key = Encoding.UTF8.GetBytes(aesKey);\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(plainTextBytes, 0, plainTextBytes.Length);\n}","using(AesCryptoServiceProvider aes = new AesCryptoServiceProvider()) {\n    aes.Mode = CipherMode.CBC;\n    aes.Key = GetAesKey();\n    aes.IV = GetAesIV();\n    ICryptoTransform encryptor = aes.CreateEncryptor();\n    byte[] encrypted = encryptor.TransformFinalBlock(plainTextBytes, 0, plainTextBytes.Length);\n}"
C#,Weak Cryptography,"RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();\nbyte[] signature = rsa.SignData(Encoding.UTF8.GetBytes(data), new MD5CryptoServiceProvider());","RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();\nbyte[] signature = rsa.SignData(Encoding.UTF8.GetBytes(data), new SHA256Managed());"
C#,Weak Cryptography,HMACMD5 hmac = new HMACMD5(Encoding.UTF8.GetBytes(key));\nbyte[] hash = hmac.ComputeHash(Encoding.UTF8.GetBytes(data));,HMACSHA256 hmac = new HMACSHA256(Encoding.UTF8.GetBytes(key));\nbyte[] hash = hmac.ComputeHash(Encoding.UTF8.GetBytes(data));
C#,Weak Cryptography,using(MD5 md5 = MD5.Create()) {\n    byte[] hash = md5.ComputeHash(File.ReadAllBytes(filePath));\n},using(SHA256 sha256 = SHA256.Create()) {\n    byte[] hash = sha256.ComputeHash(File.ReadAllBytes(filePath));\n}
Java,XML External Entity (XXE),"JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nMyClass obj = (MyClass) unmarshaller.unmarshal(new File(\input.xml\""));""","JAXBContext context = JAXBContext.newInstance(MyClass.class);\nUnmarshaller unmarshaller = context.createUnmarshaller();\nunmarshaller.setProperty(UnmarshallerProperties.XML_SECURITY_DISABLED, Boolean.FALSE);\nMyClass obj = (MyClass) unmarshaller.unmarshal(new File(\input.xml\""));"""
C#,XML External Entity (XXE),"XmlDocument doc = new XmlDocument();\ndoc.Load(\input.xml\"");""","XmlDocument doc = new XmlDocument();\ndoc.XmlResolver = null;\ndoc.Load(\input.xml\"");"""
C#,XML External Entity (XXE),"using(StreamReader sr = new StreamReader(\input.xml\"")) {\n    string xmlContent = sr.ReadToEnd();\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(xmlContent);\n}""","using(StreamReader sr = new StreamReader(\input.xml\"")) {\n    string xmlContent = sr.ReadToEnd();\n    XmlDocument doc = new XmlDocument();\n    doc.XmlResolver = null;\n    doc.LoadXml(xmlContent);\n}"""
C#,XML External Entity (XXE),"using(XmlTextReader reader = new XmlTextReader(\input.xml\"")) {\n    while(reader.Read()) { }\n}""","using(XmlTextReader reader = new XmlTextReader(\input.xml\"")) {\n    reader.DtdProcessing = DtdProcessing.Prohibit;\n    while(reader.Read()) { }\n}"""
C#,XML External Entity (XXE),"string xml = File.ReadAllText(\input.xml\"");\nXmlDocument doc = new XmlDocument();\ndoc.LoadXml(xml);""","string xml = File.ReadAllText(\input.xml\"");\nXmlDocument doc = new XmlDocument();\ndoc.XmlResolver = null;\ndoc.LoadXml(xml);"""
C#,XML External Entity (XXE),XmlReader reader = XmlReader.Create(new StringReader(xmlData));\nwhile(reader.Read()) { },"XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nXmlReader reader = XmlReader.Create(new StringReader(xmlData), settings);\nwhile(reader.Read()) { }"
C#,XML External Entity (XXE),DataSet ds = new DataSet();\nds.ReadXml(new StringReader(xmlData));,"DataSet ds = new DataSet();\nXmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nusing(XmlReader reader = XmlReader.Create(new StringReader(xmlData), settings)) {\n    ds.ReadXml(reader);\n}"
C#,XML External Entity (XXE),"using(XmlUrlResolver resolver = new XmlUrlResolver()) {\n    XmlDocument doc = new XmlDocument();\n    doc.Load(\input.xml\"");\n}""","XmlDocument doc = new XmlDocument();\ndoc.XmlResolver = null;\ndoc.Load(\input.xml\"");"""
Java,Unrestricted File Upload,"Part filePart = request.getPart(\file\"");\nString fileName = filePart.getSubmittedFileName();\nfilePart.write(\""/data/\"" + fileName);""","Part filePart = request.getPart(\file\"");\nString fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString();\nif(fileName.matches(\""^[a-zA-Z0-9_.-]+\\.(pdf|docx)$\"")) {\n    filePart.write(\""/data/\"" + fileName);\n} else {\n    throw new Exception(\""Invalid file type\"");\n}"""
Java,Unrestricted File Upload,"File uploaded = new File(\/public/\"" + filePart.getSubmittedFileName());\nfilePart.write(uploaded.getAbsolutePath());""","String safeName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString();\nif(safeName.matches(\^[a-zA-Z0-9_.-]+\\.(mp4|avi)$\"")) {\n    File uploaded = new File(\""/public/\"" + safeName);\n    filePart.write(uploaded.getAbsolutePath());\n} else {\n    throw new Exception(\""File type not allowed\"");\n}"""
Java,Unrestricted File Upload,"DiskFileItemFactory factory = new DiskFileItemFactory();\nServletFileUpload upload = new ServletFileUpload(factory);\nList<FileItem> items = upload.parseRequest(request);\nfor(FileItem item : items) {\n    if(!item.isFormField()) {\n        item.write(new File(\/uploads/\"" + item.getName()));\n    }\n}""","DiskFileItemFactory factory = new DiskFileItemFactory();\nServletFileUpload upload = new ServletFileUpload(factory);\nList<FileItem> items = upload.parseRequest(request);\nfor(FileItem item : items) {\n    if(!item.isFormField()) {\n        String safeName = FilenameUtils.getName(item.getName());\n        if(safeName.matches(\^[a-zA-Z0-9_.-]+\\.(doc|pdf)$\"")) {\n            item.write(new File(\""/uploads/\"" + safeName));\n        } else {\n            throw new Exception(\""File type not allowed\"");\n        }\n    }\n}"""
Java,Unrestricted File Upload,"Part imagePart = request.getPart(\image\"");\nString imgName = imagePart.getSubmittedFileName();\nimagePart.write(\""/img/\"" + imgName);""","Part imagePart = request.getPart(\image\"");\nString imgName = Paths.get(imagePart.getSubmittedFileName()).getFileName().toString();\nif(imgName.matches(\""^[a-zA-Z0-9_.-]+\\.(jpg|jpeg|png)$\"")) {\n    imagePart.write(\""/img/\"" + imgName);\n} else {\n    throw new Exception(\""Invalid image file\"");\n}"""
Java,Unrestricted File Upload,"FileItem fileItem = ...; // obtained from request\nfileItem.write(new File(\/upload/\"" + fileItem.getName()));""","FileItem fileItem = ...; // obtained from request\nString safeName = FilenameUtils.getName(fileItem.getName());\nif(safeName.matches(\^[a-zA-Z0-9_.-]+\\.(xls|xlsx)$\"")) {\n    fileItem.write(new File(\""/upload/\"" + safeName));\n} else {\n    throw new Exception(\""Invalid file type\"");\n}"""
Java,Unrestricted File Upload,"Part audioPart = request.getPart(\audio\"");\nString audioName = audioPart.getSubmittedFileName();\naudioPart.write(\""/audio/\"" + audioName);""","Part audioPart = request.getPart(\audio\"");\nString audioName = Paths.get(audioPart.getSubmittedFileName()).getFileName().toString();\nif(audioName.matches(\""^[a-zA-Z0-9_.-]+\\.(mp3|wav)$\"")) {\n    audioPart.write(\""/audio/\"" + audioName);\n} else {\n    throw new Exception(\""Invalid audio file\"");\n}"""
Java,Unrestricted File Upload,"FileItem fileItem = ...; // from multipart request\nfileItem.write(new File(\/uploads/\"" + fileItem.getName()));""","FileItem fileItem = ...; // from multipart request\nString safeName = FilenameUtils.getName(fileItem.getName());\nif(safeName.matches(\^[a-zA-Z0-9_.-]+\\.(txt|log)$\"")) {\n    fileItem.write(new File(\""/uploads/\"" + safeName));\n} else {\n    throw new Exception(\""Invalid file type\"");\n}"""
Java,Unrestricted File Upload,"Part filePart = request.getPart(\file\"");\nString fileName = request.getParameter(\""filename\"");\nfilePart.write(\""/uploads/\"" + fileName);""","String fileName = request.getParameter(\filename\"");\nString safeName = FilenameUtils.getName(fileName);\nif(safeName.matches(\""^[a-zA-Z0-9_.-]+\\.(csv)$\"")) {\n    filePart.write(\""/uploads/\"" + safeName);\n} else {\n    throw new Exception(\""Invalid file type\"");\n}"""
Java,Unrestricted File Upload,"Part filePart = request.getPart(\avatar\"");\nString fileName = filePart.getSubmittedFileName();\nfilePart.write(\""/avatars/\"" + fileName);""","Part filePart = request.getPart(\avatar\"");\nString fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString();\nif(fileName.matches(\""^[a-zA-Z0-9_.-]+\\.(jpg|jpeg|png)$\"")) {\n    filePart.write(\""/avatars/\"" + fileName);\n} else {\n    throw new ServletException(\""Invalid avatar file type\"");\n}"""
Java,Unrestricted File Upload,"Part filePart = request.getPart(\file\"");\nfilePart.write(\""/uploads/\"" + filePart.getSubmittedFileName());""","Part filePart = request.getPart(\file\"");\nString safeName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString();\nif(safeName.matches(\""^[a-zA-Z0-9_.-]+\\.(csv)$\"")) {\n    filePart.write(\""/uploads/\"" + safeName);\n} else {\n    throw new ServletException(\""Invalid file type\"");\n}"""
Java,Unrestricted File Upload,"Part audioPart = request.getPart(\audio\"");\nString audioName = audioPart.getSubmittedFileName();\naudioPart.write(\""/audio/\"" + audioName);""","Part audioPart = request.getPart(\audio\"");\nString audioName = Paths.get(audioPart.getSubmittedFileName()).getFileName().toString();\nif(audioName.matches(\""^[a-zA-Z0-9_.-]+\\.(mp3|wav)$\"")) {\n    audioPart.write(\""/audio/\"" + audioName);\n} else {\n    throw new ServletException(\""Invalid audio file\"");\n}"""
Java,Unrestricted File Upload,"FileItem fileItem = ...; // from multipart request\nfileItem.write(new File(\/uploads/\"" + fileItem.getName()));""","FileItem fileItem = ...; // from multipart request\nString safeName = FilenameUtils.getName(fileItem.getName());\nif(safeName.matches(\^[a-zA-Z0-9_.-]+\\.(txt|log)$\"")) {\n    fileItem.write(new File(\""/uploads/\"" + safeName));\n} else {\n    throw new ServletException(\""Invalid file type\"");\n}"""
Java,Unrestricted File Upload,"Part filePart = request.getPart(\file\"");\nString fileName = request.getParameter(\""filename\"");\nfilePart.write(\""/uploads/\"" + fileName);""","String fileName = request.getParameter(\filename\"");\nString safeName = FilenameUtils.getName(fileName);\nif(safeName.matches(\""^[a-zA-Z0-9_.-]+\\.(csv)$\"")) {\n    filePart.write(\""/uploads/\"" + safeName);\n} else {\n    throw new ServletException(\""Invalid file type\"");\n}"""
Java,Unvalidated Redirects,"String redirectUrl = request.getParameter(\url\"");\nresponse.sendRedirect(redirectUrl);""","String redirectUrl = request.getParameter(\url\"");\nif(redirectUrl != null && redirectUrl.startsWith(\""/\"")) {\n    response.sendRedirect(redirectUrl);\n} else {\n    response.sendRedirect(\""/default\"");\n}"""
Java,Unvalidated Redirects,"String nextPage = request.getParameter(\nextPage\"");\nresponse.sendRedirect(nextPage);""","String nextPage = request.getParameter(\nextPage\"");\nif(nextPage != null && nextPage.startsWith(\""/\"")) {\n    response.sendRedirect(nextPage);\n} else {\n    response.sendRedirect(\""/home\"");\n}"""
Java,Unvalidated Redirects,"String target = request.getParameter(\target\"");\nresponse.sendRedirect(target);""","String target = request.getParameter(\target\"");\n// Allow only relative URLs\nif(target != null && target.matches(\""^/[a-zA-Z0-9/_-]*$\"")) {\n    response.sendRedirect(target);\n} else {\n    response.sendRedirect(\""/error\"");\n}"""
Java,Unvalidated Redirects,"String url = request.getParameter(\redirect\"");\nreturn \""redirect:\"" + url;""","String url = request.getParameter(\redirect\"");\nif(url != null && url.startsWith(\""/\"")) {\n    return \""redirect:\"" + url;\n} else {\n    return \""redirect:/login\"";\n}"""
Java,Unvalidated Redirects,"String destination = request.getParameter(\dest\"");\nresponse.sendRedirect(destination);""","String destination = request.getParameter(\dest\"");\nif(destination != null && destination.startsWith(\""/\"")) {\n    response.sendRedirect(destination);\n} else {\n    response.sendRedirect(\""/index\"");\n}"""
Java,Unvalidated Redirects,"String returnUrl = request.getParameter(\returnUrl\"");\nresponse.sendRedirect(returnUrl);""","String returnUrl = request.getParameter(\returnUrl\"");\nif(returnUrl != null && returnUrl.startsWith(\""/\"")) {\n    response.sendRedirect(returnUrl);\n} else {\n    response.sendRedirect(\""/dashboard\"");\n}"""
Java,Unvalidated Redirects,"String next = request.getParameter(\next\"");\nresponse.sendRedirect(next);""","String next = request.getParameter(\next\"");\n// Only allow relative redirection\nif(next != null && !next.contains(\""://\"")) {\n    response.sendRedirect(next);\n} else {\n    response.sendRedirect(\""/home\"");\n}"""
Java,Unvalidated Redirects,"String urlParam = request.getParameter(\urlParam\"");\nresponse.sendRedirect(urlParam);""","String urlParam = request.getParameter(\urlParam\"");\nif(urlParam != null && urlParam.startsWith(\""/\"")) {\n    response.sendRedirect(urlParam);\n} else {\n    response.sendRedirect(\""/defaultPage\"");\n}"""
Java,Unvalidated Redirects,"String redir = request.getParameter(\redir\"");\nresponse.sendRedirect(redir);""","String redir = request.getParameter(\redir\"");\nif(redir != null && redir.matches(\""^\\/[a-zA-Z0-9]+$\"")) {\n    response.sendRedirect(redir);\n} else {\n    response.sendRedirect(\""/errorPage\"");\n}"""
Java,Unvalidated Redirects,"String callback = request.getParameter(\callback\"");\nresponse.sendRedirect(\""<script>location.href='\"" + callback + \""';</script>\"");""","String callback = request.getParameter(\callback\"");\nresponse.sendRedirect(\""<script>location.href='\"" + (callback != null && callback.startsWith(\""/\"" ) ? callback : \""/home\"") + \""';</script>\"");"""
Java,Unvalidated Redirects,"String gotoUrl = request.getParameter(\goto\"");\nresponse.sendRedirect(gotoUrl);""","String gotoUrl = request.getParameter(\goto\"");\nif(gotoUrl != null && gotoUrl.startsWith(\""/\"")) {\n    response.sendRedirect(gotoUrl);\n} else {\n    response.sendRedirect(\""/default\"");\n}"""
Java,Unvalidated Redirects,"String nextUrl = request.getParameter(\nextUrl\"");\nresponse.sendRedirect(nextUrl);""","String nextUrl = request.getParameter(\nextUrl\"");\nif(nextUrl != null && nextUrl.matches(\""^/[\\w/.-]+$\"")) {\n    response.sendRedirect(nextUrl);\n} else {\n    response.sendRedirect(\""/main\"");\n}"""
Java,Unvalidated Redirects,"String targetUrl = request.getParameter(\targetUrl\"");\nresponse.sendRedirect(targetUrl);""","String targetUrl = request.getParameter(\targetUrl\"");\nif(targetUrl != null && targetUrl.startsWith(\""/\"")) {\n    response.sendRedirect(targetUrl);\n} else {\n    response.sendRedirect(\""/notAuthorized\"");\n}"""
Java,Unvalidated Redirects,"String redirectTo = request.getParameter(\redirectTo\"");\nresponse.sendRedirect(redirectTo);""","String redirectTo = request.getParameter(\redirectTo\"");\nif(redirectTo != null && redirectTo.startsWith(\""/\"")) {\n    response.sendRedirect(redirectTo);\n} else {\n    response.sendRedirect(\""/error\"");\n}"""
Java,Unvalidated Redirects,"String exitUrl = request.getParameter(\exitUrl\"");\nresponse.sendRedirect(exitUrl);""","String exitUrl = request.getParameter(\exitUrl\"");\nif(exitUrl != null && exitUrl.startsWith(\""/\"")) {\n    response.sendRedirect(exitUrl);\n} else {\n    response.sendRedirect(\""/logout\"");\n}"""
Java,Unvalidated Redirects,"String ref = request.getParameter(\ref\"");\nresponse.sendRedirect(ref);""","String ref = request.getParameter(\ref\"");\nif(ref != null && ref.startsWith(\""/\"")) {\n    response.sendRedirect(ref);\n} else {\n    response.sendRedirect(\""/default\"");\n}"""
Java,Unvalidated Redirects,"String rUrl = request.getParameter(\rUrl\"");\nresponse.sendRedirect(rUrl);""","String rUrl = request.getParameter(\rUrl\"");\nif(rUrl != null && rUrl.startsWith(\""/\"")) {\n    response.sendRedirect(rUrl);\n} else {\n    response.sendRedirect(\""/notAllowed\"");\n}"""
Java,Unvalidated Redirects,"String urlInput = request.getParameter(\urlInput\"");\nresponse.sendRedirect(urlInput);""","String urlInput = request.getParameter(\urlInput\"");\nif(urlInput != null && urlInput.startsWith(\""/\"")) {\n    response.sendRedirect(urlInput);\n} else {\n    response.sendRedirect(\""/fallback\"");\n}"""
Java,Unvalidated Redirects,"String finalUrl = request.getParameter(\finalUrl\"");\nresponse.sendRedirect(finalUrl);""","String finalUrl = request.getParameter(\finalUrl\"");\nif(finalUrl != null && finalUrl.matches(\""^/[\\w/.-]+$\"")) {\n    response.sendRedirect(finalUrl);\n} else {\n    response.sendRedirect(\""/login\"");\n}"""
Java,Unvalidated Redirects,"return \redirect:\"" + request.getParameter(\""nextPage\"");""","String nextPage = request.getParameter(\nextPage\"");\nif(nextPage != null && nextPage.startsWith(\""/\"")) { return \""redirect:\"" + nextPage; } else { return \""redirect:/home\""; }"""
Java,Unvalidated Redirects,"String gotoPage = request.getParameter(\gotoPage\"");\nresponse.sendRedirect(gotoPage);""","String gotoPage = request.getParameter(\gotoPage\"");\nif(gotoPage != null && gotoPage.matches(\""^/[a-zA-Z0-9/_-]+$\"")) { response.sendRedirect(gotoPage); } else { response.sendRedirect(\""/home\""); }"""
C#,Unvalidated Redirects,"string url = Request.QueryString[\url\""];\nResponse.Redirect(url);""","string url = Request.QueryString[\url\""];\nif(!string.IsNullOrEmpty(url) && url.StartsWith(\""/\"")) { Response.Redirect(url); } else { Response.Redirect(\""/default\""); }"""
C#,Unvalidated Redirects,"string nextPage = Request.Form[\nextPage\""];\nResponse.Redirect(nextPage);""","string nextPage = Request.Form[\nextPage\""];\nif(!string.IsNullOrEmpty(nextPage) && nextPage.StartsWith(\""/\"")) { Response.Redirect(nextPage); } else { Response.Redirect(\""/home\""); }"""
C#,Unvalidated Redirects,"string returnUrl = Request.QueryString[\returnUrl\""];\nResponse.Redirect(returnUrl);""","string returnUrl = Request.QueryString[\returnUrl\""];\nif(!string.IsNullOrEmpty(returnUrl) && returnUrl.StartsWith(\""/\"")) { Response.Redirect(returnUrl); } else { Response.Redirect(\""/dashboard\""); }"""
C#,Unvalidated Redirects,"string redirectTo = Request.Params[\redirectTo\""];\nResponse.Redirect(redirectTo);""","string redirectTo = Request.Params[\redirectTo\""];\nif(!string.IsNullOrEmpty(redirectTo) && redirectTo.StartsWith(\""/\"")) { Response.Redirect(redirectTo); } else { Response.Redirect(\""/login\""); }"""
C#,Unvalidated Redirects,"string urlParam = Request.QueryString[\target\""];\nResponse.Redirect(urlParam);""","string urlParam = Request.QueryString[\target\""];\nif(!string.IsNullOrEmpty(urlParam) && urlParam.StartsWith(\""/\"")) { Response.Redirect(urlParam); } else { Response.Redirect(\""/error\""); }"""
C#,Unvalidated Redirects,"string dest = Request.Form[\dest\""];\nResponse.Redirect(dest);""","string dest = Request.Form[\dest\""];\nif(!string.IsNullOrEmpty(dest) && dest.StartsWith(\""/\"")) { Response.Redirect(dest); } else { Response.Redirect(\""/home\""); }"""
C#,Unvalidated Redirects,"string next = Request.Params[\next\""];\nResponse.Redirect(next);""","string next = Request.Params[\next\""];\nif(!string.IsNullOrEmpty(next) && next.StartsWith(\""/\"")) { Response.Redirect(next); } else { Response.Redirect(\""/default\""); }"""
C#,Unvalidated Redirects,"string gotoUrl = Request.QueryString[\goto\""];\nResponse.Redirect(gotoUrl);""","string gotoUrl = Request.QueryString[\goto\""];\nif(!string.IsNullOrEmpty(gotoUrl) && gotoUrl.StartsWith(\""/\"")) { Response.Redirect(gotoUrl); } else { Response.Redirect(\""/index\""); }"""
C#,Unvalidated Redirects,"string finalUrl = Request.QueryString[\finalUrl\""];\nResponse.Redirect(finalUrl);""","string finalUrl = Request.QueryString[\finalUrl\""];\nif(!string.IsNullOrEmpty(finalUrl) && finalUrl.StartsWith(\""/\"")) { Response.Redirect(finalUrl); } else { Response.Redirect(\""/notAuthorized\""); }"""
C#,Unvalidated Redirects,"string callback = Request.QueryString[\callback\""];\nResponse.Redirect(callback);""","string callback = Request.QueryString[\callback\""];\nif(!string.IsNullOrEmpty(callback) && callback.StartsWith(\""/\"")) { Response.Redirect(callback); } else { Response.Redirect(\""/home\""); }"""
C#,Unvalidated Redirects,"string redir = Request.QueryString[\redir\""];\nResponse.Redirect(redir);""","string redir = Request.QueryString[\redir\""];\nif(!string.IsNullOrEmpty(redir) && redir.StartsWith(\""/\"")) { Response.Redirect(redir); } else { Response.Redirect(\""/error\""); }"""
C#,Unvalidated Redirects,"string urlInput = Request.Params[\urlInput\""];\nResponse.Redirect(urlInput);""","string urlInput = Request.Params[\urlInput\""];\nif(!string.IsNullOrEmpty(urlInput) && urlInput.StartsWith(\""/\"")) { Response.Redirect(urlInput); } else { Response.Redirect(\""/fallback\""); }"""
C#,Unvalidated Redirects,"string refUrl = Request.QueryString[\refUrl\""];\nResponse.Redirect(refUrl);""","string refUrl = Request.QueryString[\refUrl\""];\nif(!string.IsNullOrEmpty(refUrl) && refUrl.StartsWith(\""/\"")) { Response.Redirect(refUrl); } else { Response.Redirect(\""/login\""); }"""
C#,Unvalidated Redirects,"string destination = Request.QueryString[\destination\""];\nResponse.Redirect(destination);""","string destination = Request.QueryString[\destination\""];\nif(!string.IsNullOrEmpty(destination) && destination.StartsWith(\""/\"")) { Response.Redirect(destination); } else { Response.Redirect(\""/defaultPage\""); }"""
C#,Unvalidated Redirects,"string gotoPage = Request.QueryString[\gotoPage\""];\nResponse.Redirect(gotoPage);""","string gotoPage = Request.QueryString[\gotoPage\""];\nif(!string.IsNullOrEmpty(gotoPage) && gotoPage.StartsWith(\""/\"")) { Response.Redirect(gotoPage); } else { Response.Redirect(\""/errorPage\""); }"""
C#,Unvalidated Redirects,"string returnTo = Request.Form[\returnTo\""];\nResponse.Redirect(returnTo);""","string returnTo = Request.Form[\returnTo\""];\nif(!string.IsNullOrEmpty(returnTo) && returnTo.StartsWith(\""/\"")) { Response.Redirect(returnTo); } else { Response.Redirect(\""/dashboard\""); }"""
C#,Unvalidated Redirects,"string nextUrl = Request.QueryString[\nextUrl\""];\nResponse.Redirect(nextUrl);""","string nextUrl = Request.QueryString[\nextUrl\""];\nif(!string.IsNullOrEmpty(nextUrl) && nextUrl.StartsWith(\""/\"")) { Response.Redirect(nextUrl); } else { Response.Redirect(\""/index\""); }"""
C#,Unvalidated Redirects,"string targetUrl = Request.QueryString[\targetUrl\""];\nResponse.Redirect(targetUrl);""","string targetUrl = Request.QueryString[\targetUrl\""];\nif(!string.IsNullOrEmpty(targetUrl) && targetUrl.StartsWith(\""/\"")) { Response.Redirect(targetUrl); } else { Response.Redirect(\""/home\""); }"""
C#,Unvalidated Redirects,"string exitUrl = Request.Form[\exitUrl\""];\nResponse.Redirect(exitUrl);""","string exitUrl = Request.Form[\exitUrl\""];\nif(!string.IsNullOrEmpty(exitUrl) && exitUrl.StartsWith(\""/\"")) { Response.Redirect(exitUrl); } else { Response.Redirect(\""/logout\""); }"""
C#,Unvalidated Redirects,"return Redirect(Request.QueryString[\nextPage\""]);""","string nextPage = Request.QueryString[\nextPage\""];\nif(!string.IsNullOrEmpty(nextPage) && nextPage.StartsWith(\""/\"")) { return Redirect(nextPage); } else { return Redirect(\""/home\""); }"""
C#,Unvalidated Redirects,"if(Request.Params[\action\""] == \""go\"") { Response.Redirect(Request.Params[\""url\""]); }""","if(Request.Params[\action\""] == \""go\"") {\n    string url = Request.Params[\""url\""];\n    if(!string.IsNullOrEmpty(url) && url.StartsWith(\""/\"")) { Response.Redirect(url); } else { Response.Redirect(\""/default\""); }\n}"""
C#,Unvalidated Redirects,"string finalRedirect = Request.QueryString[\final\""];\nResponse.Redirect(finalRedirect);""","string finalRedirect = Request.QueryString[\final\""];\nif(!string.IsNullOrEmpty(finalRedirect) && finalRedirect.StartsWith(\""/\"")) { Response.Redirect(finalRedirect); } else { Response.Redirect(\""/error\""); }"""
Java,Missing Authentication,"if (userInput.equals(""admin"")) { grantAccess(); }",if (isAuthenticated(user)) { grantAccess(); }
C#,Missing Authentication,"if (username == ""admin"") DoAdminThings();","if (User.IsInRole(""Admin"")) DoAdminThings();"
Java,Missing Authentication,"if (userInput.equals(""admin"")) { grantAccess(); }",if (isAuthenticated(user)) { grantAccess(); }
C#,Missing Authentication,"if (username == ""admin"") DoAdminThings();","if (User.Identity.IsAuthenticated && username == ""admin"") DoAdminThings();"
Java,Null Pointer Dereference,"if (userInput != null && userInput.equals(""admin"")) { access = true; }"," ""if (Objects.equals(userInput, """"admin"""")) { access = true; }"""
C#,Null Pointer Dereference,"if (user != null && user.Equals(""admin"")) { access = true; }"," ""if (String.Equals(user, """"admin"""")) { access = true; }"""
Java,Null Pointer Dereference,"if (userInput != null && userInput.equals(""admin"")) { access = true; }","if (Objects.equals(userInput, ""admin"")) { access = true; }"
C#,Null Pointer Dereference,"if (user != null && user.Equals(""admin"")) { access = true; }","if (String.Equals(user, ""admin"")) { access = true; }"
,,,
,,,
,,,
,,,
Java,Path Traversal,FileInputStream fis = new FileInputStream(userInput);," ""Path path = Paths.get(userInput).normalize(); FileInputStream fis = new FileInputStream(path.toString());"""
C#,Path Traversal,"File.ReadAllText(Request.QueryString[""file""])"," ""var path = Path.GetFullPath(Request.QueryString[""""file""""]); File.ReadAllText(path);"""
Java,Path Traversal,FileInputStream fis = new FileInputStream(userInput);," ""Path path = Paths.get(userInput).normalize(); FileInputStream fis = new FileInputStream(path.toString());"""
C#,Path Traversal,"string path = Request.QueryString[\file\""]; string content = File.ReadAllText(path);"""," ""string path = Path.GetFullPath(Request.QueryString[\""file\""]); if(path.StartsWith(allowedPath)) { string content = File.ReadAllText(path); }"""
Java,Path Traversal,"File file = new File(""/uploads/"" + userInput);","File file = new File(""/uploads/"", new File(userInput).getName());"
C#,Path Traversal,"var filePath = ""C:\\uploads\\ + userInput;""","var filePath = Path.Combine(""C:\\uploads\\"
Java,Path Traversal,"File f = new File(""/home/user/"" + filename);","File f = new File(""/home/user/"", Paths.get(filename).getFileName().toString());"
Java,Path Traversal,"FileReader fr = new FileReader(""/etc/"" + file);","FileReader fr = new FileReader(new File(""/etc"", Paths.get(file).getFileName().toString()));"
Java,Path Traversal,File log = new File(logDir + logName);,"File log = new File(logDir, Paths.get(logName).getFileName().toString());"
Java,Path Traversal,"File file = new File(""uploads/"" + userFile);","File file = new File(""uploads/"", Paths.get(userFile).getFileName().toString());"
Java,Path Traversal,File out = new File(path + input);,"File out = new File(path, Paths.get(input).getFileName().toString());"
Java,Path Traversal,"File f = new File(""/home/user/"" + filename);","File f = new File(""/home/user/"", Paths.get(filename).getFileName().toString());"
Java,Path Traversal,"FileReader fr = new FileReader(""/etc/"" + file);","FileReader fr = new FileReader(new File(""/etc"", Paths.get(file).getFileName().toString()));"
Java,Path Traversal,File log = new File(logDir + logName);,"File log = new File(logDir, Paths.get(logName).getFileName().toString());"
Java,Path Traversal,"File file = new File(""uploads/"" + userFile);","File file = new File(""uploads/"", Paths.get(userFile).getFileName().toString());"
Java,Path Traversal,File out = new File(path + input);,"File out = new File(path, Paths.get(input).getFileName().toString());"
Java,Path Traversal,"File file = new File(""/uploads/"" + fileName);","File file = new File(""/uploads/"", new File(fileName).getName());"
C#,Path Traversal,"string path = ""C:\\upload\\\ + userInput;""","string path = Path.Combine(""C:\\upload\\"
Java,Path Traversal,"Files.readAllBytes(Paths.get(""/etc/"" + fileParam));","Files.readAllBytes(Paths.get(""/etc/"", new File(fileParam).getName()));"
C#,Path Traversal,"FileStream fs = new FileStream(""C:\\secure\\ + fileInput"," FileMode.Open);"""
Java,Path Traversal,"File f = new File(""/home/user/"" + filename);","File f = new File(""/home/user/"", Paths.get(filename).getFileName().toString());"
Java,Path Traversal,"File file = new File(""uploads/"" + userFile);","File file = new File(""uploads/"", Paths.get(userFile).getFileName().toString());"
C#,Path Traversal,"File.ReadAllText(Request.QueryString[""file""]);","var path = Path.GetFullPath(Request.QueryString[\file\""]);\nFile.ReadAllText(path);"""
Java,Path Traversal,"String fileName = request.getParameter(""file"");\nFile file = new File(""/var/www/uploads/"" + fileName);\nreadFile(file);","String fileName = request.getParameter(""file"");\nif(fileName != null && fileName.matches(""^[a-zA-Z0-9_.-]+$"")) {\n    File file = new File(""/var/www/uploads/"" + fileName);\n    readFile(file);\n} else {\n    throw new IllegalArgumentException(""Invalid file name"");\n}"
C#,Path Traversal,"string fileName = Request.QueryString[""file""];\nstring path = ""C:\\\\uploads\\\\"" + fileName;\nReadFile(path);","string fileName = Request.QueryString[""file""];\nif(!string.IsNullOrEmpty(fileName) && Regex.IsMatch(fileName, ""^[a-zA-Z0-9_.-]+$"")) {\n    string path = Path.Combine(""C:\\\\uploads\\\\\"", + ""Path.GetFileName(fileName)"" + "");\n    ReadFile(path);\n} else {\n    throw new ArgumentException(""""Invalid file name"""");\n}"""
C#,Path Traversal,"string filePath = Request.QueryString[""path""];\nstring fullPath = ""D:\\\\files\\\\""+ filePath;\nOpenFile(fullPath);","string filePath = Request.QueryString[""path""];\nstring safeFile = Path.GetFileName(filePath);\nstring fullPath = Path.Combine(""D:\\\\files\\"", safeFile);\nOpenFile(fullPath);"
Java,Path Traversal,"String resource = request.getParameter(\resource\"");\nbyte[] content = Files.readAllBytes(Paths.get(\""/app/resources/\"" + resource));\nresponse.getOutputStream().write(content);""","String resource = request.getParameter(\resource\"");\nif(resource != null && resource.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    Path base = Paths.get(\""/app/resources/\"");\n    Path filePath = base.resolve(resource).normalize();\n    if(filePath.startsWith(base)) {\n         byte[] content = Files.readAllBytes(filePath);\n         response.getOutputStream().write(content);\n    } else {\n         throw new SecurityException(\""Invalid resource path\"");\n    }\n} else {\n    throw new IllegalArgumentException(\""Invalid resource name\"");\n}"""
Java,Missing Authentication,"String action = request.getParameter(\action\"");\nif(action.equals(\""deleteAccount\"")) { deleteAccount(); }""","String action = request.getParameter(\action\"");\nif(session.getAttribute(\""user\"") != null) { deleteAccount(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"@GetMapping(\/profile\"")\npublic String getProfile() {\n    return userService.getProfile();\n}""","@GetMapping(\/profile\"")\npublic String getProfile(HttpSession session) {\n    if(session.getAttribute(\""user\"") == null) { throw new SecurityException(\""User not authenticated\""); }\n    return userService.getProfile();\n}"""
Java,Missing Authentication,"if(request.getMethod().equals(\POST\"")) { updateSettings(request.getParameter(\""settings\"")); }""","if(request.getMethod().equals(\POST\"") && session.getAttribute(\""user\"") != null) { updateSettings(request.getParameter(\""settings\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"String username = request.getParameter(\username\"");\n// No auth check before retrieving user data\nUser user = userService.findByUsername(username);\nout.println(user.getProfile());""","String username = request.getParameter(\username\"");\nif(session.getAttribute(\""user\"") != null) { User user = userService.findByUsername(username);\nout.println(user.getProfile()); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"if(request.getParameter(\token\"") != null) { processRequest(); }""","if(request.getParameter(\token\"") != null && TokenService.validateToken(request.getParameter(\""token\""))) { processRequest(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authentication,"updateProfile(request.getParameter(\profileData\"")); // no user check""","if(session.getAttribute(\user\"") != null) { updateProfile(request.getParameter(\""profileData\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"PrintWriter out = response.getWriter();\nout.println(\Sensitive data: \"" + secretData);""","PrintWriter out = response.getWriter();\nif(session.getAttribute(\user\"") != null) { out.println(\""Sensitive data: \"" + secretData); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,User data = userService.getUserData(); // no auth check\nprocess(data);,"if(session.getAttribute(\user\"") != null) { User data = userService.getUserData(); process(data); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"String command = request.getParameter(\cmd\"");\nexecuteCommand(command);""","if(session.getAttribute(\user\"") != null) { String command = request.getParameter(\""cmd\""); executeCommand(command); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,List<User> users = userService.getAllUsers();\nreturn users;,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { List<User> users = userService.getAllUsers(); return users; } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"String fileContent = FileUtil.readFile(request.getParameter(\fileName\""));\nout.println(fileContent);""","String fileContent = FileUtil.readFile(request.getParameter(\fileName\""));\nif(session.getAttribute(\""user\"") != null) { out.println(fileContent); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,String profile = userService.getProfile();\nout.print(profile);,"if(session.getAttribute(\user\"") != null) { String profile = userService.getProfile(); out.print(profile); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"HttpServletResponse.sendRedirect(\/loginSuccess\""); // no check""","if(session.getAttribute(\user\"") != null) { response.sendRedirect(\""/loginSuccess\""); } else { response.sendRedirect(\""/login\""); }"""
Java,Missing Authentication,"deleteFile(request.getParameter(\fileId\""));""","if(session.getAttribute(\user\"") != null) { deleteFile(request.getParameter(\""fileId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"updateEmail(request.getParameter(\email\""));""","if(session.getAttribute(\user\"") != null) { updateEmail(request.getParameter(\""email\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,String report = reportService.generateReport();\nout.println(report);,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).hasReportAccess()) { String report = reportService.generateReport(); out.println(report); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"processOrder(request.getParameter(\orderId\""));""","if(session.getAttribute(\user\"") != null) { processOrder(request.getParameter(\""orderId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"if(request.getParameter(\download\"") != null) { downloadFile(); }""","if(session.getAttribute(\user\"") != null) { downloadFile(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,accessResource(); // no auth check,"if(session.getAttribute(\user\"") != null) { accessResource(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,// Missing auth check before sensitive operation\nperformSensitiveOperation();,"if(session.getAttribute(\user\"") != null) { performSensitiveOperation(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
C#,Missing Authentication,public ActionResult ViewProfile() {\n    return View(userService.GetProfile());\n},"public ActionResult ViewProfile() {\n    if(Session[\user\""] != null) { return View(userService.GetProfile()); } else { return new HttpStatusCodeResult(401); }\n}"""
C#,Missing Authentication,"[HttpPost]\npublic ActionResult UpdateSettings(string settings) {\n    settingsService.Update(settings);\n    return RedirectToAction(\Index\"");\n}""","[HttpPost]\npublic ActionResult UpdateSettings(string settings) {\n    if(Session[\user\""] != null) { settingsService.Update(settings); return RedirectToAction(\""Index\""); } else { return new HttpStatusCodeResult(401); }\n}"""
C#,Missing Authentication,"public ActionResult ChangePassword(string newPassword) {\n    userService.ChangePassword(newPassword);\n    return RedirectToAction(\Profile\"");\n}""","[HttpPost]\npublic ActionResult ChangePassword(string newPassword) {\n    if(Session[\user\""] == null) { return new HttpStatusCodeResult(401); }\n    userService.ChangePassword(newPassword);\n    return RedirectToAction(\""Profile\"");\n}"""
C#,Missing Authentication,"public ActionResult DeleteUser(int id) {\n    userService.DeleteUser(id);\n    return RedirectToAction(\Users\"");\n}""","[Authorize(Roles = \Admin\"")]\npublic ActionResult DeleteUser(int id) {\n    userService.DeleteUser(id);\n    return RedirectToAction(\""Users\"");\n}"""
C#,Missing Authentication,void ProcessOrder(string orderId) {\n    orderService.ProcessOrder(orderId);\n},"void ProcessOrder(string orderId) {\n    if(Session[\user\""] != null) { orderService.ProcessOrder(orderId); } else { throw new UnauthorizedAccessException(); }\n}"""
C#,Missing Authentication,public ActionResult GetAdminDashboard() {\n    return View(adminService.GetDashboard());\n},"public ActionResult GetAdminDashboard() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { return View(adminService.GetDashboard()); } else { return new HttpStatusCodeResult(401); }\n}"""
C#,Missing Authentication,"string token = Request.QueryString[\token\""];\nif(token == \""valid\"") { GrantAccess(); }""","string token = Request.QueryString[\token\""];\nif(Session[\""user\""] != null && TokenService.Validate(token)) { GrantAccess(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"if(Request.HttpMethod == \POST\"") {\n    UpdateProfile(Request.Form[\""profileData\""]);\n}""","if(Request.HttpMethod == \POST\"" && Session[\""user\""] != null) {\n    UpdateProfile(Request.Form[\""profileData\""]);\n} else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,Response.Write(userService.GetProfile());,"if(Session[\user\""] != null) { Response.Write(userService.GetProfile()); } else { Response.StatusCode = 401; Response.Write(\""Unauthorized\""); }"""
C#,Missing Authentication,public void ExecuteAction(string action) {\n    actionService.Execute(action);\n},"public void ExecuteAction(string action) {\n    if(Session[\user\""] != null) { actionService.Execute(action); } else { throw new UnauthorizedAccessException(); }\n}"""
C#,Missing Authentication,string data = dataService.FetchData();\nreturn Content(data);,"if(Session[\user\""] != null) { string data = dataService.FetchData(); return Content(data); } else { return new HttpStatusCodeResult(401); }"""
C#,Missing Authentication,"public ActionResult Logout() {\n    Session.Abandon();\n    return RedirectToAction(\Login\"");\n}""","public ActionResult Logout() {\n    if(Session[\user\""] != null) { Session.Abandon(); return RedirectToAction(\""Login\""); } else { return RedirectToAction(\""Login\""); }\n}"""
C#,Missing Authentication,"deleteFile(Request.QueryString[\fileId\""]);""","if(Session[\user\""] != null) { deleteFile(Request.QueryString[\""fileId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"updateEmail(Request.Form[\email\""]);""","if(Session[\user\""] != null) { updateEmail(Request.Form[\""email\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,var orders = orderService.GetOrders();\nreturn View(orders);,"if(Session[\user\""] != null) { var orders = orderService.GetOrders(); return View(orders); } else { return new HttpStatusCodeResult(401); }"""
C#,Missing Authentication,public void AuthenticateRequest() {\n    // No authentication check\n    ProcessRequest();\n},"public void AuthenticateRequest() {\n    if(Session[\user\""] == null) { throw new UnauthorizedAccessException(); } else { ProcessRequest(); }\n}"""
C#,Missing Authentication,"string action = Request.Params[\action\""];\nactionService.Process(action);""","string action = Request.Params[\action\""];\nif(Session[\""user\""] != null) { actionService.Process(action); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,public ActionResult SecureData() {\n    return View(dataService.GetSecureData());\n},"public ActionResult SecureData() {\n    if(Session[\user\""] != null) { return View(dataService.GetSecureData()); } else { return new HttpStatusCodeResult(401); }\n}"""
Java,Null Pointer Dereference,"if(obj.equals(\test\"")) { doSomething(); }""","if(obj != null && obj.equals(\test\"")) { doSomething(); }"""
Java,Null Pointer Dereference,String s = user.getName();,"if(user != null) { String s = user.getName(); } else { s = \\""; }"""
Java,Null Pointer Dereference,int len = str.length();,int len = (str != null) ? str.length() : 0;
Java,Null Pointer Dereference,System.out.println(data.toString());,if(data != null) { System.out.println(data.toString()); }
Java,Null Pointer Dereference,String upper = input.toUpperCase();,String upper = (input != null) ? input.toUpperCase() : null;
Java,Null Pointer Dereference,if(list.size() > 0) { process(list.get(0)); },if(list != null && !list.isEmpty()) { process(list.get(0)); }
Java,Null Pointer Dereference,"int value = config.getInt(\timeout\"");""","int value = (config != null) ? config.getInt(\timeout\"") : defaultTimeout;"""
Java,Null Pointer Dereference,"output.write(buffer, 0, buffer.length);","if(buffer != null) { output.write(buffer, 0, buffer.length); }"
Java,Null Pointer Dereference,Logger.log(info.toString());,"if(info != null) { Logger.log(info.toString()); } else { Logger.log(\No info available\""); }"""
Java,Null Pointer Dereference,"if(user.getPermissions().contains(\admin\"")) { grantAccess(); }""","if(user != null && user.getPermissions() != null && user.getPermissions().contains(\admin\"")) { grantAccess(); }"""
Java,Null Pointer Dereference,"String configValue = properties.getProperty(\config\"");""","String configValue = (properties != null) ? properties.getProperty(\config\"") : \""\"";"""
Java,Null Pointer Dereference,items.add(item.toString());,if(item != null) { items.add(item.toString()); }
Java,Null Pointer Dereference,return data.getValue();,return (data != null) ? data.getValue() : defaultValue;
Java,Null Pointer Dereference,processOrder(order.getId());,if(order != null) { processOrder(order.getId()); }
Java,Null Pointer Dereference,if(list.get(0).isActive()) { startProcess(); },if(list != null && !list.isEmpty() && list.get(0).isActive()) { startProcess(); }
Java,Null Pointer Dereference,for(int i = 0; i < array.length; i++) { sum += array[i]; },if(array != null) { for(int i = 0; i < array.length; i++) { sum += array[i]; } }
Java,Null Pointer Dereference,String trimmed = str.trim();,"String trimmed = (str != null) ? str.trim() : \\"";"""
Java,Null Pointer Dereference,if(cache.get(key).equals(value)) { useCache(); },if(cache.get(key) != null && cache.get(key).equals(value)) { useCache(); }
Java,Null Pointer Dereference,System.out.println(config.toString());,if(config != null) { System.out.println(config.toString()); }
Java,Null Pointer Dereference,obj.method();,if(obj != null) { obj.method(); }
Java,Null Pointer Dereference,User current = getUser(); String role = current.getRole();,"User current = getUser(); String role = (current != null) ? current.getRole() : \guest\"";"""
Java,Null Pointer Dereference,list.get(index).process();,if(list != null && index >= 0 && index < list.size() && list.get(index) != null) { list.get(index).process(); }
Java,Null Pointer Dereference,"map.put(key, value.toString());","if(value != null) { map.put(key, value.toString()); } else { map.put(key, \\""); }"""
C#,Null Pointer Dereference,"if(user.Name.Equals(\admin\"")) { GrantAccess(); }""","if(user != null && user.Name != null && user.Name.Equals(\admin\"")) { GrantAccess(); }"""
C#,Null Pointer Dereference,string upper = input.ToUpper();,"string upper = (input != null) ? input.ToUpper() : \\"";"""
C#,Null Pointer Dereference,Console.WriteLine(data.ToString());,if(data != null) { Console.WriteLine(data.ToString()); }
C#,Null Pointer Dereference,int len = str.Length;,int len = (str != null) ? str.Length : 0;
C#,Null Pointer Dereference,if(list.Count > 0) { Process(list[0]); },if(list != null && list.Count > 0) { Process(list[0]); }
C#,Null Pointer Dereference,"string s = config.GetValue(\key\"");""","string s = config != null ? config.GetValue(\key\"") : \""\"";"""
C#,Null Pointer Dereference,userService.Update(user.Email.ToLower());,if(user != null && user.Email != null) { userService.Update(user.Email.ToLower()); }
C#,Null Pointer Dereference,Console.WriteLine(session.ID);,if(session != null) { Console.WriteLine(session.ID); }
C#,Null Pointer Dereference,int value = array[0];,int value = (array != null && array.Length > 0) ? array[0] : 0;
C#,Null Pointer Dereference,result = obj.Method();,if(obj != null) { result = obj.Method(); }
C#,Null Pointer Dereference,user.Process();,if(user != null) { user.Process(); }
C#,Null Pointer Dereference,string trimmed = input.Trim();,"string trimmed = input != null ? input.Trim() : \\"";"""
C#,Null Pointer Dereference,orderService.ProcessOrder(order.Id);,if(order != null) { orderService.ProcessOrder(order.Id); }
C#,Null Pointer Dereference,"if(cache[\key\""].Equals(value)) { UseCache(); }""","if(cache[\key\""] != null && cache[\""key\""].Equals(value)) { UseCache(); }"""
C#,Null Pointer Dereference,Console.WriteLine(config.ToString());,if(config != null) { Console.WriteLine(config.ToString()); }
C#,Null Pointer Dereference,user = GetUser(); string role = user.Role;,"user = GetUser(); string role = user != null ? user.Role : \guest\"";"""
C#,Null Pointer Dereference,data.Add(item.ToString());,if(item != null) { data.Add(item.ToString()); }
C#,Null Pointer Dereference,list[0].Process();,if(list != null && list.Count > 0 && list[0] != null) { list[0].Process(); }
C#,Null Pointer Dereference,object value = dict[key];,object value = (dict != null && dict.ContainsKey(key)) ? dict[key] : null;
C#,Null Pointer Dereference,string name = employee.Name;,"string name = employee != null ? employee.Name : \\"";"""
C#,Null Pointer Dereference,var last = arr[arr.Length - 1];,var last = (arr != null && arr.Length > 0) ? arr[arr.Length - 1] : null;
C#,Null Pointer Dereference,string lower = text.ToLower();,"string lower = text != null ? text.ToLower() : \\"";"""
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file1"");","Part filePart = request.getPart(""file1"");"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",String fileName = filePart.getSubmittedFileName();
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file2"");","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    filePart.write(""/uploads/"" + fileName);"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file3"");",} else {
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    throw new IllegalArgumentException(""Invalid file type"");"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file4"");",}
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","Part filePart = request.getPart(""file2"");"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file5"");",String fileName = filePart.getSubmittedFileName();
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file6"");","    filePart.write(""/uploads/"" + fileName);"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",} else {
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file7"");","    throw new IllegalArgumentException(""Invalid file type"");"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",}
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file8"");","Part filePart = request.getPart(""file3"");"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",String fileName = filePart.getSubmittedFileName();
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file9"");","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    filePart.write(""/uploads/"" + fileName);"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file10"");",} else {
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    throw new IllegalArgumentException(""Invalid file type"");"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file11"");",}
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","Part filePart = request.getPart(""file4"");"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file12"");",String fileName = filePart.getSubmittedFileName();
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file13"");","    filePart.write(""/uploads/"" + fileName);"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",} else {
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file14"");","    throw new IllegalArgumentException(""Invalid file type"");"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",}
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file15"");","Part filePart = request.getPart(""file5"");"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",String fileName = filePart.getSubmittedFileName();
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file16"");","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    filePart.write(""/uploads/"" + fileName);"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file17"");",} else {
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    throw new IllegalArgumentException(""Invalid file type"");"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file18"");",}
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","Part filePart = request.getPart(""file6"");"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file19"");",String fileName = filePart.getSubmittedFileName();
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Unrestricted File Upload,"Part filePart = request.getPart(""file20"");","    filePart.write(""/uploads/"" + fileName);"
Java,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",} else {
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file21"");","    throw new IllegalArgumentException(""Invalid file type"");"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",}
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file22"");","Part filePart = request.getPart(""file7"");"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",String fileName = filePart.getSubmittedFileName();
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file23"");","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    filePart.write(""/uploads/"" + fileName);"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file24"");",} else {
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    throw new IllegalArgumentException(""Invalid file type"");"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file25"");",}
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","Part filePart = request.getPart(""file8"");"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file26"");",String fileName = filePart.getSubmittedFileName();
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file27"");","    filePart.write(""/uploads/"" + fileName);"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",} else {
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file28"");","    throw new IllegalArgumentException(""Invalid file type"");"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",}
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file29"");","Part filePart = request.getPart(""file9"");"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",String fileName = filePart.getSubmittedFileName();
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file30"");","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    filePart.write(""/uploads/"" + fileName);"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file31"");",} else {
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    throw new IllegalArgumentException(""Invalid file type"");"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file32"");",}
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","Part filePart = request.getPart(""file10"");"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file33"");",String fileName = filePart.getSubmittedFileName();
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file34"");","    filePart.write(""/uploads/"" + fileName);"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",} else {
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file35"");","    throw new IllegalArgumentException(""Invalid file type"");"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",}
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file36"");","Part filePart = request.getPart(""file11"");"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());",String fileName = filePart.getSubmittedFileName();
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file37"");","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    filePart.write(""/uploads/"" + fileName);"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file38"");",} else {
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","    throw new IllegalArgumentException(""Invalid file type"");"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file39"");",}
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","Part filePart = request.getPart(""file12"");"
C#,Unrestricted File Upload,"Part filePart = request.getPart(""file40"");",String fileName = filePart.getSubmittedFileName();
C#,Unrestricted File Upload,"filePart.write(""/uploads/"" + filePart.getSubmittedFileName());","if(fileName != null && fileName.matches(""^[a-zA-Z0-9._-]+$"") && fileName.endsWith("".jpg"")) {"
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // no signature verification,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build(); DecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // no expiration check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).acceptExpiresAt(0).build(); DecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // issuer not validated,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).withIssuer(\""trustedIssuer\"").build(); DecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // audience not validated,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).withAudience(\""trustedAudience\"").build(); DecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // missing signature verification,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build(); DecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,Object tokenObj = JWT.decode(token); // token decoded without verification,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build(); Object tokenObj = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);\nString subject = jwt.getSubject();,"try {\n    JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\n    DecodedJWT jwt = verifier.verify(token);\n    String subject = jwt.getSubject();\n} catch(Exception e) {\n    throw new SecurityException(\""Invalid token\"", e);\n}"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // no 'not before' check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build(); DecodedJWT jwt = verifier.verify(token);\nif(jwt.getNotBefore() != null && jwt.getNotBefore().after(new Date())) { throw new SecurityException(\""Token not yet valid\""); }"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token); // custom claim 'role' not verified\nString role = jwt.getClaim(\role\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""role\"", \""user\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // no expiration check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // missing issuer enforcement,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // missing audience validation,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withAudience(\""trustedAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // no signature check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // no 'issued at' claim check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getIssuedAt() == null) { throw new SecurityException(\""Missing issued at claim\""); }"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // token decoded without revocation check,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenBlacklist.isRevoked(token)) { throw new SecurityException(\""Token revoked\""); }"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token);\nString custom = jwt.getClaim(\custom\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""custom\"", \""expectedValue\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // not validating token type,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(!\""JWT\"".equals(jwt.getHeaderClaim(\""typ\"").asString())) { throw new SecurityException(\""Invalid token type\""); }"""
Java,Insecure JWT Validation,try { DecodedJWT jwt = JWT.decode(token); } catch(Exception e) { },"try {\n    JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\n    DecodedJWT jwt = verifier.verify(token);\n} catch(Exception e) {\n    throw new SecurityException(\""Invalid token\"", e);\n}"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token); // not validating 'issued at' claim\nString subject = jwt.getSubject();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withSubject(\""expectedSubject\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"try {\n    JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\n    DecodedJWT jwt = verifier.verify(token);\n} catch(Exception e) { throw new SecurityException(\""Token verification failed\"", e); }"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getNotBefore() != null && jwt.getNotBefore().after(new Date())) { throw new SecurityException(\""Token not valid yet\""); }"""
Java,Insecure JWT Validation,MyToken tokenObj = CustomJWTParser.parse(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nMyToken tokenObj = CustomJWTParser.secureParse(token, verifier);"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token);\nString csrf = jwt.getClaim(\csrf\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nString csrf = jwt.getClaim(\""csrf\"").asString();\nif(!csrf.equals(expectedCsrf)) { throw new SecurityException(\""Invalid CSRF token\""); }"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\n// Additional integrity checks can be added here"""
Java,Insecure JWT Validation,"DecodedJWT jwt = JWT.decode(token);\nString userType = jwt.getClaim(\userType\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""userType\"", \""standard\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenRevocationService.isRevoked(token)) { throw new SecurityException(\""Token revoked\""); }"""
Java,Insecure JWT Validation,DecodedJWT jwt = LegacyJWTParser.parse(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = LegacyJWTParser.secureParse(token, verifier);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Validation,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .withAudience(\""trustedAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
C#,Insecure JWT Validation,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring uid = jwtToken.Claims.First(c => c.Type == \uid\"").Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])),\n    ValidateLifetime = true,\n    ValidateIssuer = true,\n    ValidIssuer = \""trustedIssuer\"",\n    ValidateAudience = true,\n    ValidAudience = \""trustedAudience\"",\n    ClockSkew = TimeSpan.Zero\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring uid = principal.FindFirst(\""uid\"")?.Value;"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);\nDateTime exp = jwtToken.ValidTo;,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nDateTime exp = ((JwtSecurityToken)validatedToken).ValidTo;"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);\nstring issuer = jwtToken.Issuer;,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuer = true,\n    ValidIssuer = \trustedIssuer\"",\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring issuer = ((JwtSecurityToken)validatedToken).Issuer;"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);\nIEnumerable<Claim> claims = jwtToken.Claims;,"var validationParameters = new TokenValidationParameters {\n    ValidateAudience = true,\n    ValidAudience = \trustedAudience\"",\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nIEnumerable<Claim> claims = principal.Claims;"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Invalid token\"", ex); }"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nif(((JwtSecurityToken)validatedToken).ValidFrom > DateTime.UtcNow) { throw new SecurityTokenException(\""Token not yet valid\""); }"""
C#,Insecure JWT Validation,var claim = tokenHandler.ReadJwtToken(token).Claims.First().Value;,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nvar claim = principal.Claims.FirstOrDefault()?.Value;"""
C#,Insecure JWT Validation,"var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure JWT Validation,"var principal = tokenHandler.ValidateToken(token, parameters, out var st);","try {\n    var principal = tokenHandler.ValidateToken(token, parameters, out var st);\n} catch(Exception ex) { throw new SecurityTokenException(\Token is invalid\"", ex); }"""
C#,Insecure JWT Validation,var decodedToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Validation,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring userType = jwtToken.Claims.First(c => c.Type == \userType\"").Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring userType = principal.FindFirst(\""userType\"")?.Value;\nif(userType != \""expectedType\"") { throw new SecurityTokenException(\""Invalid user type\""); }"""
C#,Insecure JWT Validation,var decoded = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Validation,var jwt = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Token invalid\"", ex); }"""
C#,Insecure JWT Validation,"var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);\nDateTime exp = jwtToken.ValidTo;,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nDateTime exp = ((JwtSecurityToken)validatedToken).ValidTo;"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateAudience = true,\n    ValidAudience = \trustedAudience\"",\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Validation,var jwtToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Malformed token\"", ex); }"""
C#,Insecure JWT Validation,var jwt = tokenHandler.ReadJwtToken(token);,var validationParameters = new TokenValidationParameters {\n    RequireSignedTokens = true
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data1.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data1.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data2.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data2.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data3.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data3.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data4.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data4.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data5.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data5.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data6.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data6.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data7.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data7.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data8.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data8.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data9.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data9.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data10.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data10.xml\""));"""
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\data11.xml\""));""","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\ndbf.setFeature(\http://apache.org/xml/features/disallow-doctype-decl\"", true);\ndbf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);\ndbf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);\ndbf.setXIncludeAware(false);\ndbf.setExpandEntityReferences(false);\nDocumentBuilder db = dbf.newDocumentBuilder();\nDocument doc = db.parse(new File(\""data11.xml\""));"""
C#,XML External Entity (XXE),"XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.Load(Server.MapPath(\data50.xml\""));""","XmlReaderSettings settings = new XmlReaderSettings();\nsettings.DtdProcessing = DtdProcessing.Prohibit;\nsettings.XmlResolver = null;\nusing(XmlReader reader = XmlReader.Create(Server.MapPath(\data50.xml\""), settings)) {\n    XmlDocument xmlDoc = new XmlDocument();\n    xmlDoc.Load(reader);\n}"""
Java,Hardcoded Secrets,"String apiKey = \abc123\"";""","String apiKey = System.getenv(\API_KEY\"");"""
Java,Hardcoded Secrets,"final String secret = \mySecretPassword\"";""","final String secret = Config.getSecret(\mySecretPassword\"");"""
Java,Hardcoded Secrets,"String dbPassword = \passw0rd\"";""","String dbPassword = System.getProperty(\DB_PASSWORD\"");"""
Java,Hardcoded Secrets,"private static final String TOKEN = \staticTokenValue\"";""","private static final String TOKEN = Config.get(\TOKEN\"");"""
Java,Hardcoded Secrets,"String key = \superSecretKey\"";""","String key = Environment.get(\SUPER_SECRET_KEY\"");"""
Java,Hardcoded Secrets,"if(password.equals(\admin123\"")) { grantAccess(); }""",if(UserService.authenticate(password)) { grantAccess(); }
Java,Hardcoded Secrets,"String s = \secret\"";""","String s = SecureVault.getSecret(\s\"");"""
Java,Hardcoded Secrets,"String secretKey = \defaultKey\"";""","String secretKey = PropertiesLoader.getProperty(\secretKey\"");"""
Java,Hardcoded Secrets,"final String PASS = \1234\"";""","final String PASS = Config.get(\DB_PASS\"");"""
Java,Hardcoded Secrets,"String encryptionKey = \key123\"";""","String encryptionKey = System.getenv(\ENCRYPTION_KEY\"");"""
Java,Hardcoded Secrets,"String connectionPassword = \connPass\"";""","String connectionPassword = SecureConfig.get(\CONN_PASS\"");"""
Java,Hardcoded Secrets,"String jwtSecret = \jwtSecretValue\"";""","String jwtSecret = System.getenv(\JWT_SECRET\"");"""
Java,Hardcoded Secrets,"private static final String API_SECRET = \secretAPI\"";""","private static final String API_SECRET = Config.get(\API_SECRET\"");"""
Java,Hardcoded Secrets,"String token = \hardCodedToken\"";""","String token = Environment.get(\TOKEN\"");"""
Java,Hardcoded Secrets,"String privateKey = \-----BEGIN PRIVATE KEY----- ...\"";""","String privateKey = KeyManager.getPrivateKey(\myKey\"");"""
Java,Hardcoded Secrets,"String userPass = \password123\"";""","String userPass = SecureStore.getDecryptedKey(\USER_PASS\"");"""
Java,Hardcoded Secrets,"final String SSH_KEY = \ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC...\"";""","final String SSH_KEY = SecretsManager.getSSHKey(\MY_SSH_KEY\"");"""
Java,Hardcoded Secrets,"String appSecret = \appSecret!\"";""","String appSecret = Config.get(\APP_SECRET\"");"""
Java,Hardcoded Secrets,"String apiPassword = \pass@123\"";""","String apiPassword = Environment.get(\API_PASSWORD\"");"""
Java,Hardcoded Secrets,"String oauthSecret = \oauthSecretValue\"";""","String oauthSecret = Config.get(\OAUTH_SECRET\"");"""
Java,Hardcoded Secrets,"private String key = \default\"";""","private String key = SecureStore.get(\KEY\"");"""
Java,Hardcoded Secrets,"String servicePassword = \servicePass\"";""","String servicePassword = Config.get(\SERVICE_PASS\"");"""
Java,Hardcoded Secrets,"String dbUser = \admin\""; String dbPass = \""admin123\"";""","String dbUser = Config.get(\DB_USER\""); String dbPass = Config.get(\""DB_PASS\"");"""
Java,Hardcoded Secrets,"String encryptionPass = \pass1234\"";""","String encryptionPass = SecureVault.getSecret(\ENCRYPTION_PASS\"");"""
Java,Hardcoded Secrets,"final String STATIC_KEY = \keyStatic\"";""","final String STATIC_KEY = System.getenv(\STATIC_KEY\"");"""
Java,Hardcoded Secrets,"String authToken = \token123\"";""","String authToken = Config.get(\AUTH_TOKEN\"");"""
Java,Hardcoded Secrets,"String licenseKey = \LICENSE-ABC-123\"";""",String licenseKey = LicenseManager.getLicenseKey();
Java,Hardcoded Secrets,"String smtpPassword = \smtppass\"";""","String smtpPassword = Environment.get(\SMTP_PASSWORD\"");"""
Java,Hardcoded Secrets,"String ftpPassword = \ftp1234\"";""","String ftpPassword = SecureConfig.get(\FTP_PASSWORD\"");"""
Java,Hardcoded Secrets,"final String JWT_KEY = \jwtKey123\"";""","final String JWT_KEY = Config.get(\JWT_KEY\"");"""
Java,Hardcoded Secrets,"String privateInfo = \secretInfo\"";""","String privateInfo = SecureData.get(\privateInfo\"");"""
Java,Hardcoded Secrets,"String connectionString = \jdbc:mysql://localhost:3306/db?user=root&password=pass\"";""",String connectionString = DBConfig.getConnectionString();
Java,Hardcoded Secrets,"// Hardcoded key in code\nString key = \hardcodedKey\"";""","// Retrieve key from secure config\nString key = Environment.get(\SECURE_KEY\"");"""
Java,Hardcoded Secrets,"String legacySecret = \legacySecret123\"";""","String legacySecret = LegacyConfig.getSecret(\legacySecret\"");"""
Java,Hardcoded Secrets,"private static final String ENCRYPTION_KEY = \encKey!\"";""","private static final String ENCRYPTION_KEY = SecureVault.get(\ENCRYPTION_KEY\"");"""
C#,Hardcoded Secrets,"string apiKey = \abc123\"";""","string apiKey = Environment.GetEnvironmentVariable(\API_KEY\"");"""
C#,Hardcoded Secrets,"const string secret = \mySecretPassword\"";""","const string secret = ConfigManager.GetSecret(\mySecretPassword\"");"""
C#,Hardcoded Secrets,"string dbPassword = \passw0rd\"";""","string dbPassword = ConfigurationManager.AppSettings[\DB_PASSWORD\""];"""
C#,Hardcoded Secrets,"private static readonly string TOKEN = \staticTokenValue\"";""","private static readonly string TOKEN = ConfigurationManager.AppSettings[\TOKEN\""];"""
C#,Hardcoded Secrets,"string key = \superSecretKey\"";""","string key = Environment.GetEnvironmentVariable(\SUPER_SECRET_KEY\"");"""
C#,Hardcoded Secrets,"if(password == \admin123\"") { GrantAccess(); }""","if(AuthService.ValidateCredentials(password)) { GrantAccess(); } else { throw new SecurityException(\Invalid credentials\""); }"""
C#,Hardcoded Secrets,"string s = \secret\"";""","string s = SecureManager.GetSecret(\s\"");"""
C#,Hardcoded Secrets,"string secretKey = \defaultKey\"";""","string secretKey = ConfigurationManager.AppSettings[\secretKey\""];"""
C#,Hardcoded Secrets,"const string PASS = \1234\"";""","const string PASS = ConfigManager.GetSecret(\PASS\"");"""
C#,Hardcoded Secrets,"string encryptionKey = \key123\"";""","string encryptionKey = Environment.GetEnvironmentVariable(\ENCRYPTION_KEY\"");"""
C#,Hardcoded Secrets,"string connectionPassword = \connPass\"";""","string connectionPassword = SecureConfig.Get(\CONN_PASS\"");"""
C#,Hardcoded Secrets,"string jwtSecret = \jwtSecretValue\"";""","string jwtSecret = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Hardcoded Secrets,"private static readonly string API_SECRET = \secretAPI\"";""","private static readonly string API_SECRET = ConfigurationManager.AppSettings[\API_SECRET\""];"""
C#,Hardcoded Secrets,"string token = \hardCodedToken\"";""","string token = ConfigManager.GetValue(\TOKEN\"");"""
C#,Hardcoded Secrets,"string privateKey = \-----BEGIN PRIVATE KEY----- ...\"";""","string privateKey = KeyStore.GetPrivateKey(\myKey\"");"""
C#,Hardcoded Secrets,"string userPass = \password123\"";""","string userPass = SecureStore.GetDecrypted(\USER_PASS\"");"""
C#,Hardcoded Secrets,"const string SSH_KEY = \ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC...\"";""",const string SSH_KEY = SecureKeyGenerator.GenerateSSHKey();
C#,Hardcoded Secrets,"string appSecret = \appSecret!\"";""","string appSecret = ConfigurationManager.AppSettings[\APP_SECRET\""];"""
C#,Hardcoded Secrets,"string apiPassword = \pass@123\"";""","string apiPassword = Environment.GetEnvironmentVariable(\API_PASSWORD\"");"""
C#,Hardcoded Secrets,"string oauthSecret = \oauthSecretValue\"";""","string oauthSecret = ConfigManager.GetSecret(\OAUTH_SECRET\"");"""
C#,Hardcoded Secrets,"private string key = \default\"";""","private string key = SecureStore.GetValue(\KEY\"");"""
C#,Hardcoded Secrets,"string servicePassword = \servicePass\"";""","string servicePassword = ConfigurationManager.AppSettings[\SERVICE_PASS\""];"""
C#,Hardcoded Secrets,"string dbUser = \admin\""; string dbPass = \""admin123\"";""","string dbUser = ConfigurationManager.AppSettings[\DB_USER\""]; string dbPass = ConfigurationManager.AppSettings[\""DB_PASS\""];"""
C#,Hardcoded Secrets,"string encryptionPass = \pass1234\"";""","string encryptionPass = SecureVault.GetSecret(\ENCRYPTION_PASS\"");"""
C#,Hardcoded Secrets,"const string STATIC_KEY = \keyStatic\"";""","const string STATIC_KEY = Environment.GetEnvironmentVariable(\STATIC_KEY\"");"""
C#,Hardcoded Secrets,"string authToken = \token123\"";""","string authToken = ConfigurationManager.AppSettings[\AUTH_TOKEN\""];"""
C#,Hardcoded Secrets,"string licenseKey = \LICENSE-ABC-123\"";""",string licenseKey = LicenseManager.GetLicenseKey();
C#,Hardcoded Secrets,"string smtpPassword = \smtppass\"";""","string smtpPassword = Environment.GetEnvironmentVariable(\SMTP_PASSWORD\"");"""
C#,Hardcoded Secrets,"string ftpPassword = \ftp1234\"";""","string ftpPassword = SecureConfig.Get(\FTP_PASSWORD\"");"""
C#,Hardcoded Secrets,"const string JWT_KEY = \jwtKey123\"";""","const string JWT_KEY = ConfigurationManager.AppSettings[\JWT_KEY\""];"""
C#,Hardcoded Secrets,"string privateInfo = \secretInfo\"";""","string privateInfo = SecureData.GetValue(\privateInfo\"");"""
C#,Hardcoded Secrets,"string connectionString = \jdbc:mysql://localhost:3306/db?user=root&password=pass\"";""",string connectionString = DBConfig.GetConnectionString();
C#,Hardcoded Secrets,"// Hardcoded key in code\nstring key = \hardcodedKey\"";""","// Retrieve key from secure config\nstring key = Environment.GetEnvironmentVariable(\SECURE_KEY\"");"""
C#,Hardcoded Secrets,"string legacySecret = \legacySecret123\"";""","string legacySecret = LegacyConfig.GetSecret(\legacySecret\"");"""
C#,Hardcoded Secrets,"private static readonly string ENCRYPTION_KEY = \encKey!\"";""","private static readonly string ENCRYPTION_KEY = SecureVault.Get(\ENCRYPTION_KEY\"");"""
Java,Path Traversal,"String filename = request.getParameter(\filename\"");\nFile file = new File(\""/var/data/\"" + filename);""","String filename = request.getParameter(\filename\"");\nif(filename != null && filename.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File file = new File(\""/var/data/\"", filename);\n} else {\n    throw new IllegalArgumentException(\""Invalid filename\"");\n}"""
Java,Path Traversal,"String path = request.getParameter(\path\"");\nbyte[] content = Files.readAllBytes(Paths.get(path));""","String path = request.getParameter(\path\"");\nPath base = Paths.get(\""/var/data/\"").toAbsolutePath();\nPath filePath = base.resolve(path).normalize();\nif(filePath.startsWith(base)) {\n    byte[] content = Files.readAllBytes(filePath);\n} else {\n    throw new SecurityException(\""Access denied\"");\n}"""
Java,Path Traversal,"String fileName = request.getParameter(\fileName\"");\nFile upload = new File(\""/uploads/\"" + fileName);\nupload.createNewFile();""","String fileName = request.getParameter(\fileName\"");\nif(fileName != null && fileName.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File upload = new File(\""/uploads/\"", fileName);\n    upload.createNewFile();\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Path Traversal,"String file = request.getParameter(\file\"");\nFile f = new File(\""/downloads/\"" + file);\nFileInputStream fis = new FileInputStream(f);""","String file = request.getParameter(\file\"");\nif(file != null && file.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File f = new File(\""/downloads/\"", file);\n    FileInputStream fis = new FileInputStream(f);\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Path Traversal,"String dir = request.getParameter(\dir\"");\nFile file = new File(\""/data/\"" + dir + \""/config.xml\"");""","String dir = request.getParameter(\dir\"");\nif(dir != null && dir.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File file = new File(\""/data/\"", dir + \""/config.xml\"");\n} else {\n    throw new IllegalArgumentException(\""Invalid directory\"");\n}"""
Java,Path Traversal,"String filename = request.getParameter(\filename\"");\nFile file = new File(\""C:\\\\files\\\\"" + filename);""","String filename = request.getParameter(\filename\"");\nif(filename != null && filename.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File file = new File(Path.Combine(\""C:\\\\files\"", filename));\n} else {\n    throw new IllegalArgumentException(\""Invalid filename\"");\n}"""
Java,Path Traversal,"String folder = request.getParameter(\folder\"");\nFile file = new File(\""/var/\"" + folder + \""/report.pdf\"");""","String folder = request.getParameter(\folder\"");\nif(folder != null && folder.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File file = new File(\""/var/\"", folder + \""/report.pdf\"");\n} else {\n    throw new IllegalArgumentException(\""Invalid folder name\"");\n}"""
Java,Path Traversal,"String filePath = request.getParameter(\filePath\"");\nnew File(filePath).delete();""","String filePath = request.getParameter(\filePath\"");\nFile f = new File(filePath);\nFile baseDir = new File(\""/safe/uploads/\"");\nif(f.getCanonicalPath().startsWith(baseDir.getCanonicalPath())) {\n    f.delete();\n} else {\n    throw new SecurityException(\""Invalid file path\"");\n}"""
Java,Path Traversal,"String path = \/data/\"" + request.getParameter(\""path\"");\nBufferedReader br = new BufferedReader(new FileReader(path));""","String path = request.getParameter(\path\"");\nPath base = Paths.get(\""/data/\"").toAbsolutePath();\nPath resolvedPath = base.resolve(path).normalize();\nif(resolvedPath.startsWith(base)) {\n    BufferedReader br = Files.newBufferedReader(resolvedPath);\n} else {\n    throw new SecurityException(\""Invalid path\"");\n}"""
Java,Path Traversal,"String src = request.getParameter(\src\"");\nString dest = request.getParameter(\""dest\"");\nFiles.copy(Paths.get(src), Paths.get(dest));""","String src = request.getParameter(\src\"");\nString dest = request.getParameter(\""dest\"");\nif(src != null && dest != null && src.matches(\""^[a-zA-Z0-9_.-]+$\"") && dest.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    Files.copy(Paths.get(\""/uploads/\"", src), Paths.get(\""/uploads/\"", dest));\n} else {\n    throw new IllegalArgumentException(\""Invalid file names\"");\n}"""
Java,Path Traversal,"Part filePart = request.getPart(\upload\"");\nfilePart.write(\""/var/uploads/\"" + filePart.getSubmittedFileName());""","Part filePart = request.getPart(\upload\"");\nString fileName = filePart.getSubmittedFileName();\nif(fileName != null && fileName.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    filePart.write(\""/var/uploads/\"" + fileName);\n} else {\n    throw new IllegalArgumentException(\""Invalid file name\"");\n}"""
Java,Path Traversal,"String file = \/config/\"" + request.getParameter(\""file\"");\nFiles.readAllBytes(Paths.get(file));""","String fileParam = request.getParameter(\file\"");\nif(fileParam != null && fileParam.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    Files.readAllBytes(Paths.get(\""/config/\"", fileParam));\n} else {\n    throw new IllegalArgumentException(\""Invalid file parameter\"");\n}"""
Java,Path Traversal,"String path = request.getParameter(\path\"");\nFile f = new File(\""/var/data/\"" + path);\nString content = new String(Files.readAllBytes(f.toPath()));""","String path = request.getParameter(\path\"");\nPath base = Paths.get(\""/var/data/\"").toAbsolutePath();\nPath resolved = base.resolve(path).normalize();\nif(resolved.startsWith(base)) {\n    String content = new String(Files.readAllBytes(resolved));\n} else {\n    throw new IllegalArgumentException(\""Invalid file path\"");\n}"""
Java,Path Traversal,"String folder = request.getParameter(\folder\"");\nFile file = new File(\""/downloads/\"" + folder + \""/report.pdf\"");""","String folder = request.getParameter(\folder\"");\nif(folder != null && folder.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File file = new File(\""/downloads/\"", folder + \""/report.pdf\"");\n} else {\n    throw new IllegalArgumentException(\""Invalid folder name\"");\n}"""
Java,Path Traversal,"String fileName = request.getParameter(\file\"");\nnew File(\""/tmp/\"" + fileName).delete();""","String fileName = request.getParameter(\file\"");\nFile baseDir = new File(\""/tmp/\"");\nFile targetFile = new File(baseDir, fileName);\nif(targetFile.getCanonicalPath().startsWith(baseDir.getCanonicalPath()) && fileName.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    targetFile.delete();\n} else {\n    throw new SecurityException(\""Invalid file name\"");\n}"""
Java,Path Traversal,"String logFile = \/logs/\"" + request.getParameter(\""log\"");\nFile f = new File(logFile);""","String logParam = request.getParameter(\log\"");\nif(logParam != null && logParam.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File f = new File(\""/logs/\"", logParam);\n} else {\n    throw new IllegalArgumentException(\""Invalid log file name\"");\n}"""
Java,Path Traversal,"String configPath = request.getParameter(\config\"");\nProperties prop = new Properties();\nprop.load(new FileInputStream(\""/etc/\"" + configPath));""","String configParam = request.getParameter(\config\"");\nFile configDir = new File(\""/etc/config/\"");\nFile configFile = new File(configDir, configParam);\nif(configFile.getCanonicalPath().startsWith(configDir.getCanonicalPath()) && configParam.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    Properties prop = new Properties();\n    prop.load(new FileInputStream(configFile));\n} else {\n    throw new IllegalArgumentException(\""Invalid configuration file\"");\n}"""
Java,Path Traversal,"String path = request.getParameter(\path\"");\nFile file = new File(\""/var/app/\"" + path);""","String path = request.getParameter(\path\"");\nPath base = Paths.get(\""/var/app/\"").toAbsolutePath();\nPath resolved = base.resolve(path).normalize();\nif(resolved.startsWith(base)) {\n    File file = resolved.toFile();\n} else {\n    throw new IllegalArgumentException(\""Invalid path\"");\n}"""
Java,Path Traversal,"String filename = request.getParameter(\filename\"");\nFile newFile = new File(\""/data/files/\"" + filename);\nnewFile.createNewFile();""","String filename = request.getParameter(\filename\"");\nif(filename != null && filename.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File newFile = new File(\""/data/files/\"", filename);\n    newFile.createNewFile();\n} else {\n    throw new IllegalArgumentException(\""Invalid filename\"");\n}"""
Java,Path Traversal,"String folder = request.getParameter(\folder\"");\nString file = request.getParameter(\""file\"");\nFile target = new File(\""/base/\"" + folder + \""/\"" + file);""","String folder = request.getParameter(\folder\"");\nString file = request.getParameter(\""file\"");\nif(folder != null && file != null && folder.matches(\""^[a-zA-Z0-9_-]+$\"") && file.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    Path base = Paths.get(\""/base/\"").toAbsolutePath();\n    Path target = base.resolve(folder).resolve(file).normalize();\n    if(target.startsWith(base)) {\n        // use target.toFile()\n    } else {\n        throw new IllegalArgumentException(\""Invalid file path\"");\n    }\n} else {\n    throw new IllegalArgumentException(\""Invalid folder or file name\"");\n}"""
Java,Path Traversal,"String fileParam = request.getParameter(\filePath\"");\nFile f = new File(fileParam);\nFiles.readAllBytes(f.toPath());""","String fileParam = request.getParameter(\filePath\"");\nPath base = Paths.get(\""/safe/dir\"").toAbsolutePath();\nPath resolved = base.resolve(fileParam).normalize();\nif(resolved.startsWith(base)) {\n    Files.readAllBytes(resolved);\n} else {\n    throw new SecurityException(\""Access denied\"");\n}"""
Java,Path Traversal,"String folder = request.getParameter(\folder\"");\nFile[] files = new File(\""/files/\"" + folder).listFiles();""","String folder = request.getParameter(\folder\"");\nif(folder != null && folder.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File dir = new File(\""/files/\"", folder);\n    File[] files = dir.listFiles();\n} else {\n    throw new IllegalArgumentException(\""Invalid folder\"");\n}"""
Java,Path Traversal,"String tmpFile = request.getParameter(\tmp\"");\nFile file = new File(System.getProperty(\""java.io.tmpdir\"") + tmpFile);""","String tmpFile = request.getParameter(\tmp\"");\nif(tmpFile != null && tmpFile.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File file = new File(System.getProperty(\""java.io.tmpdir\""), tmpFile);\n} else {\n    throw new IllegalArgumentException(\""Invalid temporary file name\"");\n}"""
Java,Path Traversal,"String input = request.getParameter(\path\"");\nFile file = new File(\""/var/app/data/\"" + input);""","String input = request.getParameter(\path\"");\nPath base = Paths.get(\""/var/app/data/\"").toAbsolutePath();\nPath resolved = base.resolve(input).normalize();\nif(resolved.startsWith(base)) {\n    File file = resolved.toFile();\n} else {\n    throw new IllegalArgumentException(\""Invalid path\"");\n}"""
Java,Path Traversal,"String userPath = request.getParameter(\userPath\"");\nFile file = new File(userPath);""","String userPath = request.getParameter(\userPath\"");\nPath base = Paths.get(\""/safe/userfiles/\"").toAbsolutePath();\nPath resolved = base.resolve(userPath).normalize();\nif(resolved.startsWith(base)) {\n    File file = resolved.toFile();\n} else {\n    throw new SecurityException(\""Access denied\"");\n}"""
Java,Path Traversal,"String file = request.getParameter(\file\"");\nFile f = new File(\""/data/\"" + file);""","String fileParam = request.getParameter(\file\"");\nif(fileParam != null && fileParam.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File f = new File(\""/data/\"", fileParam);\n} else {\n    throw new IllegalArgumentException(\""Invalid file parameter\"");\n}"""
Java,Path Traversal,"String logFile = request.getParameter(\logFile\"");\nFile f = new File(\""/logs/\"" + logFile);\nf.createNewFile();""","String logFile = request.getParameter(\logFile\"");\nif(logFile != null && logFile.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File f = new File(\""/logs/\"", logFile);\n    f.createNewFile();\n} else {\n    throw new IllegalArgumentException(\""Invalid log file name\"");\n}"""
Java,Path Traversal,"String img = request.getParameter(\img\"");\nFile file = new File(\""/images/\"" + img);""","String img = request.getParameter(\img\"");\nif(img != null && img.matches(\""^[a-zA-Z0-9_.-]+\\.(jpg|png)$\"")) {\n    File file = new File(\""/images/\"", img);\n} else {\n    throw new IllegalArgumentException(\""Invalid image file\"");\n}"""
Java,Path Traversal,"String backupDir = request.getParameter(\backupDir\"");\nFile dir = new File(\""/backup/\"" + backupDir);""","String backupDir = request.getParameter(\backupDir\"");\nif(backupDir != null && backupDir.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File dir = new File(\""/backup/\"", backupDir);\n} else {\n    throw new IllegalArgumentException(\""Invalid backup directory\"");\n}"""
Java,Path Traversal,"String path = request.getParameter(\path\"");\nFile f = new File(\""/var/\"" + path);""","String path = request.getParameter(\path\"");\nPath base = Paths.get(\""/var/\"").toAbsolutePath();\nPath resolved = base.resolve(path).normalize();\nif(resolved.startsWith(base)) {\n    File f = resolved.toFile();\n} else {\n    throw new SecurityException(\""Invalid path\"");\n}"""
Java,Path Traversal,"String searchFile = request.getParameter(\search\"");\nFile[] files = new File(\""/search/\"").listFiles((dir, name) -> name.contains(searchFile));""","String searchFile = request.getParameter(\search\"");\nif(searchFile != null && searchFile.matches(\""^[a-zA-Z0-9]+$\"")) {\n    File[] files = new File(\""/search/\"").listFiles((dir, name) -> name.contains(searchFile));\n} else {\n    throw new IllegalArgumentException(\""Invalid search parameter\"");\n}"""
Java,Path Traversal,"String uploadDir = request.getParameter(\uploadDir\"");\nPart filePart = request.getPart(\""file\"");\nfilePart.write(uploadDir + filePart.getSubmittedFileName());""","String uploadDir = request.getParameter(\uploadDir\"");\nPart filePart = request.getPart(\""file\"");\nif(uploadDir != null && uploadDir.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    filePart.write(Path.Combine(\""/uploads/\"", filePart.getSubmittedFileName()));\n} else {\n    throw new IllegalArgumentException(\""Invalid upload directory\"");\n}"""
Java,Path Traversal,"String logPath = request.getParameter(\logPath\"");\nFile logFile = new File(\""/logs/\"" + logPath + \"".log\"");""","String logPath = request.getParameter(\logPath\"");\nif(logPath != null && logPath.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File logFile = new File(\""/logs/\"", logPath + \"".log\"");\n} else {\n    throw new IllegalArgumentException(\""Invalid log path\"");\n}"""
Java,Path Traversal,"String dir = request.getParameter(\dir\"");\nString file = request.getParameter(\""file\"");\nFile f = new File(\""/data/\"" + dir + \""/\"" + file);""","String dir = request.getParameter(\dir\"");\nString file = request.getParameter(\""file\"");\nif(dir != null && file != null && dir.matches(\""^[a-zA-Z0-9_-]+$\"") && file.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File f = new File(\""/data/\"", dir + \""/\"" + file);\n} else {\n    throw new IllegalArgumentException(\""Invalid directory or file name\"");\n}"""
Java,Path Traversal,"String input = request.getParameter(\path\"");\nFile f = new File(input);""","String input = request.getParameter(\path\"");\nPath base = Paths.get(\""/safe/dir/\"").toAbsolutePath();\nPath resolved = base.resolve(input).normalize();\nif(resolved.startsWith(base)) {\n    File f = resolved.toFile();\n} else {\n    throw new SecurityException(\""Invalid file path\"");\n}"""
Java,Path Traversal,"String directory = request.getParameter(\directory\"");\nFile file = new File(\""/documents/\"" + directory + \""/report.docx\"");""","String directory = request.getParameter(\directory\"");\nif(directory != null && directory.matches(\""^[a-zA-Z0-9_-]+$\"")) {\n    File file = new File(\""/documents/\"", directory + \""/report.docx\"");\n} else {\n    throw new IllegalArgumentException(\""Invalid directory\"");\n}"""
Java,Path Traversal,"String source = request.getParameter(\source\"");\nString dest = request.getParameter(\""dest\"");\nFiles.copy(Paths.get(source), Paths.get(dest));""","String source = request.getParameter(\source\"");\nString dest = request.getParameter(\""dest\"");\nif(source != null && dest != null && source.matches(\""^[a-zA-Z0-9_/.-]+$\"") && dest.matches(\""^[a-zA-Z0-9_/.-]+$\"")) {\n    Files.copy(Paths.get(source), Paths.get(dest));\n} else {\n    throw new IllegalArgumentException(\""Invalid source or destination\"");\n}"""
Java,Path Traversal,"String target = request.getParameter(\target\"");\nnew File(\""/temp/\"" + target).delete();""","String target = request.getParameter(\target\"");\nif(target != null && target.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    new File(\""/temp/\"", target).delete();\n} else {\n    throw new IllegalArgumentException(\""Invalid target file\"");\n}"""
Java,Path Traversal,"String configFile = request.getParameter(\config\"");\nProperties prop = new Properties();\nprop.load(new FileInputStream(\""/etc/\"" + configFile));""","String configFile = request.getParameter(\config\"");\nif(configFile != null && configFile.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    Properties prop = new Properties();\n    prop.load(new FileInputStream(new File(\""/etc/config/\"", configFile)));\n} else {\n    throw new IllegalArgumentException(\""Invalid configuration file\"");\n}"""
Java,Path Traversal,"String logFile = request.getParameter(\log\"");\nFile f = new File(\""/var/logs/\"" + logFile);""","String logFile = request.getParameter(\log\"");\nif(logFile != null && logFile.matches(\""^[a-zA-Z0-9_.-]+$\"")) {\n    File f = new File(\""/var/logs/\"", logFile);\n} else {\n    throw new IllegalArgumentException(\""Invalid log file name\"");\n}"""
C#,Path Traversal,"string fileName = Request.QueryString[\file\""]; \nFileInfo file = new FileInfo(\""C:\\\\uploads\\\\\"" + fileName);""","string fileName = Request.QueryString[\file\""]; \nif(!string.IsNullOrEmpty(fileName) && Regex.IsMatch(fileName, \""^[a-zA-Z0-9_.-]+$\"")) {\n    FileInfo file = new FileInfo(Path.Combine(\""C:\\\\uploads\\\\\"", fileName));\n} else { throw new ArgumentException(\""Invalid file name\""); }"""
C#,Path Traversal,"string path = Request.QueryString[\path\""]; \nstring content = File.ReadAllText(path);""","string path = Request.QueryString[\path\""]; \nstring basePath = Path.GetFullPath(\""C:\\\\data\\\\\"");\nstring fullPath = Path.GetFullPath(Path.Combine(basePath, path));\nif(fullPath.StartsWith(basePath)) { \n    string content = File.ReadAllText(fullPath);\n} else { \n    throw new ArgumentException(\""Access denied\""); \n}"""
C#,Path Traversal,"string filePath = Request.Form[\filePath\""]; \nFile.Delete(filePath);""","string filePath = Request.Form[\filePath\""]; \nstring baseDir = Path.GetFullPath(\""C:\\\\temp\\\\\"");\nstring fullPath = Path.GetFullPath(filePath);\nif(fullPath.StartsWith(baseDir) && Regex.IsMatch(Path.GetFileName(fullPath), \""^[a-zA-Z0-9_.-]+$\"")) { \n    File.Delete(fullPath);\n} else { \n    throw new ArgumentException(\""Invalid file path\""); \n}"""
C#,Path Traversal,"HttpPostedFile file = Request.Files[\file\""]; \nfile.SaveAs(Server.MapPath(\""~/uploads/\"" + file.FileName));""","HttpPostedFile file = Request.Files[\file\""]; \nstring fileName = Path.GetFileName(file.FileName);\nif(!string.IsNullOrEmpty(fileName) && Regex.IsMatch(fileName, \""^[a-zA-Z0-9_.-]+$\"")) {\n    file.SaveAs(Server.MapPath(Path.Combine(\""~/uploads/\"", fileName)));\n} else {\n    throw new ArgumentException(\""Invalid file name\"");\n}"""
C#,Path Traversal,"string folder = Request.QueryString[\folder\""]; \nstring file = Request.QueryString[\""file\""]; \nstring path = \""C:\\\\data\\\\\"" + folder + \""\\\\\"" + file;\nFile.ReadAllText(path);""","string folder = Request.QueryString[\folder\""]; \nstring file = Request.QueryString[\""file\""]; \nif(!string.IsNullOrEmpty(folder) && !string.IsNullOrEmpty(file) && Regex.IsMatch(folder, \""^[a-zA-Z0-9_-]+$\"") && Regex.IsMatch(file, \""^[a-zA-Z0-9_.-]+$\"")) {\n    string basePath = Path.GetFullPath(\""C:\\\\data\\\\\"");\n    string fullPath = Path.GetFullPath(Path.Combine(basePath, folder, file));\n    if(fullPath.StartsWith(basePath)) { \n        File.ReadAllText(fullPath);\n    } else {\n        throw new ArgumentException(\""Access denied\"");\n    }\n} else {\n    throw new ArgumentException(\""Invalid parameters\"");\n}"""
C#,Path Traversal,"string dir = Request.QueryString[\dir\""]; \nDirectoryInfo di = new DirectoryInfo(\""C:\\\\files\\\\\"" + dir);\nFileInfo[] files = di.GetFiles();""","string dir = Request.QueryString[\dir\""]; \nif(!string.IsNullOrEmpty(dir) && Regex.IsMatch(dir, \""^[a-zA-Z0-9_-]+$\"")) {\n    string baseDir = Path.GetFullPath(\""C:\\\\files\\\\\"");\n    string targetDir = Path.GetFullPath(Path.Combine(baseDir, dir));\n    if(targetDir.StartsWith(baseDir)) {\n        DirectoryInfo di = new DirectoryInfo(targetDir);\n        FileInfo[] files = di.GetFiles();\n    } else { throw new ArgumentException(\""Access denied\""); }\n} else { throw new ArgumentException(\""Invalid directory\""); }"""
C#,Path Traversal,"string tmpName = Request.QueryString[\tmpName\""]; \nstring tmpPath = Path.Combine(Path.GetTempPath(), tmpName);\nFile.WriteAllText(tmpPath, \""temp data\"");""","string tmpName = Request.QueryString[\tmpName\""]; \nif(!string.IsNullOrEmpty(tmpName) && Regex.IsMatch(tmpName, \""^[a-zA-Z0-9_.-]+$\"")) {\n    string tmpPath = Path.Combine(Path.GetTempPath(), tmpName);\n    File.WriteAllText(tmpPath, \""temp data\"");\n} else { throw new ArgumentException(\""Invalid temporary file name\""); }"""
C#,Path Traversal,"string config = Request.Form[\configFile\""]; \nstring path = \""C:\\\\config\\\\\"" + config;\nFile.ReadAllText(path);""","string config = Request.Form[\configFile\""]; \nif(!string.IsNullOrEmpty(config) && Regex.IsMatch(config, \""^[a-zA-Z0-9_.-]+$\"")) {\n    string path = Path.Combine(\""C:\\\\config\\\\\"", config);\n    File.ReadAllText(path);\n} else { throw new ArgumentException(\""Invalid configuration file name\""); }"""
C#,Path Traversal,"string src = Request.Form[\src\""]; string dest = Request.Form[\""dest\""];\nFile.Copy(src, dest);""","string src = Request.Form[\src\""]; string dest = Request.Form[\""dest\""];\nif(!string.IsNullOrEmpty(src) && !string.IsNullOrEmpty(dest) && Regex.IsMatch(Path.GetFileName(src), \""^[a-zA-Z0-9_.-]+$\"") && Regex.IsMatch(Path.GetFileName(dest), \""^[a-zA-Z0-9_.-]+$\"")) {\n    File.Copy(src, dest);\n} else { throw new ArgumentException(\""Invalid file names\""); }"""
C#,Path Traversal,"string log = Request.QueryString[\log\""];\nFileInfo f = new FileInfo(\""D:\\\\logs\\\\\"" + log);""","string log = Request.QueryString[\log\""];\nif(!string.IsNullOrEmpty(log) && Regex.IsMatch(log, \""^[a-zA-Z0-9_.-]+$\"")) {\n    FileInfo f = new FileInfo(Path.Combine(\""D:\\\\logs\\\\\"", log));\n} else { throw new ArgumentException(\""Invalid log file name\""); }"""
Java,Information Exposure,try {\n    processData();\n} catch(Exception ex) {\n    response.getWriter().println(ex.getMessage());\n},"try {\n    processData();\n} catch(Exception ex) {\n    logger.error(\Error processing data\"", ex);\n    response.getWriter().println(\""An internal error occurred. Please try again later.\"");\n}"""
Java,Information Exposure,"String result = someOperation();\nif(result == null) {\n    out.println(\Error: \"" + exception.getMessage());\n}""","String result = someOperation();\nif(result == null) {\n    out.println(\An error occurred. Please contact support.\"");\n    logger.error(\""Operation failed\"", exception);\n}"""
Java,Information Exposure,"out.println(\DB URL: \"" + config.getDbUrl());""","logger.debug(\Database URL accessed.\"");\nout.println(\""Operation successful.\"");"""
Java,Information Exposure,"try {\n    processRequest();\n} catch(Exception ex) {\n    out.println(\Exception: \"" + ex.toString());\n}""","try {\n    processRequest();\n} catch(Exception ex) {\n    logger.error(\Request processing failed\"", ex);\n    out.println(\""An unexpected error occurred.\"");\n}"""
Java,Information Exposure,"try {\n    readFile(filePath);\n} catch(IOException ex) {\n    out.println(\Error reading file: \"" + filePath);\n}""","try {\n    readFile(filePath);\n} catch(IOException ex) {\n    logger.error(\Error reading file\"", ex);\n    out.println(\""Unable to read the file.\"");\n}"""
Java,Information Exposure,"logger.info(\User email: \"" + user.getEmail());""","logger.info(\User login attempted.\"");"""
Java,Information Exposure,catch(Exception ex) {\n    response.getWriter().println(org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(ex));\n},"catch(Exception ex) {\n    logger.error(\Error occurred\"", ex);\n    response.getWriter().println(\""An error occurred. Please contact support.\"");\n}"""
Java,Information Exposure,"out.println(\JAVA_HOME: \"" + System.getenv(\""JAVA_HOME\""));""","logger.debug(\JAVA_HOME accessed.\"");\nout.println(\""Operation completed.\"");"""
Java,Information Exposure,"out.println(\Debug Info: \"" + debugInfo);""","logger.debug(\Debug Info: \"" + debugInfo);\nout.println(\""Request completed successfully.\"");"""
Java,Information Exposure,"try {\n    executeQuery(query);\n} catch(SQLException ex) {\n    out.println(\SQL Error: \"" + query);\n}""","try {\n    executeQuery(query);\n} catch(SQLException ex) {\n    logger.error(\SQL error\"", ex);\n    out.println(\""Database error occurred.\"");\n}"""
Java,Information Exposure,"if(input == null) { out.println(\Missing parameter: \"" + request.getParameter(\""param\"")); }""","if(input == null) { out.println(\Required parameter is missing.\""); logger.warn(\""Parameter 'param' is missing\""); }"""
Java,Information Exposure,"try {\n    process();\n} catch(Exception ex) {\n    out.println(\Internal Error: \"" + ex.getMessage());\n}""","try {\n    process();\n} catch(Exception ex) {\n    logger.error(\Processing error\"", ex);\n    out.println(\""An error occurred. Please try again later.\"");\n}"""
Java,Information Exposure,"try {\n    loadConfig();\n} catch(Exception ex) {\n    out.println(\Failed to load config from /etc/app/config.xml\"");\n}""","try {\n    loadConfig();\n} catch(Exception ex) {\n    logger.error(\Configuration load failed\"", ex);\n    out.println(\""Configuration error.\"");\n}"""
Java,Information Exposure,String debugOutput = getDebugOutput();\nout.println(debugOutput);,"logger.debug(getDebugOutput());\nout.println(\Operation completed.\"");"""
Java,Information Exposure,"logger.error(\API key used: \"" + apiKey);""","logger.error(\API key validation failed\"");"""
Java,Information Exposure,"catch(Exception ex) {\n    out.println(\Error in FileProcessor: \"" + ex.getMessage());\n}""","catch(Exception ex) {\n    logger.error(\File processing error\"", ex);\n    out.println(\""An error occurred during file processing.\"");\n}"""
Java,Information Exposure,"out.println(\Session ID: \"" + session.getId());""","logger.debug(\Session ID accessed\"");\nout.println(\""Operation successful.\"");"""
Java,Information Exposure,"out.println(\User data: \"" + user.toString());""","logger.debug(\User data: \"" + user.toString());\nout.println(\""Data processed successfully.\"");"""
Java,Information Exposure,catch(Exception ex) { out.println(ex); },"catch(Exception ex) { logger.error(\Operation failed\"", ex); out.println(\""An error occurred. Please contact support.\""); }"""
Java,Information Exposure,"out.println(\Connection string: \"" + connectionString);""","logger.error(\Database connection error\""); out.println(\""Database error.\"");"""
Java,Information Exposure,"if(!authenticate()) { out.println(\Authentication failed: Invalid credentials provided: \"" + input); }""","if(!authenticate()) { out.println(\Authentication failed.\""); logger.warn(\""Authentication error for user\""); }"""
Java,Information Exposure,"out.println(\OS: \"" + System.getProperty(\""os.name\"") + \"", Version: \"" + System.getProperty(\""os.version\""));""","logger.debug(\OS info accessed\""); out.println(\""Operation completed.\"");"""
Java,Information Exposure,try { processData(); } catch(Exception ex) { out.print(org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(ex)); },"try { processData(); } catch(Exception ex) { logger.error(\Error processing data\"", ex); out.println(\""An error occurred. Please try again later.\""); }"""
Java,Information Exposure,"out.println(\Config: \"" + config.toString());""","logger.debug(\Config accessed\""); out.println(\""Operation successful.\"");"""
Java,Information Exposure,"catch(Exception ex) { out.println(\Error processing order: \"" + ex.getMessage()); }""","catch(Exception ex) { logger.error(\Order processing error\"", ex); out.println(\""An error occurred processing your order.\""); }"""
Java,Information Exposure,"out.write(\DEBUG: \"" + debugInfo);""","logger.debug(\Debug info: \"" + debugInfo); out.write(\""Operation completed.\"");"""
Java,Information Exposure,"if(tokenInvalid) { out.println(\Invalid token: \"" + token); }""","if(tokenInvalid) { logger.warn(\Invalid token provided\""); out.println(\""Token invalid.\""); }"""
Java,Information Exposure,"out.println(\You entered: \"" + userInput);""","out.println(\You entered: \"" + org.apache.commons.text.StringEscapeUtils.escapeHtml4(userInput));"""
Java,Information Exposure,"try { process(); } catch(Exception ex) { out.println(\Server error: \"" + ex.getLocalizedMessage()); }""","try { process(); } catch(Exception ex) { logger.error(\Server error\"", ex); out.println(\""Internal server error\""); }"""
Java,Information Exposure,"out.println(\API Secret: \"" + apiSecret);""","logger.debug(\API secret used\""); out.println(\""Operation successful.\"");"""
Java,Information Exposure,"if(!isValid(userId)) { out.println(\User \"" + userId + \"" not found\""); }""","if(!isValid(userId)) { logger.warn(\User not found: \"" + userId); out.println(\""User not found\""); }"""
Java,Information Exposure,"catch(SQLException ex) { out.println(\DB Error: \"" + ex.getMessage()); }""","catch(SQLException ex) { logger.error(\Database error\"", ex); out.println(\""Database error occurred\""); }"""
Java,Information Exposure,"catch(IOException ex) { out.println(\File not found: /etc/config.cfg\""); }""","catch(IOException ex) { logger.error(\File error\"", ex); out.println(\""File error\""); }"""
Java,Information Exposure,"catch(Exception ex) { out.println(\Error: \"" + ex.toString()); }""","catch(Exception ex) { logger.error(\Unhandled error\"", ex); out.println(\""An error occurred\""); }"""
Java,Information Exposure,"out.println(\User data: \"" + user.toString());""","logger.debug(\User data accessed\""); out.println(\""Operation completed\"");"""
Java,Information Exposure,"out.println(\Java version: \"" + System.getProperty(\""java.version\""));""","logger.debug(\Java version accessed\""); out.println(\""Operation successful\"");"""
Java,Information Exposure,"if(paramInvalid) { out.println(\Invalid parameter: \"" + request.getParameter(\""param\"")); }""","if(paramInvalid) { logger.warn(\Invalid parameter encountered\""); out.println(\""Invalid input\""); }"""
Java,Information Exposure,catch(Exception ex) { ex.printStackTrace(out); },"catch(Exception ex) { logger.error(\Error encountered\"", ex); out.println(\""An error occurred\""); }"""
Java,Information Exposure,out.println(debugInfo);,"logger.debug(\Debug info: \"" + debugInfo); out.println(\""Request processed\"");"""
Java,Information Exposure,"return new ResponseEntity<>(ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);","logger.error(\API error\"", ex); return new ResponseEntity<>(\""Internal server error\"", HttpStatus.INTERNAL_SERVER_ERROR);"""
C#,Information Exposure,try {\n    ProcessData();\n} catch(Exception ex) {\n    Response.Write(ex.ToString());\n},"try {\n    ProcessData();\n} catch(Exception ex) {\n    logger.Error(ex, \Processing failed\"");\n    Response.Write(\""An error occurred. Please contact support.\"");\n}"""
C#,Information Exposure,catch(Exception ex) {\n    Response.Write(ex.StackTrace);\n},"catch(Exception ex) {\n    logger.Error(ex, \Error processing request\"");\n    Response.Write(\""Internal error\"");\n}"""
C#,Information Exposure,"Response.Write(\OS: \"" + Environment.OSVersion.ToString());""","logger.Debug(\OS version accessed\""); Response.Write(\""Request successful\"");"""
C#,Information Exposure,"Response.Write(\Debug: \"" + debugInfo);""","logger.Debug(\Debug info: \"" + debugInfo); Response.Write(\""Operation completed\"");"""
C#,Information Exposure,"Response.Write(\Config: \"" + ConfigurationManager.AppSettings[\""ConfigKey\""]);""","logger.Debug(\Config key accessed\""); Response.Write(\""Operation successful\"");"""
C#,Information Exposure,"try { DoWork(); } catch(Exception ex) { Response.Write(\Error: \"" + ex.Message); }""","try { DoWork(); } catch(Exception ex) { logger.Error(ex, \Work failed\""); Response.Write(\""An error occurred\""); }"""
C#,Information Exposure,"Response.Write(\Parameter: \"" + Request.QueryString[\""param\""]);""","Response.Write(\Parameter: \"" + HttpUtility.HtmlEncode(Request.QueryString[\""param\""]));"""
C#,Information Exposure,return BadRequest(ex.ToString());,"logger.Error(ex, \API error\""); return BadRequest(\""Internal error\"");"""
C#,Information Exposure,"logger.Info(\User email: \"" + user.Email);""","logger.Info(\User email accessed\"");"""
C#,Information Exposure,catch(Exception ex) { Response.Write(ex.ToString()); },"catch(Exception ex) { logger.Error(ex, \Unhandled error\""); Response.Write(\""An error occurred\""); }"""
C#,Information Exposure,"catch(SqlException ex) { Response.Write(\SQL Error: \"" + ex.Message); }""","catch(SqlException ex) { logger.Error(ex, \Database error\""); Response.Write(\""Database error occurred\""); }"""
C#,Information Exposure,"if(!UserExists(userId)) { Response.Write(\User not found: \"" + userId); }""","if(!UserExists(userId)) { logger.Warn(\User not found\""); Response.Write(\""User not found\""); }"""
C#,Information Exposure,"Response.Write(\Server: \"" + Environment.MachineName);""","logger.Debug(\Machine name accessed\""); Response.Write(\""Operation successful\"");"""
C#,Information Exposure,"Response.Write(\Debug Info: \"" + debugData);""","logger.Debug(\Debug Data: \"" + debugData); Response.Write(\""Done\"");"""
C#,Information Exposure,"catch(Exception ex) { Response.Write(\Exception: \"" + ex.Message); }""","catch(Exception ex) { logger.Error(ex, \Exception caught\""); Response.Write(\""An error occurred\""); }"""
C#,Information Exposure,"Response.Write(\File path: \"" + filePath);""","logger.Debug(\File path accessed\""); Response.Write(\""Operation successful\"");"""
C#,Information Exposure,"Response.Write(\App Version: \"" + ConfigurationManager.AppSettings[\""AppVersion\""]);""","logger.Debug(\App version accessed\""); Response.Write(\""Done\"");"""
C#,Information Exposure,catch(Exception ex) { Response.Write(ex.ToString()); },"catch(Exception ex) { logger.Error(ex, \Unhandled exception\""); Response.Write(\""Internal error\""); }"""
C#,Information Exposure,"Response.Write(\SessionID: \"" + Session.SessionID);""","logger.Debug(\Session accessed\""); Response.Write(\""Request complete\"");"""
C#,Information Exposure,"Response.Write(\Detailed Error: \"" + ex.Message);""","logger.Error(ex, \Error processing request\""); Response.Write(\""Error processing request\"");"""
C#,Information Exposure,"catch(Exception ex) { Response.Write(\Failed with: \"" + Request.Form[\""param\""] + \"", error: \"" + ex.Message); }""","catch(Exception ex) { logger.Error(ex, \Error processing request\""); Response.Write(\""An error occurred\""); }"""
C#,Information Exposure,"Response.Write(\Query: \"" + Request.QueryString[\""q\""]);""","Response.Write(\Query: \"" + HttpUtility.HtmlEncode(Request.QueryString[\""q\""]));"""
C#,Information Exposure,"Response.Write(\Error: \"" + detailedErrorInfo);""","logger.Debug(\Error details: \"" + detailedErrorInfo); Response.Write(\""An error occurred\"");"""
C#,Information Exposure,return BadRequest(ex.Message);,"logger.Error(ex, \API error\""); return BadRequest(\""Internal server error\"");"""
C#,Information Exposure,"catch(Exception ex) { Response.Write(\Error in module: \"" + ex.InnerException.Message); }""","catch(Exception ex) { logger.Error(ex, \Module error\""); Response.Write(\""Module error\""); }"""
C#,Information Exposure,"catch(SqlException ex) { Response.Write(\DB Query: \"" + query + \"", Error: \"" + ex.Message); }""","catch(SqlException ex) { logger.Error(ex, \Database error\""); Response.Write(\""Database error occurred\""); }"""
C#,Information Exposure,"Response.Write(\Exception details: \"" + ex.ToString());""","logger.Error(ex, \Unhandled exception\""); Response.Write(\""An error occurred\"");"""
C#,Information Exposure,"Response.Write(\Conn String: \"" + ConfigurationManager.ConnectionStrings[\""Default\""].ConnectionString);""","logger.Debug(\Connection string accessed\""); Response.Write(\""Operation completed\"");"""
C#,Information Exposure,"catch(Exception ex) { Response.Write(\Cause: \"" + ex.InnerException); }""","catch(Exception ex) { logger.Error(ex, \Error occurred\""); Response.Write(\""An error occurred\""); }"""
C#,Information Exposure,"Response.Write(\Debug: \"" + debugInfo);""","logger.Debug(\Debug info logged\""); Response.Write(\""Request processed\"");"""
C#,Information Exposure,"Response.Write(\User role: \"" + ((User)Session[\""user\""]).Role);""","logger.Debug(\User role accessed\""); Response.Write(\""Operation successful\"");"""
C#,Information Exposure,"Response.Write(\Input was: \"" + Request.Form[\""input\""]);""","Response.Write(\Input was: \"" + HttpUtility.HtmlEncode(Request.Form[\""input\""]));"""
C#,Information Exposure,"Response.Write(\Config Path: \"" + Server.MapPath(\""/config/config.xml\""));""","logger.Debug(\Config file accessed\""); Response.Write(\""Operation successful\"");"""
C#,Information Exposure,return NotFound(ex.Message);,"logger.Error(ex, \API not found error\""); return NotFound(\""Item not found\"");"""
C#,Information Exposure,"Response.Write(\Java version: \"" + Environment.Version);""","logger.Debug(\System version accessed\""); Response.Write(\""Operation completed\"");"""
C#,Information Exposure,Response.Write(JsonConvert.SerializeObject(user));,"var minimalUser = new { user.Id, user.Username };\nResponse.Write(JsonConvert.SerializeObject(minimalUser));"
C#,Information Exposure,catch(Exception ex) { Response.Write(ex.ToString()); },"catch(Exception ex) { logger.Error(ex, \Unhandled error\""); Response.Write(\""An error occurred\""); }"""
C#,Information Exposure,"Response.Write(\API Key: \"" + ConfigurationManager.AppSettings[\""ApiKey\""]);""","logger.Debug(\API key accessed\""); Response.Write(\""Operation successful\"");"""
C#,Information Exposure,return Json(new { error = ex.Message });,"logger.Error(ex, \Error in API\""); return Json(new { error = \""Internal error\"" });"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\secret\""); // Hardcoded weak key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")); // Retrieve key from environment variables"""
Java,Insecure JWT Signing Key,"String signingKey = \12345\""; // Hardcoded numeric key\nAlgorithm alg = Algorithm.HMAC256(signingKey);""",String signingKey = Config.getSecretKey();\nAlgorithm alg = Algorithm.HMAC256(signingKey);
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\my_jwt_key\""); // Weak key literal""","Algorithm alg = Algorithm.HMAC256(System.getProperty(\jwt.secret\"")); // Use secure system property"""
Java,Insecure JWT Signing Key,"String tokenKey = \defaultSecret\""; // Insecure default\nAlgorithm alg = Algorithm.HMAC256(tokenKey);""","String tokenKey = SecureConfigLoader.getEncryptedProperty(\jwt.secret\"");\nAlgorithm alg = Algorithm.HMAC256(tokenKey);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\pass\""); // Key too short and predictable""",Algorithm alg = Algorithm.HMAC256(generateSecureKey()); // Use dynamically generated key
Java,Insecure JWT Signing Key,"// Using hardcoded literal for JWT key\nAlgorithm alg = Algorithm.HMAC256(\password\"");""","// Use a key rotated and stored securely\nAlgorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET_KEY\""));"""
Java,Insecure JWT Signing Key,"String key = \secretkey\""; // Hardcoded key in source code\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = KeyStoreUtil.getKey(\jwtKey\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"// Hardcoded key via properties file\nAlgorithm alg = Algorithm.HMAC256(\changeme\"");""","// Retrieve rotated key from secure configuration\nAlgorithm alg = Algorithm.HMAC256(Config.get(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\weakkey\""); // Insufficient entropy""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \admin_key\"";\nAlgorithm alg = Algorithm.HMAC256(key);""",String key = SecureKeyGenerator.generateKey();\nAlgorithm alg = Algorithm.HMAC256(key);
Java,Insecure JWT Signing Key,"// Using hardcoded default secret\nAlgorithm alg = Algorithm.HMAC256(\default_secret\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String jwtKey = \short\"";\nAlgorithm alg = Algorithm.HMAC256(jwtKey);""","String jwtKey = System.getenv(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(jwtKey);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\abcdefg\""); // Very short key""",Algorithm alg = Algorithm.HMAC256(generateLongSecureKey());
Java,Insecure JWT Signing Key,// Using a default library key (insecure)\nAlgorithm alg = Algorithm.HMAC256(Secrets.DEFAULT_KEY);,"Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \key123\""; // Hardcoded and predictable\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = ConfigurationManager.getSecureKey(\jwtKey\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\mySecret\""); // Fixed key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET_KEY\""));"""
Java,Insecure JWT Signing Key,"// Hardcoded literal key used for signing JWT\nAlgorithm alg = Algorithm.HMAC256(\123456\"");""","String jwtSecret = SecureKeyUtil.getKey(\jwt.secret\"");\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);"""
Java,Insecure JWT Signing Key,"String key = \staticKey\"";\nAlgorithm alg = Algorithm.HMAC256(key);""",String key = KeyManagement.getDynamicJWTKey();\nAlgorithm alg = Algorithm.HMAC256(key);
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\Qwerty\""); // Common password as key""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"// Hardcoded insecure literal key\nString jwtSecret = \secret!\"";\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);""","String jwtSecret = KeystoreUtil.getDecryptedKey(\jwt.secret\"");\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\adminPass\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_ADMIN_KEY\""));"""
Java,Insecure JWT Signing Key,"String key = \password123\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = System.getenv(\JWT_SECURE_KEY\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"// Decode token and use hardcoded key\nDecodedJWT jwt = JWT.decode(token);\nAlgorithm alg = Algorithm.HMAC256(\secret_key\"");""","// Use secure signing key from environment\nDecodedJWT jwt = JWT.decode(token);\nAlgorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"// Hardcoded secret used in signing\nAlgorithm alg = Algorithm.HMAC256(\insecure\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"// Using a literal key for token signing\nString key = \fixedKey\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = SecureKeyManager.RetrieveKey(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
C#,Insecure JWT Signing Key,"var tokenHandler = new JwtSecurityTokenHandler();\nvar key = Encoding.UTF8.GetBytes(\secret\"");\nvar descriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};""","var tokenHandler = new JwtSecurityTokenHandler();\nvar key = Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);\nvar descriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.ASCII.GetBytes(\12345\"");\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};""","var key = Encoding.ASCII.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var descriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\my_jwt_key\"")), SecurityAlgorithms.HmacSha256Signature)\n};""","var descriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\default_secret\"");\nvar credentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);""","var key = Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));\nvar credentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\pass\"")), SecurityAlgorithms.HmacSha256Signature)\n};""","var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\mykey\""));""","var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]));"""
C#,Insecure JWT Signing Key,"var tokenDescriptor = new SecurityTokenDescriptor {\n    Subject = new ClaimsIdentity(new[] { new Claim(\id\"", user.Id.ToString()) }),\n    Expires = DateTime.UtcNow.AddHours(1),\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\""hardcoded_key\"")), SecurityAlgorithms.HmacSha256Signature)\n};""","var secret = ConfigurationManager.AppSettings[\JWT_SECRET\""];\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    Subject = new ClaimsIdentity(new[] { new Claim(\""id\"", user.Id.ToString()) }),\n    Expires = DateTime.UtcNow.AddHours(1),\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var signingKey = \defaultKey\"";\nvar creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(signingKey)), SecurityAlgorithms.HmacSha256Signature);""","var signingKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");\nvar creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(signingKey)), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"var key = Encoding.ASCII.GetBytes(\abc123\"");\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};""","var key = Encoding.ASCII.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var secretKey = \mysecretkey\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secretKey)), SecurityAlgorithms.HmacSha256Signature)\n};""","var secretKey = ConfigurationManager.AppSettings[\JWT_SECRET\""];\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secretKey)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\simplekey\"");""","var key = Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));"""
C#,Insecure JWT Signing Key,"SigningCredentials creds = new SigningCredentials(\n    new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\insecure\"")), \n    SecurityAlgorithms.HmacSha256Signature);\nvar tokenDescriptor = new SecurityTokenDescriptor { SigningCredentials = creds };""","SigningCredentials creds = new SigningCredentials(\n    new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])), \n    SecurityAlgorithms.HmacSha256Signature);\nvar tokenDescriptor = new SecurityTokenDescriptor { SigningCredentials = creds };"""
C#,Insecure JWT Signing Key,"var symmetricKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\hardCodedKey\""));""","var symmetricKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(SecureConfigLoader.GetKey(\JWT_SECRET\"")));"""
C#,Insecure JWT Signing Key,"var tokenDescriptor = new SecurityTokenDescriptor {\n    Subject = new ClaimsIdentity(new[] { new Claim(\role\"", \""user\"") }),\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\""testKey\"")), SecurityAlgorithms.HmacSha256Signature)\n};""","var tokenDescriptor = new SecurityTokenDescriptor {\n    Subject = new ClaimsIdentity(new[] { new Claim(\role\"", \""user\"") }),\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var keyBytes = Encoding.ASCII.GetBytes(\weakkey\"");\nvar signingKey = new SymmetricSecurityKey(keyBytes);""","var keyBytes = Encoding.ASCII.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));\nvar signingKey = new SymmetricSecurityKey(keyBytes);"""
C#,Insecure JWT Signing Key,"SigningCredentials creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(\123456\"")), SecurityAlgorithms.HmacSha256Signature);""","SigningCredentials creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"string keyString = \fixedKey\"";\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = SecureKeyManager.RetrieveKey(\JWT_SECRET\"");\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Signing Key,"var signingCreds = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\unsafeKey\"")), SecurityAlgorithms.HmacSha256Signature);""","var secretKey = ConfigurationManager.AppSettings[\JWT_SECRET_KEY\""];\nvar signingCreds = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secretKey)), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"string jwtKey = \defaultjwtkey\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(jwtKey)), SecurityAlgorithms.HmacSha256Signature)\n};""","string jwtKey = SecureConfig.GetJWTKey();\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(jwtKey)), SecurityAlgorithms.HmacSha256Signature)\n};"
C#,Insecure JWT Signing Key,"var secret = \myweaksecret\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret)), SecurityAlgorithms.HmacSha256Signature)\n};""","var secret = Environment.GetEnvironmentVariable(\JWT_SECRET\"");\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\insecuresecret\"");\nvar creds = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);""","var key = Encoding.UTF8.GetBytes(SecureStore.GetValue(\JWT_SECRET\""));\nvar creds = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"// Hardcoded secret value in code\nstring secretKey = \mySecretKey123\"";""","string secretKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"// Using default key from a library\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Secrets.DEFAULT_KEY)), SecurityAlgorithms.HmacSha256Signature)\n};","var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""))), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"string keyString = \key123\"";\nvar signingKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = ConfigurationManager.AppSettings[\JWT_SECRET\""]; \nvar signingKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Signing Key,"var signingKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(\defaultKey\""));""","var signingKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\"")));"""
C#,Insecure JWT Signing Key,"string jwtKey = \hardcodedjwtkey\"";""","string jwtKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var staticKey = \adminKey123\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(staticKey)), SecurityAlgorithms.HmacSha256Signature)\n};""","var staticKey = ConfigurationManager.AppSettings[\JWT_SECRET\""]; \nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(staticKey)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"string keyString = \legacyKey\"";\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = SecureKeyManager.RetrieveLegacyKey(\JWT_SECRET\"");\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Signing Key,"string defaultKey = \insecureKey\"";""","string defaultKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"string jwtPass = \password\"";""","string jwtPass = ConfigurationManager.AppSettings[\JWT_SECRET\""];"""
C#,Insecure JWT Signing Key,"// Hardcoded key used for token signing\nstring tokenKey = \myJWTKey\"";""","string tokenKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var hmacKey = Encoding.UTF8.GetBytes(\myHMACKey\"");""","var hmacKey = Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);"""
C#,Insecure JWT Signing Key,"var staticSigningKey = \staticKey123\"";""","var staticSigningKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
Java,Weak Cryptography,String hash = DigestUtils.md5Hex(password);,"String hash = BCrypt.hashpw(password, BCrypt.gensalt());"
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(\DES\"");""","Cipher cipher = Cipher.getInstance(\AES/CBC/PKCS5Padding\"");"""
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(\RC4\"");""","Cipher cipher = Cipher.getInstance(\AES/CTR/NoPadding\"");"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\SHA-1\"");\nbyte[] digest = md.digest(data.getBytes());""","MessageDigest md = MessageDigest.getInstance(\SHA-256\"");\nbyte[] digest = md.digest(data.getBytes(StandardCharsets.UTF_8));"""
Java,Weak Cryptography,"byte[] key = \secret123\"".getBytes();\nCipher cipher = Cipher.getInstance(\""AES\"");\nSecretKeySpec skey = new SecretKeySpec(key, \""AES\"");""","byte[] key = System.getenv(\AES_KEY\"").getBytes(StandardCharsets.UTF_8);\nCipher cipher = Cipher.getInstance(\""AES/CBC/PKCS5Padding\"");\nSecretKeySpec skey = new SecretKeySpec(key, \""AES\"");"""
Java,Weak Cryptography,String md5hash = DigestUtils.md5Hex(password);,String hash = PasswordUtil.hashPassword(password);
Java,Weak Cryptography,"byte[] hmacKey = \hmacKey\"".getBytes();\nMac mac = Mac.getInstance(\""HmacSHA1\"");""","byte[] hmacKey = System.getenv(\HMAC_KEY\"").getBytes(StandardCharsets.UTF_8);\nMac mac = Mac.getInstance(\""HmacSHA256\"");"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\"");""","MessageDigest md = MessageDigest.getInstance(\SHA-256\"");"""
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(\AES/ECB/PKCS5Padding\"");""","Cipher cipher = Cipher.getInstance(\AES/CBC/PKCS5Padding\"");"""
Java,Weak Cryptography,"String hashed = new String(DatatypeConverter.printHexBinary(MessageDigest.getInstance(\SHA1\"").digest(password.getBytes())));""","String hashed = new String(DatatypeConverter.printHexBinary(MessageDigest.getInstance(\SHA-256\"").digest(password.getBytes(StandardCharsets.UTF_8))));"""
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(\Blowfish\"");""","Cipher cipher = Cipher.getInstance(\AES/CBC/PKCS5Padding\"");"""
Java,Weak Cryptography,"String encryptionKey = \myFixedKey\"";\nSecretKeySpec keySpec = new SecretKeySpec(encryptionKey.getBytes(), \""AES\"");""","String encryptionKey = SecureVault.getKey(\AES_KEY\"");\nSecretKeySpec keySpec = new SecretKeySpec(encryptionKey.getBytes(StandardCharsets.UTF_8), \""AES\"");"""
Java,Weak Cryptography,"Signature signature = Signature.getInstance(\MD5withRSA\"");""","Signature signature = Signature.getInstance(\SHA256withRSA\"");"""
Java,Weak Cryptography,"final String CONSTANT = \ABC123\"";""","final String CONSTANT = Config.get(\CRYPTO_CONSTANT\"");"""
Java,Weak Cryptography,"SecretKeyFactory factory = SecretKeyFactory.getInstance(\PBKDF2WithHmacSHA1\"");""","SecretKeyFactory factory = SecretKeyFactory.getInstance(\PBKDF2WithHmacSHA256\"");"""
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(\RC4\"");""","Cipher cipher = Cipher.getInstance(\AES/GCM/NoPadding\"");"""
Java,Weak Cryptography,"String key = \0123456789abcdef\"";""","String key = System.getenv(\AES_KEY\"");"""
Java,Weak Cryptography,String checksum = DigestUtils.md5Hex(fileContent);,String checksum = DigestUtils.sha256Hex(fileContent);
Java,Weak Cryptography,String hash = DigestUtils.sha1Hex(data);,String hash = DigestUtils.sha256Hex(data);
Java,Weak Cryptography,"byte[] iv = \12345678\"".getBytes();""",byte[] iv = SecureRandomUtil.generateRandomBytes(16);
Java,Weak Cryptography,"Cipher cipher = Cipher.getInstance(\DESede/ECB/PKCS5Padding\"");""","Cipher cipher = Cipher.getInstance(\DESede/CBC/PKCS5Padding\"");"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\SHA-1\"");""","String hash = BCrypt.hashpw(password, BCrypt.gensalt());"
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD2\"");""","MessageDigest md = MessageDigest.getInstance(\SHA-256\"");"""
Java,Weak Cryptography,"String salt = \fixedSalt\"";\nbyte[] hash = DigestUtils.sha256(salt + password.getBytes());""","byte[] salt = SecureRandomUtil.generateRandomBytes(16);\nbyte[] hash = HashUtil.sha256(salt, password.getBytes(StandardCharsets.UTF_8));"
Java,Weak Cryptography,String encoded = Base64.getEncoder().encodeToString(plainText.getBytes());,"Cipher cipher = Cipher.getInstance(\AES/CBC/PKCS5Padding\"");\n// Key and IV management required\nbyte[] encrypted = cipher.doFinal(plainText.getBytes(StandardCharsets.UTF_8));"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\secretKey\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \123abc\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = Config.getSecureKey(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"String jwtKey = \defaultKey\"";\nAlgorithm alg = Algorithm.HMAC256(jwtKey);""","String jwtKey = System.getenv(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(jwtKey);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\fixedKey\"");""","Algorithm alg = Algorithm.HMAC256(SecureVault.getKey(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\hardcodedTokenKey\"");""","Algorithm alg = Algorithm.HMAC256(Environment.getProperty(\jwt.secret\""));"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\weakKey\"");""","Algorithm alg = Algorithm.HMAC256(System.getenv(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \mySimpleKey\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = Config.get(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\insecure123\"");""","Algorithm alg = Algorithm.HMAC256(SecureStore.get(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\mypassword\"");""","Algorithm alg = Algorithm.HMAC256(System.getProperty(\jwt.secret\""));"""
Java,Insecure JWT Signing Key,"String key = \pass123\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = System.getenv(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\signatureKey\"");""","Algorithm alg = Algorithm.HMAC256(Config.get(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String jwtSecret = \defaultjwt\"";\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);""","String jwtSecret = SecureKeyManager.getSecret(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(jwtSecret);"""
Java,Insecure JWT Signing Key,"String signingKey = \secret123\"";\nAlgorithm alg = Algorithm.HMAC256(signingKey);""","String signingKey = Environment.getProperty(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(signingKey);"""
Java,Insecure JWT Signing Key,"Algorithm alg = Algorithm.HMAC256(\legacyKey\"");""","Algorithm alg = Algorithm.HMAC256(SecureVault.getKey(\JWT_SECRET\""));"""
Java,Insecure JWT Signing Key,"String key = \fixedKeyValue\"";\nAlgorithm alg = Algorithm.HMAC256(key);""","String key = ConfigurationLoader.get(\JWT_SECRET\"");\nAlgorithm alg = Algorithm.HMAC256(key);"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\secret\"");\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};""","var key = Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.ASCII.GetBytes(\12345\"");\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};""","var key = Encoding.ASCII.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\my_jwt_key\"")), SecurityAlgorithms.HmacSha256Signature)\n};""","var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\default_secret\"");\nvar creds = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);""","var key = Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));\nvar creds = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"var signingKey = \mykey\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(signingKey)), SecurityAlgorithms.HmacSha256Signature)\n};""","var signingKey = ConfigurationManager.AppSettings[\JWT_SECRET\""];\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(signingKey)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var signingKey = \defaultKey\"";\nvar creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(signingKey)), SecurityAlgorithms.HmacSha256Signature);""","var signingKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");\nvar creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(signingKey)), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"string jwtKey = \hardCodedToken\"";""","string jwtKey = ConfigurationManager.AppSettings[\JWT_SECRET\""];"""
C#,Insecure JWT Signing Key,"var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\secretAPI\"")), SecurityAlgorithms.HmacSha256Signature)\n};""","var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""))), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"string tokenKey = \fixedKey\"";""","string tokenKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var hmacKey = Encoding.UTF8.GetBytes(\insecureKey\"");""","var hmacKey = Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);"""
C#,Insecure JWT Signing Key,"string keyString = \key123\"";\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = ConfigurationManager.AppSettings[\JWT_SECRET\""]; \nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Signing Key,"var signingCreds = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\unsafeKey\"")), SecurityAlgorithms.HmacSha256Signature);""","var secretKey = ConfigurationManager.AppSettings[\JWT_SECRET_KEY\""];\nvar signingCreds = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secretKey)), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"string jwtKey = \defaultjwtkey\"";""",string jwtKey = SecureConfig.GetJWTKey();
C#,Insecure JWT Signing Key,"var secret = \myweaksecret\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret)), SecurityAlgorithms.HmacSha256Signature)\n};""","var secret = Environment.GetEnvironmentVariable(\JWT_SECRET\"");\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(secret)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\insecuresecret\"");\nvar creds = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);""","var key = Encoding.UTF8.GetBytes(SecureStore.GetValue(\JWT_SECRET\""));\nvar creds = new SigningCredentials(new SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"string secretKey = \mySecretKey123\"";""","string secretKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Secrets.DEFAULT_KEY)), SecurityAlgorithms.HmacSha256Signature)\n};","var tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""))), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"string keyString = \fixedKey\"";\nvar signingKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = ConfigurationManager.AppSettings[\JWT_SECRET\""]; \nvar signingKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Signing Key,"var signingKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(\defaultKey\""));""","var signingKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\"")));"""
C#,Insecure JWT Signing Key,"string jwtKey = \hardcodedjwtkey\"";""","string jwtKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var staticKey = \adminKey123\"";\nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(staticKey)), SecurityAlgorithms.HmacSha256Signature)\n};""","var staticKey = ConfigurationManager.AppSettings[\JWT_SECRET\""]; \nvar tokenDescriptor = new SecurityTokenDescriptor {\n    SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(staticKey)), SecurityAlgorithms.HmacSha256Signature)\n};"""
C#,Insecure JWT Signing Key,"string keyString = \legacyKey\"";\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));""","string keyString = SecureKeyManager.RetrieveLegacyKey(\JWT_SECRET\"");\nvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(keyString));"""
C#,Insecure JWT Signing Key,"var hmacKey = Encoding.UTF8.GetBytes(\myHMACKey\"");""","var hmacKey = Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);"""
C#,Insecure JWT Signing Key,"string key = \secretKey\"";""","string key = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\defaultKey\"")), SecurityAlgorithms.HmacSha256Signature);""","var creds = new SigningCredentials(new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])), SecurityAlgorithms.HmacSha256Signature);"""
C#,Insecure JWT Signing Key,"var keyBytes = Encoding.ASCII.GetBytes(\weakkey\"");""","var keyBytes = Encoding.ASCII.GetBytes(Environment.GetEnvironmentVariable(\JWT_SECRET\""));"""
C#,Insecure JWT Signing Key,"var key = Encoding.UTF8.GetBytes(\insecurejwtkey\"");""","var key = Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);"""
C#,Insecure JWT Signing Key,"string keyString = \key123\"";""","string keyString = ConfigurationManager.AppSettings[\JWT_SECRET\""];"""
C#,Insecure JWT Signing Key,"string staticKey = \adminKey123\"";""","string staticKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var tokenKey = \hardcodedjwtkey\"";""","var tokenKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
C#,Insecure JWT Signing Key,"var hmacKey = Encoding.UTF8.GetBytes(\myHMACKey\"");""","var hmacKey = Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]);"""
C#,Insecure JWT Signing Key,"string jwtSecret = \keyStatic\"";""","string jwtSecret = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
Java,Sensitive Data Exposure,"out.println(\DB Password: \"" + config.getDbPassword());""","logger.error(\Database access error\""); out.println(\""An internal error occurred. Please contact support.\"");"""
Java,Sensitive Data Exposure,"try { login(user, pass); } catch(Exception ex) { out.println(\Error: \"" + ex.getMessage() + \"" for user \"" + user.getUsername()); }""","try { login(user, pass); } catch(Exception ex) { logger.error(\Login failed\"", ex); out.println(\""Login failed. Please check your credentials.\""); }"""
Java,Sensitive Data Exposure,"logger.info(\Encryption key: \"" + encryptionKey);""","logger.info(\Encryption process initiated.\"");"""
Java,Sensitive Data Exposure,try { processData(); } catch(Exception ex) { ex.printStackTrace(out); },"try { processData(); } catch(Exception ex) { logger.error(\Error processing data\"", ex); out.println(\""An error occurred. Please try again later.\""); }"""
Java,Sensitive Data Exposure,"out.println(\Config: \"" + config.toString());""","logger.debug(\Configuration accessed\""); out.println(\""Operation successful.\"");"""
Java,Sensitive Data Exposure,"out.println(\File location: /var/app/data/config.xml\"");""","logger.debug(\Config file accessed\""); out.println(\""Operation completed.\"");"""
Java,Sensitive Data Exposure,"catch(Exception ex) { out.println(\Error for user \"" + user.getEmail() + \"": \"" + ex.getMessage()); }""","catch(Exception ex) { logger.error(\User operation error\"", ex); out.println(\""An error occurred\""); }"""
Java,Sensitive Data Exposure,"out.println(\JAVA_HOME: \"" + System.getenv(\""JAVA_HOME\""));""","logger.debug(\System environment variable accessed\""); out.println(\""Operation successful.\"");"""
Java,Sensitive Data Exposure,"try { loadData(); } catch(Exception ex) { out.println(\Exception: \"" + ex.getMessage()); }""","try { loadData(); } catch(Exception ex) { logger.error(\Data load error\"", ex); out.println(\""Failed to load data\""); }"""
Java,Sensitive Data Exposure,"out.println(\API Key: \"" + apiKey);""","logger.debug(\API key accessed\""); out.println(\""Request completed successfully.\"");"""
Java,Sensitive Data Exposure,out.println(user.toString());,"logger.info(\User information accessed\""); out.println(\""Operation successful.\"");"""
Java,Sensitive Data Exposure,"catch(SQLException ex) { out.println(\SQL Error: \"" + ex.getMessage()); }""","catch(SQLException ex) { logger.error(\Database error\"", ex); out.println(\""Database error occurred\""); }"""
Java,Sensitive Data Exposure,"out.println(\Debug: \"" + debugInfo);""","logger.debug(\Debug info: \"" + debugInfo); out.println(\""Operation completed\"");"""
Java,Sensitive Data Exposure,"out.println(\SSN: \"" + user.getSSN());""","logger.warn(\Attempt to access sensitive user info\""); out.println(\""User data error\"");"""
Java,Sensitive Data Exposure,"catch(Exception ex) { out.println(\Encryption failed with key: \"" + encryptionKey); }""","catch(Exception ex) { logger.error(\Encryption error\"", ex); out.println(\""Encryption error occurred\""); }"""
Java,Sensitive Data Exposure,"return new ResponseEntity<>(debugData, HttpStatus.INTERNAL_SERVER_ERROR);","logger.error(\Internal error\"", debugData); return new ResponseEntity<>(\""Internal error\"", HttpStatus.INTERNAL_SERVER_ERROR);"""
Java,Sensitive Data Exposure,"String logs = new String(Files.readAllBytes(Paths.get(\/var/log/app.log\"")));
out.println(logs);""","logger.debug(\Log file accessed\""); out.println(\""Operation completed successfully.\"");"""
Java,Sensitive Data Exposure,"out.println(\OS Info: \"" + System.getProperty(\""os.name\"") + \"", Version: \"" + System.getProperty(\""os.version\""));""","logger.debug(\OS info accessed\""); out.println(\""Operation successful\"");"""
Java,Sensitive Data Exposure,"out.println(\IP: \"" + InetAddress.getLocalHost().getHostAddress());""","logger.debug(\Local host address accessed\""); out.println(\""Operation successful\"");"""
Java,Sensitive Data Exposure,"if(error) { out.println(\Error Code: 5001\""); }""","if(error) { logger.error(\Internal error code 5001\""); out.println(\""An error occurred\""); }"""
Java,Sensitive Data Exposure,out.println(config.toDetailedString());,"logger.debug(\Configuration accessed\""); out.println(\""Operation successful\"");"""
Java,Sensitive Data Exposure,"catch(Exception ex) { out.println(\API error: \"" + ex.getMessage()); }""","catch(Exception ex) { logger.error(\API processing error\"", ex); out.println(\""API error occurred\""); }"""
Java,Sensitive Data Exposure,"out.println(\User Token: \"" + user.getToken());""","logger.info(\User token accessed\""); out.println(\""Operation successful\"");"""
Java,Sensitive Data Exposure,catch(Exception ex) { ex.printStackTrace(out); },"catch(Exception ex) { logger.error(\Unhandled exception\"", ex); out.println(\""An error occurred\""); }"""
Java,Sensitive Data Exposure,"out.println(\Card Number: \"" + payment.getCardNumber());""","logger.warn(\Attempt to display payment info\""); out.println(\""Payment processed successfully\"");"""
Java,Sensitive Data Exposure,"try { processOrder(); } catch(Exception ex) { out.println(\Order failed: \"" + ex.getMessage()); }""","try { processOrder(); } catch(Exception ex) { logger.error(\Order processing error\"", ex); out.println(\""Order processing error\""); }"""
Java,Sensitive Data Exposure,"out.println(\Server Config: \"" + serverConfig.toString());""","logger.debug(\Server configuration accessed\""); out.println(\""Operation completed successfully\"");"""
Java,Sensitive Data Exposure,"catch(Exception ex) { out.println(\Failed for user: \"" + user.getUsername() + \"", password: \"" + password); }""","catch(Exception ex) { logger.error(\User login error\"", ex); out.println(\""Login failed\""); }"""
Java,Sensitive Data Exposure,"try { connectDB(); } catch(Exception ex) { out.println(\DB connection error: \"" + ex); }""","try { connectDB(); } catch(Exception ex) { logger.error(\Database connection error\"", ex); out.println(\""Database connection error\""); }"""
Java,Sensitive Data Exposure,"if(invalidToken) { out.println(\Invalid token: \"" + token); }""","if(invalidToken) { logger.warn(\Invalid token received\""); out.println(\""Token invalid\""); }"""
Java,Sensitive Data Exposure,"logger.info(\User details: \"" + user.toString());""","logger.info(\User accessed authentication process\"");"""
Java,Sensitive Data Exposure,"out.println(\Listening on port: \"" + serverPort);""","logger.debug(\Server port accessed\""); out.println(\""Operation successful\"");"""
Java,Sensitive Data Exposure,"out.println(\Debug info: \"" + debugData);""","logger.debug(\Debug data: \"" + debugData); out.println(\""Request processed successfully\"");"""
Java,Sensitive Data Exposure,"catch(IOException ex) { out.println(\File error: \"" + ex.getMessage()); }""","catch(IOException ex) { logger.error(\File error\"", ex); out.println(\""File processing error\""); }"""
Java,Sensitive Data Exposure,"out.println(\Session ID: \"" + session.getId());""","logger.debug(\Session ID accessed\""); out.println(\""Operation successful\"");"""
Java,Sensitive Data Exposure,catch(Exception ex) { logger.error(ex.toString()); },"catch(Exception ex) { logger.error(\Unexpected error\"", ex); }"""
Java,Sensitive Data Exposure,out.println(apiResponse.toString());,"out.println(\Operation successful\""); logger.debug(\""API response received\"");"""
Java,Sensitive Data Exposure,"return new ResponseEntity<>(debugInfo, HttpStatus.BAD_REQUEST);","logger.error(\Error processing request\"", debugInfo); return new ResponseEntity<>(\""Bad Request\"", HttpStatus.BAD_REQUEST);"""
Java,Sensitive Data Exposure,"logger.warn(\Key value: \"" + key);""","logger.warn(\A key was accessed\"");"""
Java,Sensitive Data Exposure,"return new ResponseEntity<>(ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);","logger.error(\Internal error\"", ex); return new ResponseEntity<>(\""Internal server error\"", HttpStatus.INTERNAL_SERVER_ERROR);"""
C#,Sensitive Data Exposure,try { ProcessData(); } catch(Exception ex) { Response.Write(ex.ToString()); },"try { ProcessData(); } catch(Exception ex) { logger.Error(ex, \Processing error\""); Response.Write(\""An error occurred. Please contact support.\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\Connection string: \"" + ConfigurationManager.ConnectionStrings[\""Default\""].ConnectionString);""","logger.Error(\Database connection error\""); Response.Write(\""Database error occurred\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Username: \"" + Request.Form[\""username\""] + \"", Password: \"" + Request.Form[\""password\""]);""","logger.Warn(\Credential attempt detected\""); Response.Write(\""Authentication failed\"");"""
C#,Sensitive Data Exposure,catch(Exception ex) { Response.Write(ex.StackTrace); },"catch(Exception ex) { logger.Error(ex, \Unhandled exception\""); Response.Write(\""Internal error\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\Server OS: \"" + Environment.OSVersion.ToString());""","logger.Debug(\OS info accessed\""); Response.Write(\""Operation successful\"");"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Error: \"" + ex.Message + \""; Data: \"" + Request.Form[\""data\""]); }""","catch(Exception ex) { logger.Error(ex, \Error processing data\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\Config Value: \"" + ConfigurationManager.AppSettings[\""ConfigKey\""]);""","logger.Debug(\Configuration key accessed\""); Response.Write(\""Operation completed\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Token: \"" + token);""","logger.Info(\Token accessed\""); Response.Write(\""Request successful\"");"""
C#,Sensitive Data Exposure,return Json(new { error = ex.Message });,"logger.Error(ex, \API error\""); return Json(new { error = \""Internal error\"" });"""
C#,Sensitive Data Exposure,"Response.Write(\File Path: \"" + filePath);""","logger.Debug(\File path accessed\""); Response.Write(\""Operation completed\"");"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Exception: \"" + ex.ToString()); }""","catch(Exception ex) { logger.Error(ex, \Unhandled exception\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\API Endpoint: \"" + ConfigurationManager.AppSettings[\""ApiEndpoint\""]);""","logger.Debug(\API endpoint accessed\""); Response.Write(\""Operation successful\"");"""
C#,Sensitive Data Exposure,Response.Write(JsonConvert.SerializeObject(user));,"var minimalUser = new { user.Id, user.Username };\nResponse.Write(JsonConvert.SerializeObject(minimalUser));"
C#,Sensitive Data Exposure,"Response.Write(\Debug Info: \"" + debugLog);""","logger.Debug(\Debug Log: \"" + debugLog); Response.Write(\""Request processed\"");"""
C#,Sensitive Data Exposure,"catch(SqlException ex) { Response.Write(\SQL Error: \"" + ex.Message); }""","catch(SqlException ex) { logger.Error(ex, \SQL error\""); Response.Write(\""Database error occurred\""); }"""
C#,Sensitive Data Exposure,return BadRequest(ex.ToString());,"logger.Error(ex, \Error in API\""); return BadRequest(\""Internal server error\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Session ID: \"" + Session.SessionID);""","logger.Debug(\Session accessed\""); Response.Write(\""Operation completed\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Error: \"" + ex.Message + \""; Data: \"" + Request.Form[\""data\""]);""","logger.Error(ex, \Processing error\""); Response.Write(\""An error occurred\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Config File: \"" + Server.MapPath(\""~/config/app.config\""));""","logger.Debug(\Config file accessed\""); Response.Write(\""Operation successful\"");"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Error: \"" + ex.InnerException.Message); }""","catch(Exception ex) { logger.Error(ex, \Error occurred\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,Response.Write(debugOutput);,"logger.Debug(\Debug output: \"" + debugOutput); Response.Write(\""Request processed\"");"""
C#,Sensitive Data Exposure,return NotFound(ex.Message);,"logger.Error(ex, \Not found error\""); return NotFound(\""Item not found\"");"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Exception details: \"" + ex.ToString()); }""","catch(Exception ex) { logger.Error(ex, \Unhandled exception\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,"if(!Authenticate(user, pass)) { Response.Write(\Authentication failed for user: \"" + user.Username); }""","if(!Authenticate(user, pass)) { logger.Warn(\Authentication failed\""); Response.Write(\""Authentication failed\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\Token Info: \"" + token);""","logger.Info(\Token accessed\""); Response.Write(\""Operation successful\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Internal Debug: \"" + internalDebug);""","logger.Debug(\Internal debug data: \"" + internalDebug); Response.Write(\""Operation completed\"");"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Server error: \"" + ex.Message + \"" at \"" + filePath); }""","catch(Exception ex) { logger.Error(ex, \Server error\""); Response.Write(\""Server error occurred\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\Invalid input: \"" + Request.Form[\""input\""]);""","Response.Write(\Invalid input: \"" + HttpUtility.HtmlEncode(Request.Form[\""input\""]));"""
C#,Sensitive Data Exposure,"Response.Write(\API Endpoint: \"" + ConfigurationManager.AppSettings[\""ApiEndpoint\""]);""","logger.Debug(\API endpoint accessed\""); Response.Write(\""Request completed\"");"""
C#,Sensitive Data Exposure,catch(Exception ex) { Response.Write(ex.ToString()); },"catch(Exception ex) { logger.Error(ex, \Unhandled exception\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,"return Json(new { error = ex.Message, debug = debugInfo });","logger.Error(ex, \Error processing request\""); return Json(new { error = \""Internal error\"" });"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Error: \"" + ex.Message); }""","catch(Exception ex) { logger.Error(ex, \Error occurred\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\.NET Version: \"" + Environment.Version);""","logger.Debug(\System version accessed\""); Response.Write(\""Operation successful\"");"""
C#,Sensitive Data Exposure,Response.Write(JsonConvert.SerializeObject(config));,"var publicConfig = new { config.AppMode, config.FeatureFlag };\nResponse.Write(JsonConvert.SerializeObject(publicConfig));"
C#,Sensitive Data Exposure,return BadRequest(ex.Message);,"logger.Error(ex, \API error\""); return BadRequest(\""Internal server error\"");"""
C#,Sensitive Data Exposure,"Response.Write(\Query: \"" + Request.QueryString[\""q\""]);""","Response.Write(\Query: \"" + HttpUtility.HtmlEncode(Request.QueryString[\""q\""]));"""
C#,Sensitive Data Exposure,catch(Exception ex) { Response.Write(ex.ToString()); },"catch(Exception ex) { logger.Error(ex, \Unhandled exception\""); Response.Write(\""An error occurred\""); }"""
C#,Sensitive Data Exposure,"if(!UserExists(userId)) { Response.Write(\User not found: \"" + user.Email); }""","if(!UserExists(userId)) { logger.Warn(\User not found\""); Response.Write(\""User not found\""); }"""
C#,Sensitive Data Exposure,"Response.Write(\File Path: \"" + filePath);""","logger.Debug(\File path accessed\""); Response.Write(\""Operation successful\"");"""
C#,Sensitive Data Exposure,"catch(Exception ex) { Response.Write(\Error details: \"" + ex.ToString()); }""","catch(Exception ex) { logger.Error(ex, \Unhandled error\""); Response.Write(\""An error occurred. Please contact support.\""); }"""
Java,Missing Authentication,"String userId = request.getParameter(\userId\"");\naccountService.viewProfile(userId);""","if(session.getAttribute(\user\"") != null) { String userId = ((User)session.getAttribute(\""user\"")).getId(); accountService.viewProfile(userId); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"String orderId = request.getParameter(\orderId\"");\norderService.getOrderDetails(orderId);""","if(session.getAttribute(\user\"") != null) { String orderId = request.getParameter(\""orderId\""); orderService.getOrderDetails(orderId); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"if(request.getParameter(\delete\"") != null) { userService.deleteUser(request.getParameter(\""userId\"")); }""","if(session.getAttribute(\user\"") != null) { userService.deleteUser(request.getParameter(\""userId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"paymentService.processPayment(request.getParameter(\paymentId\""));""","if(session.getAttribute(\user\"") != null) { paymentService.processPayment(request.getParameter(\""paymentId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"String file = request.getParameter(\file\"");\nFileInputStream fis = new FileInputStream(new File(\""/downloads/\"" + file));""","if(session.getAttribute(\user\"") != null) { String file = request.getParameter(\""file\""); FileInputStream fis = new FileInputStream(new File(\""/downloads/\"", file)); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"if(request.getParameter(\action\"").equals(\""adminDashboard\"")) { dashboardService.load(); }""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { dashboardService.load(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authentication,"configurationService.updateConfig(request.getParameter(\config\""));""","if(session.getAttribute(\user\"") != null) { configurationService.updateConfig(request.getParameter(\""config\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"userService.removeUser(request.getParameter(\id\""));""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { userService.removeUser(request.getParameter(\""id\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"transactionService.process(request.getParameter(\txnId\""));""","if(session.getAttribute(\user\"") != null) { transactionService.process(request.getParameter(\""txnId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"userService.updateProfile(request.getParameter(\profileData\""));""","if(session.getAttribute(\user\"") != null) { userService.updateProfile(request.getParameter(\""profileData\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"String userHistory = historyService.getUserHistory(request.getParameter(\userId\""));""","if(session.getAttribute(\user\"") != null) { String userHistory = historyService.getUserHistory(((User)session.getAttribute(\""user\"")).getId()); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"dataExportService.exportData(request.getParameter(\exportType\""));""","if(session.getAttribute(\user\"") != null) { dataExportService.exportData(request.getParameter(\""exportType\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,logService.viewLogs();,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { logService.viewLogs(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"fundService.transferFunds(request.getParameter(\fromAccount\""), request.getParameter(\""toAccount\""));""","if(session.getAttribute(\user\"") != null) { fundService.transferFunds(request.getParameter(\""fromAccount\""), request.getParameter(\""toAccount\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"purchaseService.buyProduct(request.getParameter(\productId\""));""","if(session.getAttribute(\user\"") != null) { purchaseService.buyProduct(request.getParameter(\""productId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"configService.update(request.getParameter(\configData\""));""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { configService.update(request.getParameter(\""configData\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,auditLogService.downloadLogs();,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAuditor()) { auditLogService.downloadLogs(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,apiService.getSensitiveData();,"if(session.getAttribute(\user\"") != null) { apiService.getSensitiveData(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"if(request.getParameter(\update\"") != null) { updateService.performUpdate(); }""","if(request.getMethod().equals(\POST\"") && session.getAttribute(\""user\"") != null) { updateService.performUpdate(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"financeService.getRecords(request.getParameter(\accountId\""));""","if(session.getAttribute(\user\"") != null) { financeService.getRecords(((User)session.getAttribute(\""user\"")).getAccountId()); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"healthService.getRecords(request.getParameter(\patientId\""));""","if(session.getAttribute(\user\"") != null) { healthService.getRecords(request.getParameter(\""patientId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,exportService.exportConfig();,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { exportService.exportConfig(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"if(request.getParameter(\restart\"") != null) { systemService.restart(); }""","if(request.getMethod().equals(\POST\"") && session.getAttribute(\""user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { systemService.restart(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"File file = new File(\/secret/data.txt\"");\nFileInputStream fis = new FileInputStream(file);""","if(session.getAttribute(\user\"") != null) { File file = new File(\""/secret/data.txt\""); FileInputStream fis = new FileInputStream(file); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,userService.logout();,"if(session.getAttribute(\user\"") != null) { userService.logout(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"userService.updateEmail(request.getParameter(\email\""));""","if(session.getAttribute(\user\"") != null) { userService.updateEmail(request.getParameter(\""email\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"orderService.cancelOrder(request.getParameter(\orderId\""));""","if(session.getAttribute(\user\"") != null) { orderService.cancelOrder(request.getParameter(\""orderId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"inventoryService.updateStock(request.getParameter(\stock\""));""","if(session.getAttribute(\user\"") != null) { inventoryService.updateStock(request.getParameter(\""stock\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"userService.changeUserRole(request.getParameter(\newRole\""));""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isSuperAdmin()) { userService.changeUserRole(request.getParameter(\""newRole\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"billingService.viewBill(request.getParameter(\billId\""));""","if(session.getAttribute(\user\"") != null) { billingService.viewBill(request.getParameter(\""billId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,auditService.getAuditLogs();,"if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAuditor()) { auditService.getAuditLogs(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"userService.resetPassword(request.getParameter(\userId\""));""","if(session.getAttribute(\user\"") != null) { userService.resetPassword(request.getParameter(\""userId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"reportService.exportFinancialReport(request.getParameter(\reportId\""));""","if(session.getAttribute(\user\"") != null) { reportService.exportFinancialReport(request.getParameter(\""reportId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,apiService.getSensitiveInfo();,"if(session.getAttribute(\user\"") != null) { apiService.getSensitiveInfo(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"systemService.updateSettings(request.getParameter(\settings\""));""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { systemService.updateSettings(request.getParameter(\""settings\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,businessService.processCriticalOperation();,"if(session.getAttribute(\user\"") != null) { businessService.processCriticalOperation(); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"subscriptionService.changeSubscription(request.getParameter(\subType\""));""","if(session.getAttribute(\user\"") != null) { subscriptionService.changeSubscription(request.getParameter(\""subType\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"reportService.generateReport(request.getParameter(\reportType\""));""","if(session.getAttribute(\user\"") != null) { reportService.generateReport(request.getParameter(\""reportType\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"configService.modifyConfig(request.getParameter(\configData\""));""","if(session.getAttribute(\user\"") != null && ((User)session.getAttribute(\""user\"")).isAdmin()) { configService.modifyConfig(request.getParameter(\""configData\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
Java,Missing Authentication,"activityService.viewActivity(request.getParameter(\activityId\""));""","if(session.getAttribute(\user\"") != null) { activityService.viewActivity(request.getParameter(\""activityId\"")); } else { response.sendError(HttpServletResponse.SC_UNAUTHORIZED); }"""
C#,Missing Authentication,"UserProfile profile = ProfileService.GetProfile(Request.QueryString[\userId\""]);\nResponse.Write(JsonConvert.SerializeObject(profile));""","if(Session[\user\""] != null) { UserProfile profile = ProfileService.GetProfile(((User)Session[\""user\""]).Id); Response.Write(JsonConvert.SerializeObject(profile)); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"Order order = OrderService.GetOrder(Request.QueryString[\orderId\""]);\nResponse.Write(order.ToString());""","if(Session[\user\""] != null) { Order order = OrderService.GetOrder(Request.QueryString[\""orderId\""]); Response.Write(order.ToString()); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"PaymentService.ProcessPayment(Request.Form[\paymentId\""]);""","if(Session[\user\""] != null) { PaymentService.ProcessPayment(Request.Form[\""paymentId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"UserService.DeleteUser(Request.QueryString[\userId\""]);""","if(Session[\user\""] != null) { UserService.DeleteUser(Request.QueryString[\""userId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"UserService.ResetPassword(Request.Form[\userId\""]);""","if(Session[\user\""] != null) { UserService.ResetPassword(Request.Form[\""userId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,AuditService.GetLogs();,"if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAuditor) { AuditService.GetLogs(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"string fileName = Request.QueryString[\file\""];\nResponse.WriteFile(Path.Combine(\""C:\\\\Confidential\\\\\"", fileName));""","if(Session[\user\""] != null) { string fileName = Request.QueryString[\""file\""]; Response.WriteFile(Path.Combine(\""C:\\\\Confidential\\\\\"", fileName)); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"ConfigurationManager.AppSettings[\SensitiveConfig\""];""","if(Session[\user\""] != null) { var config = ConfigurationManager.AppSettings[\""SensitiveConfig\""]; } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,AdminService.PerformAdminAction();,"if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { AdminService.PerformAdminAction(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"Response.Write(UserService.GetUserDetails(Request.QueryString[\id\""]));""","if(Session[\user\""] != null) { Response.Write(UserService.GetUserDetails(((User)Session[\""user\""]).Id)); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"FileUploadService.UploadFile(Request.Files[\file\""]);""","if(Session[\user\""] != null) { FileUploadService.UploadFile(Request.Files[\""file\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"ReportService.GenerateReport(Request.Form[\reportId\""]);""","if(Session[\user\""] != null) { ReportService.GenerateReport(Request.Form[\""reportId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"ConfigService.UpdateConfig(Request.Form[\configData\""]);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { ConfigService.UpdateConfig(Request.Form[\""configData\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"UserService.UpdateProfile(Request.Form[\profileData\""]);""","if(Session[\user\""] != null) { UserService.UpdateProfile(Request.Form[\""profileData\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"OrderService.CancelOrder(Request.QueryString[\orderId\""]);""","if(Session[\user\""] != null) { OrderService.CancelOrder(Request.QueryString[\""orderId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"FinanceService.GetFinancialDetails(Request.QueryString[\accountId\""]);""","if(Session[\user\""] != null) { FinanceService.GetFinancialDetails(Request.QueryString[\""accountId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"SubscriptionService.ChangeSubscription(Request.Form[\subType\""]);""","if(Session[\user\""] != null) { SubscriptionService.ChangeSubscription(Request.Form[\""subType\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"ActivityService.GetUserActivity(Request.QueryString[\id\""]);""","if(Session[\user\""] != null) { ActivityService.GetUserActivity(Request.QueryString[\""id\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"SystemService.UpdateSettings(Request.Form[\settings\""]);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { SystemService.UpdateSettings(Request.Form[\""settings\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"DiagnosticService.GetReport(Request.QueryString[\reportId\""]);""","if(Session[\user\""] != null) { DiagnosticService.GetReport(Request.QueryString[\""reportId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"AdminController.DeleteUser(Request.QueryString[\userId\""]);""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { AdminController.DeleteUser(Request.QueryString[\""userId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"TokenService.RefreshToken(Request.Form[\refreshToken\""]);""","if(Session[\user\""] != null) { TokenService.RefreshToken(Request.Form[\""refreshToken\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"UserService.ChangeEmail(Request.Form[\email\""]);""","if(Session[\user\""] != null) { UserService.ChangeEmail(Request.Form[\""email\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,var data = ApiService.GetSecureData();,"if(Session[\user\""] != null) { var data = ApiService.GetSecureData(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"TransactionService.ProcessTransaction(Request.Form[\txnId\""]);""","if(Session[\user\""] != null) { TransactionService.ProcessTransaction(Request.Form[\""txnId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"ReportService.ExportReport(Request.Form[\reportId\""]);""","if(Session[\user\""] != null) { ReportService.ExportReport(Request.Form[\""reportId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,AuditService.GetAuditData();,"if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAuditor) { AuditService.GetAuditData(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,BackupService.BackupData();,"if(Session[\user\""] != null) { BackupService.BackupData(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"SettingsService.UpdateSettings(Request.Form[\settings\""]);""","if(Session[\user\""] != null) { SettingsService.UpdateSettings(Request.Form[\""settings\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"CustomerService.GetCustomerData(Request.QueryString[\customerId\""]);""","if(Session[\user\""] != null) { CustomerService.GetCustomerData(Request.QueryString[\""customerId\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,DiagnosticController.RunDiagnostics();,"if(Session[\user\""] != null) { DiagnosticController.RunDiagnostics(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"File.Delete(Request.QueryString[\filePath\""]);""","if(Session[\user\""] != null) { File.Delete(Request.QueryString[\""filePath\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"ShippingService.UpdateAddress(Request.Form[\address\""]);""","if(Session[\user\""] != null) { ShippingService.UpdateAddress(Request.Form[\""address\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"UserService.RegisterUser(Request.Form[\userData\""]);""","UserService.RegisterUser(Request.Form[\userData\""]); // (Further sensitive operations require authentication)"""
C#,Missing Authentication,SupportService.GetSupportTickets();,"if(Session[\user\""] != null && ((User)Session[\""user\""]).IsSupportAgent) { SupportService.GetSupportTickets(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,BusinessService.ExecuteCriticalOperation();,"if(Session[\user\""] != null) { BusinessService.ExecuteCriticalOperation(); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"TokenService.RenewToken(Request.Form[\oldToken\""]);""","if(Session[\user\""] != null) { TokenService.RenewToken(Request.Form[\""oldToken\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"PreferenceService.UpdatePreferences(Request.Form[\prefs\""]);""","if(Session[\user\""] != null) { PreferenceService.UpdatePreferences(Request.Form[\""prefs\""]); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,"PaymentHistoryService.GetHistory(Request.QueryString[\userId\""]);""","if(Session[\user\""] != null) { PaymentHistoryService.GetHistory(((User)Session[\""user\""]).Id); } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authentication,AuthService.Logout();,"if(Session[\user\""] != null) { AuthService.Logout(); } else { throw new UnauthorizedAccessException(); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nString issuer = jwt.getIssuer();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nList<String> audience = jwt.getAudience();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withAudience(\""trustedAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getNotBefore() != null && jwt.getNotBefore().after(new Date())) { throw new SecurityException(\""Token not valid yet\""); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString role = jwt.getClaim(\role\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""role\"", \""user\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,try { DecodedJWT jwt = JWT.decode(token); } catch(Exception e) { },"try {\n    JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\n    DecodedJWT jwt = verifier.verify(token);\n} catch(Exception e) { throw new SecurityException(\""Invalid token\"", e); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nDate issued = jwt.getIssuedAt();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getIssuedAt() == null) { throw new SecurityException(\""Missing issued at claim\""); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(TokenRevocationService.isRevoked(token)) { throw new SecurityException(\""Token has been revoked\""); }"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString custom = jwt.getClaim(\custom\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""custom\"", \""expectedValue\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(!\""JWT\"".equals(jwt.getHeaderClaim(\""typ\"").asString())) { throw new SecurityException(\""Invalid token type\""); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getNotBefore() != null && jwt.getNotBefore().after(new Date())) { throw new SecurityException(\""Token not yet valid\""); }"""
Java,Insecure JWT Handling,try { DecodedJWT jwt = JWT.decode(token); } catch(Exception ex) { ex.printStackTrace(); },"try {\n    JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\n    DecodedJWT jwt = verifier.verify(token);\n} catch(Exception ex) { logger.error(\""Token verification failed\"", ex); throw new SecurityException(\""Invalid token\""); }"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString userType = jwt.getClaim(\userType\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""userType\"", \""standard\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nString subject = jwt.getSubject();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withSubject(\""expectedSubject\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString customClaim = jwt.getClaim(\role\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""role\"", \""user\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nString issuer = jwt.getIssuer();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);\nDate exp = jwt.getExpiresAt();,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString claim = jwt.getClaim(\custom\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""custom\"", \""expectedValue\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,try { DecodedJWT jwt = JWT.decode(token); } catch(Exception ex) { ex.printStackTrace(); },"try {\n    JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\n    DecodedJWT jwt = verifier.verify(token);\n} catch(Exception ex) { logger.error(\""JWT verification failed\"", ex); throw new SecurityException(\""Invalid token\""); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withAudience(\""trustedAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);\nif(jwt.getNotBefore() != null && jwt.getNotBefore().after(new Date())) { throw new SecurityException(\""Token not yet valid\""); }"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withIssuer(\""trustedIssuer\"")\n    .withAudience(\""trustedAudience\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .acceptExpiresAt(0)\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,"DecodedJWT jwt = JWT.decode(token);\nString custom = jwt.getClaim(\sensitive\"").asString();""","JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\"")))\n    .withClaim(\""sensitive\"", \""expectedValue\"")\n    .build();\nDecodedJWT jwt = verifier.verify(token);"""
Java,Insecure JWT Handling,DecodedJWT jwt = JWT.decode(token);,"JWTVerifier verifier = JWT.require(Algorithm.HMAC256(System.getenv(\JWT_SECRET\""))).build();\nDecodedJWT jwt = verifier.verify(token);"""
C#,Insecure JWT Handling,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring uid = jwtToken.Claims.First(c => c.Type == \uid\"").Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""])),\n    ValidateLifetime = true,\n    ValidateIssuer = true,\n    ValidIssuer = \""trustedIssuer\"",\n    ValidateAudience = true,\n    ValidAudience = \""trustedAudience\"",\n    ClockSkew = TimeSpan.Zero\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring uid = principal.FindFirst(\""uid\"")?.Value;"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);\nDateTime exp = jwtToken.ValidTo;,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nDateTime exp = ((JwtSecurityToken)validatedToken).ValidTo;"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);\nstring issuer = jwtToken.Issuer;,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuer = true,\n    ValidIssuer = \trustedIssuer\"",\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring issuer = ((JwtSecurityToken)validatedToken).Issuer;"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);\nIEnumerable<Claim> claims = jwtToken.Claims;,"var validationParameters = new TokenValidationParameters {\n    ValidateAudience = true,\n    ValidAudience = \trustedAudience\"",\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nIEnumerable<Claim> claims = principal.Claims;"""
C#,Insecure JWT Handling,var decodedToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Token validation failed\"", ex); }"""
C#,Insecure JWT Handling,var decodedToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nif(((JwtSecurityToken)validatedToken).ValidFrom > DateTime.UtcNow) { throw new SecurityTokenException(\""Token not yet valid\""); }"""
C#,Insecure JWT Handling,var claim = tokenHandler.ReadJwtToken(token).Claims.First().Value;,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nvar claim = principal.Claims.FirstOrDefault()?.Value;"""
C#,Insecure JWT Handling,"var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuer = true,\n    ValidIssuer = \trustedIssuer\"",\n    ValidateAudience = true,\n    ValidAudience = \""trustedAudience\"",\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var tokenPayload = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var decoded = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring role = jwtToken.Claims.First(c => c.Type == \role\"").Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring role = principal.FindFirst(\""role\"")?.Value;\nif(role != \""user\"") { throw new SecurityTokenException(\""Invalid role\""); }"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Token validation failed\"", ex); }"""
C#,Insecure JWT Handling,"var tokenObj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var tokenObj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuer = true,\n    ValidIssuer = \trustedIssuer\"",\n    ValidateAudience = true,\n    ValidAudience = \""trustedAudience\"",\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Malformed token\"", ex); }"""
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    RequireSignedTokens = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var decodedToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring id = jwtToken.Claims.First(c => c.Type == \userId\"").Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring id = principal.FindFirst(\""userId\"")?.Value;\nif(string.IsNullOrEmpty(id)) { throw new SecurityTokenException(\""Missing userId\""); }"""
C#,Insecure JWT Handling,var token = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nif(((JwtSecurityToken)validatedToken).Header.Alg != SecurityAlgorithms.HmacSha256) { throw new SecurityTokenException(\""Invalid token algorithm\""); }"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);\nDateTime exp = jwtToken.ValidTo;,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nDateTime exp = ((JwtSecurityToken)validatedToken).ValidTo;"""
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Token verification failed\"", ex); }"""
C#,Insecure JWT Handling,var decodedToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,"var jwtToken = tokenHandler.ReadJwtToken(token);\nstring role = jwtToken.Claims.First(c => c.Type == \role\"").Value;""","var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nstring role = principal.FindFirst(\""role\"")?.Value;\nif(role != \""user\"") { throw new SecurityTokenException(\""Invalid role\""); }"""
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,BinaryFormatter formatter = new BinaryFormatter();\nobject obj = formatter.Deserialize(fs);,BinaryFormatter formatter = new BinaryFormatter();\nformatter.Binder = new SafeSerializationBinder();\nobject obj = formatter.Deserialize(fs);
C#,Insecure JWT Handling,"var tokenObj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var tokenObj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nif(principal.FindFirst(\""userId\"") == null) { throw new SecurityTokenException(\""Missing userId claim\""); }"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var decodedToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Token invalid\"", ex); }"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);\nDateTime exp = jwtToken.ValidTo;,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ClockSkew = TimeSpan.Zero,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\nDateTime exp = ((JwtSecurityToken)validatedToken).ValidTo;"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuer = true,\n    ValidIssuer = \trustedIssuer\"",\n    ValidateAudience = true,\n    ValidAudience = \""trustedAudience\"",\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,"var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Auto });","var obj = JsonConvert.DeserializeObject(token, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.None });"
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    RequireSignedTokens = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var tokenObj = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateIssuer = true,\n    ValidIssuer = \trustedIssuer\"",\n    ValidateAudience = true,\n    ValidAudience = \""trustedAudience\"",\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var decodedToken = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    ValidateLifetime = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var jwt = tokenHandler.ReadJwtToken(token);,"var validationParameters = new TokenValidationParameters {\n    RequireSignedTokens = true,\n    ValidateIssuerSigningKey = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n};\nSecurityToken validatedToken;\nvar principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);"""
C#,Insecure JWT Handling,var jwtToken = tokenHandler.ReadJwtToken(token);,"try {\n    var validationParameters = new TokenValidationParameters {\n        ValidateLifetime = true,\n        ValidateIssuerSigningKey = true,\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\JWT_SECRET\""]))\n    };\n    SecurityToken validatedToken;\n    var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);\n} catch(Exception ex) { throw new SecurityTokenException(\""Invalid token\"", ex); }"""
C#,Insecure JWT Handling,"string jwtKey = \fixedKey\"";""","string jwtKey = Environment.GetEnvironmentVariable(\JWT_SECRET\"");"""
Java,Null Pointer Dereference,String s = null;\nint len = s.length();,String s = getDefaultString();\nif(s != null) { int len = s.length(); } else { /* handle null */ }
Java,Null Pointer Dereference,Object obj = null;\nSystem.out.println(obj.toString());,Object obj = getObject();\nif(obj != null) { System.out.println(obj.toString()); } else { /* handle null */ }
Java,Null Pointer Dereference,User user = null;\nString name = user.getName();,User user = getUser();\nif(user != null) { String name = user.getName(); } else { /* handle null */ }
Java,Null Pointer Dereference,List<String> list = null;\nint size = list.size();,List<String> list = getList();\nif(list != null) { int size = list.size(); } else { /* handle null */ }
Java,Null Pointer Dereference,"Map<String, Integer> map = null;\nInteger value = map.get(\key\"");""","Map<String, Integer> map = getMap();\nif(map != null) { Integer value = map.get(\key\""); } else { /* handle null */ }"""
Java,Null Pointer Dereference,String[] arr = null;\nString first = arr[0];,String[] arr = getStringArray();\nif(arr != null && arr.length > 0) { String first = arr[0]; } else { /* handle null/empty */ }
Java,Null Pointer Dereference,Object data = null;\nprocessData(data.toString());,Object data = getData();\nif(data != null) { processData(data.toString()); } else { /* handle null */ }
Java,Null Pointer Dereference,Integer num = null;\nint value = num.intValue();,Integer num = getNumber();\nif(num != null) { int value = num.intValue(); } else { /* handle null */ }
Java,Null Pointer Dereference,File file = null;\nlong length = file.length();,File file = getFile();\nif(file != null) { long length = file.length(); } else { /* handle null */ }
Java,Null Pointer Dereference,CustomObject obj = null;\nobj.doAction();,CustomObject obj = getCustomObject();\nif(obj != null) { obj.doAction(); } else { /* handle null */ }
Java,Null Pointer Dereference,"String s = request.getParameter(\input\"");\nif(s.equals(\""expected\"")) { process(); }""","String s = request.getParameter(\input\"");\nif(s != null && s.equals(\""expected\"")) { process(); } else { /* handle null or invalid input */ }"""
Java,Null Pointer Dereference,int len = getString().trim().length();,String temp = getString();\nif(temp != null) { int len = temp.trim().length(); } else { /* handle null */ }
Java,Null Pointer Dereference,Config config = getConfig();\nString value = config.getValue();,Config config = getConfig();\nif(config != null) { String value = config.getValue(); } else { /* handle null */ }
Java,Null Pointer Dereference,User user = getUserFromDatabase(id);\nString email = user.getEmail();,User user = getUserFromDatabase(id);\nif(user != null) { String email = user.getEmail(); } else { /* handle user not found */ }
Java,Null Pointer Dereference,Object[] arr = getArray();\nfor(Object o : arr) {\n    System.out.println(o.toString());\n},Object[] arr = getArray();\nif(arr != null) { for(Object o : arr) { if(o != null) { System.out.println(o.toString()); } } } else { /* handle null */ }
Java,Null Pointer Dereference,List<User> users = getUsers();\nUser first = users.get(0);,List<User> users = getUsers();\nif(users != null && !users.isEmpty()) { User first = users.get(0); } else { /* handle null or empty list */ }
Java,Null Pointer Dereference,"Map<String, String> map = getMapData();\nString data = map.get(\key\"").toUpperCase();""","Map<String, String> map = getMapData();\nif(map != null && map.get(\key\"") != null) { String data = map.get(\""key\"").toUpperCase(); } else { /* handle null */ }"""
Java,Null Pointer Dereference,String result = process(null).toString();,Object res = process(null);\nif(res != null) { String result = res.toString(); } else { /* handle null */ }
Java,Null Pointer Dereference,BufferedReader br = new BufferedReader(new FileReader(null));,String fileName = getFileName();\nif(fileName != null) { BufferedReader br = new BufferedReader(new FileReader(fileName)); } else { /* handle null */ }
Java,Null Pointer Dereference,String config = loadConfig().toString();,Object config = loadConfig();\nif(config != null) { String c = config.toString(); } else { /* handle null */ }
Java,Null Pointer Dereference,Database db = getDatabase();\ndb.connect().close();,Database db = getDatabase();\nif(db != null && db.connect() != null) { db.connect().close(); } else { /* handle null */ }
Java,Null Pointer Dereference,List<String> items = getItemList();\nString first = items.get(0);,List<String> items = getItemList();\nif(items != null && !items.isEmpty()) { String first = items.get(0); } else { /* handle null or empty list */ }
Java,Null Pointer Dereference,String s = getNullableString();\nSystem.out.println(s.toLowerCase());,String s = getNullableString();\nif(s != null) { System.out.println(s.toLowerCase()); } else { /* handle null */ }
Java,Null Pointer Dereference,Integer num = getNullableInteger();\nint doubleNum = num * 2;,Integer num = getNullableInteger();\nif(num != null) { int doubleNum = num * 2; } else { /* handle null */ }
Java,Null Pointer Dereference,Person person = getPerson();\nString name = person.getName();,Person person = getPerson();\nif(person != null) { String name = person.getName(); } else { /* handle null */ }
Java,Null Pointer Dereference,InputStream is = getInputStream();\nis.read();,InputStream is = getInputStream();\nif(is != null) { is.read(); } else { /* handle null */ }
Java,Null Pointer Dereference,File file = new File(null);\nlong size = file.length();,String filePath = getFilePath();\nif(filePath != null) { File file = new File(filePath);\n long size = file.length(); } else { /* handle null */ }
Java,Null Pointer Dereference,Object obj = getDynamicObject();\nobj.hashCode();,Object obj = getDynamicObject();\nif(obj != null) { obj.hashCode(); } else { /* handle null */ }
Java,Null Pointer Dereference,"String config = System.getProperty(\config\"").toString();""","String config = System.getProperty(\config\"");\nif(config != null) { config.toString(); } else { /* handle null */ }"""
Java,Null Pointer Dereference,Data data = fetchData();\nprocessData(data.getContent());,Data data = fetchData();\nif(data != null && data.getContent() != null) { processData(data.getContent()); } else { /* handle null */ }
Java,Null Pointer Dereference,"Map<String, Object> m = getMap();\nm.get(\key\"").toString();""","Map<String, Object> m = getMap();\nif(m != null && m.get(\key\"") != null) { m.get(\""key\"").toString(); } else { /* handle null */ }"""
Java,Null Pointer Dereference,"String input = request.getParameter(\input\"");\nSystem.out.println(input.substring(1));""","String input = request.getParameter(\input\"");\nif(input != null && input.length() > 1) { System.out.println(input.substring(1)); } else { /* handle null or short string */ }"""
Java,Null Pointer Dereference,Object result = computeResult();\nSystem.out.println(result.toString());,Object result = computeResult();\nif(result != null) { System.out.println(result.toString()); } else { /* handle null */ }
Java,Null Pointer Dereference,List<User> users = getUsersFromDb();\nfor(User u : users) { System.out.println(u.getId()); },List<User> users = getUsersFromDb();\nif(users != null) { for(User u : users) { if(u != null) { System.out.println(u.getId()); } } } else { /* handle null */ }
Java,Null Pointer Dereference,"Configuration config = loadConfiguration();\nString value = config.getProperty(\key\"");""","Configuration config = loadConfiguration();\nif(config != null) { String value = config.getProperty(\key\""); } else { /* handle null */ }"""
Java,Null Pointer Dereference,UserDetail detail = getUserDetail();\nSystem.out.println(detail.getAddress());,UserDetail detail = getUserDetail();\nif(detail != null) { System.out.println(detail.getAddress()); } else { /* handle null */ }
Java,Null Pointer Dereference,"String value = System.getenv(\CONFIG\"").toLowerCase();""","String env = System.getenv(\CONFIG\"");\nif(env != null) { String value = env.toLowerCase(); } else { /* handle null */ }"""
Java,Null Pointer Dereference,List<String> list = getListFromService();\nString first = list.get(0);,List<String> list = getListFromService();\nif(list != null && !list.isEmpty()) { String first = list.get(0); } else { /* handle null or empty */ }
Java,Null Pointer Dereference,CustomData data = retrieveData();\nSystem.out.println(data.process());,CustomData data = retrieveData();\nif(data != null) { System.out.println(data.process()); } else { /* handle null */ }
Java,Null Pointer Dereference,"String filename = request.getParameter(\file\"");\nFile f = new File(filename);\nlong size = f.length();""","String filename = request.getParameter(\file\"");\nif(filename != null) { File f = new File(filename);\n long size = f.length(); } else { /* handle null */ }"""
C#,Null Pointer Dereference,string s = null;\nint length = s.Length;,string s = GetDefaultString();\nif(s != null) { int length = s.Length; } else { /* handle null */ }
C#,Null Pointer Dereference,object obj = null;\nConsole.WriteLine(obj.ToString());,object obj = GetObject();\nif(obj != null) { Console.WriteLine(obj.ToString()); } else { /* handle null */ }
C#,Null Pointer Dereference,User user = null;\nConsole.WriteLine(user.Name);,User user = GetUser();\nif(user != null) { Console.WriteLine(user.Name); } else { /* handle null */ }
C#,Null Pointer Dereference,List<string> list = null;\nint count = list.Count;,List<string> list = GetStringList();\nif(list != null) { int count = list.Count; } else { /* handle null */ }
C#,Null Pointer Dereference,"Dictionary<string, int> map = null;\nint value = map[\key\""];""","Dictionary<string, int> map = GetDictionary();\nif(map != null && map.ContainsKey(\key\"")) { int value = map[\""key\""]; } else { /* handle null */ }"""
C#,Null Pointer Dereference,string[] arr = null;\nstring first = arr[0];,string[] arr = GetStringArray();\nif(arr != null && arr.Length > 0) { string first = arr[0]; } else { /* handle null or empty */ }
C#,Null Pointer Dereference,object data = null;\nConsole.WriteLine(data.ToString());,object data = GetData();\nif(data != null) { Console.WriteLine(data.ToString()); } else { /* handle null */ }
C#,Null Pointer Dereference,int? number = null;\nint result = number.Value * 2;,int? number = GetNullableInt();\nif(number.HasValue) { int result = number.Value * 2; } else { /* handle null */ }
C#,Null Pointer Dereference,FileInfo file = new FileInfo(null);\nlong len = file.Length;,string path = GetFilePath();\nif(path != null) { FileInfo file = new FileInfo(path);\n long len = file.Length; } else { /* handle null */ }
C#,Null Pointer Dereference,CustomObject obj = null;\nobj.PerformAction();,CustomObject obj = GetCustomObject();\nif(obj != null) { obj.PerformAction(); } else { /* handle null */ }
C#,Null Pointer Dereference,"string input = Request.QueryString[\input\""]; \nConsole.WriteLine(input.ToLower());""","string input = Request.QueryString[\input\""]; \nif(input != null) { Console.WriteLine(input.ToLower()); } else { /* handle null */ }"""
C#,Null Pointer Dereference,object[] arr = GetArray();\nforeach(var o in arr) { Console.WriteLine(o.ToString()); },object[] arr = GetArray();\nif(arr != null) { foreach(var o in arr) { if(o != null) { Console.WriteLine(o.ToString()); } } } else { /* handle null */ }
C#,Null Pointer Dereference,UserDetail detail = GetUserDetail();\nConsole.WriteLine(detail.Address);,UserDetail detail = GetUserDetail();\nif(detail != null) { Console.WriteLine(detail.Address); } else { /* handle null */ }
C#,Null Pointer Dereference,"string config = Environment.GetEnvironmentVariable(\CONFIG\"").ToString();""","string config = Environment.GetEnvironmentVariable(\CONFIG\"");\nif(config != null) { config.ToString(); } else { /* handle null */ }"""
C#,Null Pointer Dereference,var data = FetchData();\nConsole.WriteLine(data.Process());,var data = FetchData();\nif(data != null) { Console.WriteLine(data.Process()); } else { /* handle null */ }
C#,Null Pointer Dereference,List<User> users = GetUsers();\nUser firstUser = users[0];,List<User> users = GetUsers();\nif(users != null && users.Count > 0) { User firstUser = users[0]; } else { /* handle null or empty */ }
C#,Null Pointer Dereference,"Dictionary<string, string> dict = GetDictionary();\nstring value = dict[\key\""].ToUpper();""","Dictionary<string, string> dict = GetDictionary();\nif(dict != null && dict.ContainsKey(\key\"") && dict[\""key\""] != null) { string value = dict[\""key\""].ToUpper(); } else { /* handle null */ }"""
C#,Null Pointer Dereference,object result = ComputeResult();\nConsole.WriteLine(result.ToString());,object result = ComputeResult();\nif(result != null) { Console.WriteLine(result.ToString()); } else { /* handle null */ }
C#,Null Pointer Dereference,int length = GetString().Trim().Length;,string s = GetString();\nif(s != null) { int length = s.Trim().Length; } else { /* handle null */ }
C#,Null Pointer Dereference,Data data = FetchData();\nProcessData(data.Content);,Data data = FetchData();\nif(data != null && data.Content != null) { ProcessData(data.Content); } else { /* handle null */ }
C#,Null Pointer Dereference,"string input = Request.Form[\input\""];\nConsole.WriteLine(input.Substring(1));""","string input = Request.Form[\input\""];\nif(!string.IsNullOrEmpty(input) && input.Length > 1) { Console.WriteLine(input.Substring(1)); } else { /* handle null or short string */ }"""
C#,Null Pointer Dereference,var obj = GetDynamicObject();\nConsole.WriteLine(obj.ToString());,var obj = GetDynamicObject();\nif(obj != null) { Console.WriteLine(obj.ToString()); } else { /* handle null */ }
C#,Null Pointer Dereference,"string config = ConfigurationManager.AppSettings[\config\""].ToString();""","string config = ConfigurationManager.AppSettings[\config\""];\nif(config != null) { config.ToString(); } else { /* handle null */ }"""
C#,Null Pointer Dereference,int? num = null;\nint doubled = num.Value * 2;,int? num = GetNullableNumber();\nif(num.HasValue) { int doubled = num.Value * 2; } else { /* handle null */ }
C#,Null Pointer Dereference,FileInfo file = new FileInfo(null);\nlong size = file.Length;,string path = GetFilePath();\nif(path != null) { FileInfo file = new FileInfo(path);\n long size = file.Length; } else { /* handle null */ }
C#,Null Pointer Dereference,object dynamicObj = null;\nConsole.WriteLine(dynamicObj.GetType());,object dynamicObj = GetDynamicObject();\nif(dynamicObj != null) { Console.WriteLine(dynamicObj.GetType()); } else { /* handle null */ }
C#,Null Pointer Dereference,CustomData data = RetrieveData();\nConsole.WriteLine(data.Process());,CustomData data = RetrieveData();\nif(data != null) { Console.WriteLine(data.Process()); } else { /* handle null */ }
C#,Null Pointer Dereference,"string s = Environment.GetEnvironmentVariable(\MY_VAR\"").ToString();""","string s = Environment.GetEnvironmentVariable(\MY_VAR\"");\nif(s != null) { s.ToString(); } else { /* handle null */ }"""
C#,Null Pointer Dereference,List<int> numbers = GetNumbers();\nint first = numbers[0];,List<int> numbers = GetNumbers();\nif(numbers != null && numbers.Count > 0) { int first = numbers[0]; } else { /* handle null or empty */ }
C#,Null Pointer Dereference,string result = ComputeResult()?.ToString();,object result = ComputeResult();\nif(result != null) { result.ToString(); } else { /* handle null */ }
C#,Null Pointer Dereference,var list = GetList();\nConsole.WriteLine(list[0]);,var list = GetList();\nif(list != null && list.Count > 0) { Console.WriteLine(list[0]); } else { /* handle null or empty */ }
C#,Null Pointer Dereference,"Configuration config = LoadConfig();\nConsole.WriteLine(config.GetValue(\key\""));""","Configuration config = LoadConfig();\nif(config != null) { Console.WriteLine(config.GetValue(\key\"")); } else { /* handle null */ }"""
C#,Null Pointer Dereference,string[] items = GetItems();\nConsole.WriteLine(items[0].ToUpper());,string[] items = GetItems();\nif(items != null && items.Length > 0 && items[0] != null) { Console.WriteLine(items[0].ToUpper()); } else { /* handle null or empty */ }
C#,Null Pointer Dereference,object obj = FetchObject();\nConsole.WriteLine(obj.ToString());,object obj = FetchObject();\nif(obj != null) { Console.WriteLine(obj.ToString()); } else { /* handle null */ }
C#,Null Pointer Dereference,"string input = Request.QueryString[\input\""];\nConsole.WriteLine(input.Substring(0, 3));""","string input = Request.QueryString[\input\""];\nif(!string.IsNullOrEmpty(input) && input.Length >= 3) { Console.WriteLine(input.Substring(0, 3)); } else { /* handle null or too short */ }"""
C#,Null Pointer Dereference,"var config = ConfigurationManager.AppSettings[\MyConfig\""].ToString();""","var config = ConfigurationManager.AppSettings[\MyConfig\""];\nif(config != null) { config.ToString(); } else { /* handle null */ }"""
C#,Null Pointer Dereference,User user = GetUserFromDb();\nConsole.WriteLine(user.ProfilePicture);,User user = GetUserFromDb();\nif(user != null) { Console.WriteLine(user.ProfilePicture); } else { /* handle null */ }
C#,Null Pointer Dereference,object result = ExecuteOperation();\nConsole.WriteLine(result.GetHashCode());,object result = ExecuteOperation();\nif(result != null) { Console.WriteLine(result.GetHashCode()); } else { /* handle null */ }
C#,Null Pointer Dereference,"string filePath = Request.QueryString[\filePath\""];\nFileInfo file = new FileInfo(filePath);\nlong size = file.Length;""","string filePath = Request.QueryString[\filePath\""];\nif(!string.IsNullOrEmpty(filePath)) {\n    FileInfo file = new FileInfo(filePath);\n    long size = file.Length;\n} else { /* handle null */ }"""
C#,Null Pointer Dereference,var output = ProcessData(null);\nConsole.WriteLine(output.ToString());,var output = ProcessData(null);\nif(output != null) { Console.WriteLine(output.ToString()); } else { /* handle null */ }
Java,Unvalidated Redirects,String url = request.getParameter('redirect'); response.sendRedirect(url);,String url = request.getParameter('redirect'); if(url.startsWith('https://www.safe.com/')) { response.sendRedirect(url); } else { response.sendRedirect('/error'); }  // Sample 1
C#,Unvalidated Redirects,"string url = Request.QueryString[""redirect""]; Response.Redirect(url);","string url = Request.QueryString[""redirect""]; if(url.StartsWith(""https://www.safe.com/"")) { Response.Redirect(url); } else { Response.Redirect(""/error""); }  // Sample 25"
,,,
,,,
Java,Integer Overflow,int result = a + b; // Sample 1,"int result = Math.addExact(a, b); // Sample 1"
Java,Integer Overflow,int result = a - b; // Sample 2,"int result = Math.subtractExact(a, b); // Sample 2"
Java,Integer Overflow,int product = a * b; // Sample 3,"int product = Math.multiplyExact(a, b); // Sample 3"
Java,Integer Overflow,int sum = a + b; // Sample 4,"int sum = Math.addExact(a, b); // Sample 4"
Java,Integer Overflow,int diff = a - b; // Sample 5,"int diff = Math.subtractExact(a, b); // Sample 5"
Java,Integer Overflow,int mul = a * b; // Sample 6,"int mul = Math.multiplyExact(a, b); // Sample 6"
Java,Integer Overflow,int total = a + b + c; // Sample 7,"int total = Math.addExact(Math.addExact(a, b), c); // Sample 7"
Java,Integer Overflow,int x = a * b + c; // Sample 8,"int x = Math.addExact(Math.multiplyExact(a, b), c); // Sample 8"
Java,Integer Overflow,int x = a - b - c; // Sample 9,"int x = Math.subtractExact(Math.subtractExact(a, b), c); // Sample 9"
Java,Integer Overflow,int x = a + b; // Sample 10,"int x = Math.addExact(a, b); // Sample 10"
Java,Integer Overflow,int total = a + b + c + d; // Sample 11,"int total = Math.addExact(Math.addExact(Math.addExact(a, b), c), d); // Sample 11"
Java,Integer Overflow,int scaled = a * constant; // Sample 12,"int scaled = Math.multiplyExact(a, constant); // Sample 12"
Java,Integer Overflow,int x = a + b; // Sample 13,"int x = Math.addExact(a, b); // Sample 13"
Java,Integer Overflow,int result = a + b; // Sample 14,"int result = Math.addExact(a, b); // Sample 14"
Java,Integer Overflow,int sub = a - b; // Sample 15,"int sub = Math.subtractExact(a, b); // Sample 15"
Java,Integer Overflow,int prod = a * b; // Sample 16,"int prod = Math.multiplyExact(a, b); // Sample 16"
Java,Integer Overflow,int combined = (a + b) * c; // Sample 17,"int combined = Math.multiplyExact(Math.addExact(a, b), c); // Sample 17"
Java,Integer Overflow,int x = a + 1; // Sample 18,"int x = Math.addExact(a, 1); // Sample 18"
Java,Integer Overflow,int x = a * 2; // Sample 19,"int x = Math.multiplyExact(a, 2); // Sample 19"
Java,Integer Overflow,int diff = a - 1; // Sample 20,"int diff = Math.subtractExact(a, 1); // Sample 20"
Java,Integer Overflow,int x = (a + b) - c; // Sample 21,"int x = Math.subtractExact(Math.addExact(a, b), c); // Sample 21"
Java,Integer Overflow,int prod = a * (b + c); // Sample 22,"int prod = Math.multiplyExact(a, Math.addExact(b, c)); // Sample 22"
Java,Integer Overflow,int sum = a + b; // Sample 23,"int sum = Math.addExact(a, b); // Sample 23"
Java,Integer Overflow,int diff = a - b; // Sample 24,"int diff = Math.subtractExact(a, b); // Sample 24"
Java,Integer Overflow,int total = a * b; // Sample 25,"int total = Math.multiplyExact(a, b); // Sample 25"
C#,Integer Overflow,int result = a - b; // Sample 2,int result = checked(a - b); // Sample 2
C#,Integer Overflow,int product = a * b; // Sample 3,int product = checked(a * b); // Sample 3
C#,Integer Overflow,int sum = a + b; // Sample 4,int sum = checked(a + b); // Sample 4
C#,Integer Overflow,int diff = a - b; // Sample 5,int diff = checked(a - b); // Sample 5
C#,Integer Overflow,int mul = a * b; // Sample 6,int mul = checked(a * b); // Sample 6
C#,Integer Overflow,int total = a + b + c; // Sample 7,int total = checked(a + b + c); // Sample 7
C#,Integer Overflow,int x = a * b + c; // Sample 8,int x = checked(a * b + c); // Sample 8
C#,Integer Overflow,int x = a - b - c; // Sample 9,int x = checked(a - b - c); // Sample 9
C#,Integer Overflow,int x = a + b; // Sample 10,int x = checked(a + b); // Sample 10
C#,Integer Overflow,int total = a + b + c + d; // Sample 11,int total = checked(a + b + c + d); // Sample 11
C#,Integer Overflow,int scaled = a * constant; // Sample 12,int scaled = checked(a * constant); // Sample 12
C#,Integer Overflow,int x = a + b; // Sample 13,int x = checked(a + b); // Sample 13
C#,Integer Overflow,int result = a + b; // Sample 14,int result = checked(a + b); // Sample 14
C#,Integer Overflow,int sub = a - b; // Sample 15,int sub = checked(a - b); // Sample 15
C#,Integer Overflow,int prod = a * b; // Sample 16,int prod = checked(a * b); // Sample 16
C#,Integer Overflow,int combined = (a + b) * c; // Sample 17,int combined = checked((a + b) * c); // Sample 17
C#,Integer Overflow,int x = a + 1; // Sample 18,int x = checked(a + 1); // Sample 18
C#,Integer Overflow,int x = a * 2; // Sample 19,int x = checked(a * 2); // Sample 19
C#,Integer Overflow,int diff = a - 1; // Sample 20,int diff = checked(a - 1); // Sample 20
C#,Integer Overflow,int x = (a + b) - c; // Sample 21,int x = checked(a + b - c); // Sample 21
C#,Integer Overflow,int prod = a * (b + c); // Sample 22,int prod = checked(a * (b + c)); // Sample 22
C#,Integer Overflow,int sum = a + b; // Sample 23,int sum = checked(a + b); // Sample 23
C#,Integer Overflow,int diff = a - b; // Sample 24,int diff = checked(a - b); // Sample 24
C#,Integer Overflow,int total = a * b; // Sample 25,int total = checked(a * b); // Sample 25
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 1,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 1
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 2,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 2
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 3,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 3
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 4,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 4
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 5,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 5
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 6,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 6
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 7,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 7
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 8,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 8
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 9,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 9
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 10,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 10
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 11,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 11
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 12,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 12
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 13,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 13
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 14,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 14
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 15,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 15
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 16,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 16
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 17,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 17
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 18,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 18
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 19,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 19
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 20,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 20
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 21,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 21
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 22,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 22
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 23,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 23
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 24,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 24
Java,Race Condition,public void deposit(int amount) { balance = balance + amount; } // Sample 25,public synchronized void deposit(int amount) { balance = balance + amount; } // Sample 25
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 1,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 1
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 2,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 2
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 3,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 3
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 4,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 4
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 5,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 5
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 6,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 6
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 7,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 7
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 8,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 8
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 9,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 9
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 10,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 10
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 11,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 11
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 12,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 12
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 13,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 13
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 14,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 14
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 15,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 15
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 16,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 16
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 17,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 17
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 18,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 18
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 19,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 19
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 20,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 20
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 21,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 21
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 22,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 22
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 23,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 23
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 24,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 24
C#,Race Condition,public void Deposit(int amount) { balance += amount; } // Sample 25,public void Deposit(int amount) { lock(this) { balance += amount; } } // Sample 25
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] hash = md.digest(data.getBytes()); // Sample 1""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] hash = md.digest(data.getBytes()); // Sample 1"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] hash = md.digest(input.getBytes()); // Sample 2""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] hash = md.digest(input.getBytes()); // Sample 2"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] digest = md.digest(message.getBytes()); // Sample 3""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] digest = md.digest(message.getBytes()); // Sample 3"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] result = md.digest(text.getBytes()); // Sample 4""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] result = md.digest(text.getBytes()); // Sample 4"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] out = md.digest(str.getBytes()); // Sample 5""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] out = md.digest(str.getBytes()); // Sample 5"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] hb = md.digest(dataBytes); // Sample 6""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] hb = md.digest(dataBytes); // Sample 6"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] chk = md.digest(value.getBytes()); // Sample 7""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] chk = md.digest(value.getBytes()); // Sample 7"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] sum = md.digest(inputString.getBytes()); // Sample 8""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] sum = md.digest(inputString.getBytes()); // Sample 8"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] outHash = md.digest(sample.getBytes()); // Sample 9""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] outHash = md.digest(sample.getBytes()); // Sample 9"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] h = md.digest(content.getBytes()); // Sample 10""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] h = md.digest(content.getBytes()); // Sample 10"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] ret = md.digest(inputData.getBytes()); // Sample 11""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] ret = md.digest(inputData.getBytes()); // Sample 11"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] res = md.digest(info.getBytes()); // Sample 12""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] res = md.digest(info.getBytes()); // Sample 12"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] signature = md.digest(param.getBytes()); // Sample 13""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] signature = md.digest(param.getBytes()); // Sample 13"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] code = md.digest(token.getBytes()); // Sample 14""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] code = md.digest(token.getBytes()); // Sample 14"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] hashVal = md.digest(inputVal.getBytes()); // Sample 15""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] hashVal = md.digest(inputVal.getBytes()); // Sample 15"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] secureHash = md.digest(myData.getBytes()); // Sample 16""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] secureHash = md.digest(myData.getBytes()); // Sample 16"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] resultHash = md.digest(infoString.getBytes()); // Sample 17""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] resultHash = md.digest(infoString.getBytes()); // Sample 17"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] digestVal = md.digest(dataString.getBytes()); // Sample 18""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] digestVal = md.digest(dataString.getBytes()); // Sample 18"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] encrypted = md.digest(messageBytes); // Sample 19""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] encrypted = md.digest(messageBytes); // Sample 19"""
Java,Weak Cryptography,"MessageDigest md = MessageDigest.getInstance(\MD5\""); byte[] outDigest = md.digest(rawData.getBytes()); // Sample 20""","MessageDigest md = MessageDigest.getInstance(\SHA-256\""); byte[] outDigest = md.digest(rawData.getBytes()); // Sample 20"""
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] hash = md5.ComputeHash(Encoding.UTF8.GetBytes(data)); // Sample 1,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] hash = sha.ComputeHash(Encoding.UTF8.GetBytes(data)); // Sample 1
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] result = md5.ComputeHash(Encoding.UTF8.GetBytes(input)); // Sample 2,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] result = sha.ComputeHash(Encoding.UTF8.GetBytes(input)); // Sample 2
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] digest = md5.ComputeHash(Encoding.UTF8.GetBytes(text)); // Sample 3,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] digest = sha.ComputeHash(Encoding.UTF8.GetBytes(text)); // Sample 3
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] hashValue = md5.ComputeHash(Encoding.UTF8.GetBytes(value)); // Sample 4,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] hashValue = sha.ComputeHash(Encoding.UTF8.GetBytes(value)); // Sample 4
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] h = md5.ComputeHash(Encoding.UTF8.GetBytes(message)); // Sample 5,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] h = sha.ComputeHash(Encoding.UTF8.GetBytes(message)); // Sample 5
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] output = md5.ComputeHash(Encoding.UTF8.GetBytes(inputData)); // Sample 6,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] output = sha.ComputeHash(Encoding.UTF8.GetBytes(inputData)); // Sample 6
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] resultHash = md5.ComputeHash(Encoding.UTF8.GetBytes(info)); // Sample 7,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] resultHash = sha.ComputeHash(Encoding.UTF8.GetBytes(info)); // Sample 7
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] res = md5.ComputeHash(Encoding.UTF8.GetBytes(myString)); // Sample 8,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] res = sha.ComputeHash(Encoding.UTF8.GetBytes(myString)); // Sample 8
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] outputHash = md5.ComputeHash(Encoding.UTF8.GetBytes(rawInput)); // Sample 9,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] outputHash = sha.ComputeHash(Encoding.UTF8.GetBytes(rawInput)); // Sample 9
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] computed = md5.ComputeHash(Encoding.UTF8.GetBytes(strData)); // Sample 10,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] computed = sha.ComputeHash(Encoding.UTF8.GetBytes(strData)); // Sample 10
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] hashCode = md5.ComputeHash(Encoding.UTF8.GetBytes(content)); // Sample 11,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] hashCode = sha.ComputeHash(Encoding.UTF8.GetBytes(content)); // Sample 11
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] finalHash = md5.ComputeHash(Encoding.UTF8.GetBytes(source)); // Sample 12,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] finalHash = sha.ComputeHash(Encoding.UTF8.GetBytes(source)); // Sample 12
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] val = md5.ComputeHash(Encoding.UTF8.GetBytes(data)); // Sample 13,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] val = sha.ComputeHash(Encoding.UTF8.GetBytes(data)); // Sample 13
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] check = md5.ComputeHash(Encoding.UTF8.GetBytes(infoData)); // Sample 14,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] check = sha.ComputeHash(Encoding.UTF8.GetBytes(infoData)); // Sample 14
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] calc = md5.ComputeHash(Encoding.UTF8.GetBytes(parameter)); // Sample 15,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] calc = sha.ComputeHash(Encoding.UTF8.GetBytes(parameter)); // Sample 15
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] hashResult = md5.ComputeHash(Encoding.UTF8.GetBytes(arg)); // Sample 16,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] hashResult = sha.ComputeHash(Encoding.UTF8.GetBytes(arg)); // Sample 16
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] finalResult = md5.ComputeHash(Encoding.UTF8.GetBytes(value)); // Sample 17,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] finalResult = sha.ComputeHash(Encoding.UTF8.GetBytes(value)); // Sample 17
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] outputData = md5.ComputeHash(Encoding.UTF8.GetBytes(contentData)); // Sample 18,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] outputData = sha.ComputeHash(Encoding.UTF8.GetBytes(contentData)); // Sample 18
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] resultVal = md5.ComputeHash(Encoding.UTF8.GetBytes(inputVal)); // Sample 19,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] resultVal = sha.ComputeHash(Encoding.UTF8.GetBytes(inputVal)); // Sample 19
C#,Weak Cryptography,using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] finalVal = md5.ComputeHash(Encoding.UTF8.GetBytes(codeData)); // Sample 20,using System.Security.Cryptography; SHA256 sha = SHA256.Create(); byte[] finalVal = sha.ComputeHash(Encoding.UTF8.GetBytes(codeData)); // Sample 20
Java,Insecure Randomness,Random rand = new Random(); int num = rand.nextInt(); // Sample 1,SecureRandom rand = SecureRandom.getInstanceStrong(); int num = rand.nextInt(); // Sample 1
Java,Insecure Randomness,Random rand = new Random(); int value = rand.nextInt(100); // Sample 2,SecureRandom rand = SecureRandom.getInstanceStrong(); int value = rand.nextInt(100); // Sample 2
Java,Insecure Randomness,Random generator = new Random(); int randomNumber = generator.nextInt(); // Sample 3,SecureRandom generator = SecureRandom.getInstanceStrong(); int randomNumber = generator.nextInt(); // Sample 3
Java,Insecure Randomness,Random rnd = new Random(); int x = rnd.nextInt(50); // Sample 4,SecureRandom rnd = SecureRandom.getInstanceStrong(); int x = rnd.nextInt(50); // Sample 4
Java,Insecure Randomness,Random r = new Random(); int value = r.nextInt(); // Sample 5,SecureRandom r = SecureRandom.getInstanceStrong(); int value = r.nextInt(); // Sample 5
Java,Insecure Randomness,Random randomGen = new Random(); int num = randomGen.nextInt(1000); // Sample 6,SecureRandom randomGen = SecureRandom.getInstanceStrong(); int num = randomGen.nextInt(1000); // Sample 6
Java,Insecure Randomness,Random rndGen = new Random(); int result = rndGen.nextInt(); // Sample 7,SecureRandom rndGen = SecureRandom.getInstanceStrong(); int result = rndGen.nextInt(); // Sample 7
Java,Insecure Randomness,Random randomObj = new Random(); int output = randomObj.nextInt(500); // Sample 8,SecureRandom randomObj = SecureRandom.getInstanceStrong(); int output = randomObj.nextInt(500); // Sample 8
Java,Insecure Randomness,Random rng = new Random(); int number = rng.nextInt(); // Sample 9,SecureRandom rng = SecureRandom.getInstanceStrong(); int number = rng.nextInt(); // Sample 9
Java,Insecure Randomness,Random rd = new Random(); int val = rd.nextInt(10000); // Sample 10,SecureRandom rd = SecureRandom.getInstanceStrong(); int val = rd.nextInt(10000); // Sample 10
Java,Insecure Randomness,Random randObj = new Random(); int resultVal = randObj.nextInt(); // Sample 11,SecureRandom randObj = SecureRandom.getInstanceStrong(); int resultVal = randObj.nextInt(); // Sample 11
Java,Insecure Randomness,Random myRand = new Random(); int outputValue = myRand.nextInt(200); // Sample 12,SecureRandom myRand = SecureRandom.getInstanceStrong(); int outputValue = myRand.nextInt(200); // Sample 12
Java,Insecure Randomness,Random rndInstance = new Random(); int randNum = rndInstance.nextInt(1000); // Sample 13,SecureRandom rndInstance = SecureRandom.getInstanceStrong(); int randNum = rndInstance.nextInt(1000); // Sample 13
Java,Insecure Randomness,Random random = new Random(); int x = random.nextInt(); // Sample 14,SecureRandom random = SecureRandom.getInstanceStrong(); int x = random.nextInt(); // Sample 14
Java,Insecure Randomness,Random generatorObj = new Random(); int randomValue = generatorObj.nextInt(5000); // Sample 15,SecureRandom generatorObj = SecureRandom.getInstanceStrong(); int randomValue = generatorObj.nextInt(5000); // Sample 15
Java,Insecure Randomness,Random rgen = new Random(); int outputNum = rgen.nextInt(250); // Sample 16,SecureRandom rgen = SecureRandom.getInstanceStrong(); int outputNum = rgen.nextInt(250); // Sample 16
Java,Insecure Randomness,Random myGenerator = new Random(); int numVal = myGenerator.nextInt(); // Sample 17,SecureRandom myGenerator = SecureRandom.getInstanceStrong(); int numVal = myGenerator.nextInt(); // Sample 17
Java,Insecure Randomness,Random rndVal = new Random(); int resultNumber = rndVal.nextInt(100); // Sample 18,SecureRandom rndVal = SecureRandom.getInstanceStrong(); int resultNumber = rndVal.nextInt(100); // Sample 18
Java,Insecure Randomness,Random generator = new Random(); int finalNum = generator.nextInt(300); // Sample 19,SecureRandom generator = SecureRandom.getInstanceStrong(); int finalNum = generator.nextInt(300); // Sample 19
Java,Insecure Randomness,Random rand = new Random(); int output = rand.nextInt(100); // Sample 20,SecureRandom rand = SecureRandom.getInstanceStrong(); int output = rand.nextInt(100); // Sample 20
C#,Insecure Randomness,Random rand = new Random(); int num = rand.Next(); // Sample 1,"int num = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 1"
C#,Insecure Randomness,Random rng = new Random(); int value = rng.Next(100); // Sample 2,"int value = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 100); // Sample 2"
C#,Insecure Randomness,Random randomObj = new Random(); int result = randomObj.Next(); // Sample 3,"int result = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 3"
C#,Insecure Randomness,Random rnd = new Random(); int x = rnd.Next(50); // Sample 4,"int x = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 50); // Sample 4"
C#,Insecure Randomness,Random r = new Random(); int val = r.Next(); // Sample 5,"int val = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 5"
C#,Insecure Randomness,Random randomGen = new Random(); int num = randomGen.Next(1000); // Sample 6,"int num = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 1000); // Sample 6"
C#,Insecure Randomness,Random rndGen = new Random(); int result = rndGen.Next(); // Sample 7,"int result = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 7"
C#,Insecure Randomness,Random random = new Random(); int output = random.Next(500); // Sample 8,"int output = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 500); // Sample 8"
C#,Insecure Randomness,Random rng = new Random(); int number = rng.Next(); // Sample 9,"int number = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 9"
C#,Insecure Randomness,Random rd = new Random(); int value = rd.Next(10000); // Sample 10,"int value = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 10000); // Sample 10"
C#,Insecure Randomness,Random randObj = new Random(); int resultVal = randObj.Next(); // Sample 11,"int resultVal = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 11"
C#,Insecure Randomness,Random myRand = new Random(); int outputValue = myRand.Next(200); // Sample 12,"int outputValue = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 200); // Sample 12"
C#,Insecure Randomness,Random rndInstance = new Random(); int randNum = rndInstance.Next(1000); // Sample 13,"int randNum = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 1000); // Sample 13"
C#,Insecure Randomness,Random random = new Random(); int x = random.Next(); // Sample 14,"int x = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 14"
C#,Insecure Randomness,Random generatorObj = new Random(); int randomValue = generatorObj.Next(5000); // Sample 15,"int randomValue = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 5000); // Sample 15"
C#,Insecure Randomness,Random rgen = new Random(); int outputNum = rgen.Next(250); // Sample 16,"int outputNum = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 250); // Sample 16"
C#,Insecure Randomness,Random myGenerator = new Random(); int numVal = myGenerator.Next(); // Sample 17,"int numVal = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, int.MaxValue); // Sample 17"
C#,Insecure Randomness,Random rndVal = new Random(); int resultNumber = rndVal.Next(100); // Sample 18,"int resultNumber = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 100); // Sample 18"
C#,Insecure Randomness,Random generator = new Random(); int finalNum = generator.Next(300); // Sample 19,"int finalNum = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 300); // Sample 19"
C#,Insecure Randomness,Random rand = new Random(); int output = rand.Next(100); // Sample 20,"int output = System.Security.Cryptography.RandomNumberGenerator.GetInt32(0, 100); // Sample 20"
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 1"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 2"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 3"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 4"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 5"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 6"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 7"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 8"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 9"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 10"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 11"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 12"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 13"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 14"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 15"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 16"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 17"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 18"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 19"""
Java,Command Injection,Runtime.getRuntime().exec(userCommand);,"if(isSafe(userCommand)) { Runtime.getRuntime().exec(userCommand); } else { System.out.println(\Invalid command\""); } // Sample 20"
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 1"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 2"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 3"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 4"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 5"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 6"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 7"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 8"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 9"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 10"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 11"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 12"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 13"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 14"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 15"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 16"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 17"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 18"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 19"""
C#,Command Injection,"Process.Start(\cmd.exe\"", \""/C \"" + userCommand);""","if(IsValid(userCommand)) { Process.Start(\cmd.exe\"", \""/C \"" + userCommand); } else { Console.WriteLine(\""Invalid command\""); } // Sample 20"""
Java,Cross-Site Request Forgery (CSRF),"public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException { String userId = request.getParameter(\userId\""); performSensitiveAction(userId); } // Sample 1""","public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String userId = request.getParameter(\""userId\""); performSensitiveAction(userId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 1"""
Java,Cross-Site Request Forgery (CSRF),"public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException { String userId = request.getParameter(\userId\""); updateAccount(userId); } // Sample 2""","public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String userId = request.getParameter(\""userId\""); updateAccount(userId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 2"""
Java,Cross-Site Request Forgery (CSRF),"public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException { String action = request.getParameter(\action\""); executeAction(action); } // Sample 3""","public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String action = request.getParameter(\""action\""); executeAction(action); } else { response.sendError(403, \""Forbidden\""); } } // Sample 3"""
Java,Cross-Site Request Forgery (CSRF),"public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { String data = request.getParameter(\data\""); processData(data); } // Sample 4""","public void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String data = request.getParameter(\""data\""); processData(data); } else { response.sendError(403, \""Forbidden\""); } } // Sample 4"""
Java,Cross-Site Request Forgery (CSRF),"public void updateProfile(HttpServletRequest request, HttpServletResponse response) throws IOException { String profileId = request.getParameter(\profileId\""); updateProfileData(profileId); } // Sample 5""","public void updateProfile(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String profileId = request.getParameter(\""profileId\""); updateProfileData(profileId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 5"""
Java,Cross-Site Request Forgery (CSRF),"public void changeSettings(HttpServletRequest request, HttpServletResponse response) throws IOException { String setting = request.getParameter(\setting\""); changeSetting(setting); } // Sample 6""","public void changeSettings(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String setting = request.getParameter(\""setting\""); changeSetting(setting); } else { response.sendError(403, \""Forbidden\""); } } // Sample 6"""
Java,Cross-Site Request Forgery (CSRF),"public void deleteAccount(HttpServletRequest request, HttpServletResponse response) throws IOException { String accountId = request.getParameter(\accountId\""); deleteAccount(accountId); } // Sample 7""","public void deleteAccount(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String accountId = request.getParameter(\""accountId\""); deleteAccount(accountId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 7"""
Java,Cross-Site Request Forgery (CSRF),"public void approveRequest(HttpServletRequest request, HttpServletResponse response) throws IOException { String requestId = request.getParameter(\requestId\""); approveRequest(requestId); } // Sample 8""","public void approveRequest(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String requestId = request.getParameter(\""requestId\""); approveRequest(requestId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 8"""
Java,Cross-Site Request Forgery (CSRF),"public void submitOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String orderId = request.getParameter(\orderId\""); submitOrder(orderId); } // Sample 9""","public void submitOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String orderId = request.getParameter(\""orderId\""); submitOrder(orderId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 9"""
Java,Cross-Site Request Forgery (CSRF),"public void processPayment(HttpServletRequest request, HttpServletResponse response) throws IOException { String paymentId = request.getParameter(\paymentId\""); processPayment(paymentId); } // Sample 10""","public void processPayment(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String paymentId = request.getParameter(\""paymentId\""); processPayment(paymentId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 10"""
Java,Cross-Site Request Forgery (CSRF),"public void updateOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String orderNo = request.getParameter(\orderNo\""); updateOrder(orderNo); } // Sample 11""","public void updateOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String orderNo = request.getParameter(\""orderNo\""); updateOrder(orderNo); } else { response.sendError(403, \""Forbidden\""); } } // Sample 11"""
Java,Cross-Site Request Forgery (CSRF),"public void performAction(HttpServletRequest request, HttpServletResponse response) throws IOException { String action = request.getParameter(\action\""); performAction(action); } // Sample 12""","public void performAction(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String action = request.getParameter(\""action\""); performAction(action); } else { response.sendError(403, \""Forbidden\""); } } // Sample 12"""
Java,Cross-Site Request Forgery (CSRF),"public void changeStatus(HttpServletRequest request, HttpServletResponse response) throws IOException { String status = request.getParameter(\status\""); changeStatus(status); } // Sample 13""","public void changeStatus(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String status = request.getParameter(\""status\""); changeStatus(status); } else { response.sendError(403, \""Forbidden\""); } } // Sample 13"""
Java,Cross-Site Request Forgery (CSRF),"public void modifyData(HttpServletRequest request, HttpServletResponse response) throws IOException { String data = request.getParameter(\data\""); modifyData(data); } // Sample 14""","public void modifyData(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String data = request.getParameter(\""data\""); modifyData(data); } else { response.sendError(403, \""Forbidden\""); } } // Sample 14"""
Java,Cross-Site Request Forgery (CSRF),"public void saveSettings(HttpServletRequest request, HttpServletResponse response) throws IOException { String setting = request.getParameter(\setting\""); saveSettings(setting); } // Sample 15""","public void saveSettings(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String setting = request.getParameter(\""setting\""); saveSettings(setting); } else { response.sendError(403, \""Forbidden\""); } } // Sample 15"""
Java,Cross-Site Request Forgery (CSRF),"public void cancelOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String orderId = request.getParameter(\orderId\""); cancelOrder(orderId); } // Sample 16""","public void cancelOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String orderId = request.getParameter(\""orderId\""); cancelOrder(orderId); } else { response.sendError(403, \""Forbidden\""); } } // Sample 16"""
Java,Cross-Site Request Forgery (CSRF),"public void submitReview(HttpServletRequest request, HttpServletResponse response) throws IOException { String review = request.getParameter(\review\""); submitReview(review); } // Sample 17""","public void submitReview(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String review = request.getParameter(\""review\""); submitReview(review); } else { response.sendError(403, \""Forbidden\""); } } // Sample 17"""
Java,Cross-Site Request Forgery (CSRF),"public void placeOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String order = request.getParameter(\order\""); placeOrder(order); } // Sample 18""","public void placeOrder(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String order = request.getParameter(\""order\""); placeOrder(order); } else { response.sendError(403, \""Forbidden\""); } } // Sample 18"""
Java,Cross-Site Request Forgery (CSRF),"public void processForm(HttpServletRequest request, HttpServletResponse response) throws IOException { String formData = request.getParameter(\formData\""); processForm(formData); } // Sample 19""","public void processForm(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String formData = request.getParameter(\""formData\""); processForm(formData); } else { response.sendError(403, \""Forbidden\""); } } // Sample 19"""
Java,Cross-Site Request Forgery (CSRF),"public void executeTask(HttpServletRequest request, HttpServletResponse response) throws IOException { String task = request.getParameter(\task\""); executeTask(task); } // Sample 20""","public void executeTask(HttpServletRequest request, HttpServletResponse response) throws IOException { String csrfToken = request.getParameter(\csrfToken\""); if (validateCSRF(csrfToken)) { String task = request.getParameter(\""task\""); executeTask(task); } else { response.sendError(403, \""Forbidden\""); } } // Sample 20"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult UpdateProfile() { var userId = Request[\userId\""]; UpdateProfile(userId); return View(); } // Sample 1""","public ActionResult UpdateProfile(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var userId = Request[\userId\""]; UpdateProfile(userId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 1"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult UpdateSettings() { var setting = Request[\setting\""]; UpdateSettings(setting); return View(); } // Sample 2""","public ActionResult UpdateSettings(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var setting = Request[\setting\""]; UpdateSettings(setting); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 2"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult SubmitReview() { var review = Request[\review\""]; SubmitReview(review); return View(); } // Sample 3""","public ActionResult SubmitReview(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var review = Request[\review\""]; SubmitReview(review); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 3"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult ProcessForm() { var data = Request.QueryString[\data\""]; ProcessForm(data); return View(); } // Sample 4""","public ActionResult ProcessForm(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var data = Request.QueryString[\data\""]; ProcessForm(data); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 4"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult ChangePassword() { var pwd = Request[\pwd\""]; ChangePassword(pwd); return View(); } // Sample 5""","public ActionResult ChangePassword(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var pwd = Request[\pwd\""]; ChangePassword(pwd); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 5"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult TransferFunds() { var amount = Request[\amount\""]; TransferFunds(amount); return View(); } // Sample 6""","public ActionResult TransferFunds(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var amount = Request[\amount\""]; TransferFunds(amount); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 6"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult DeleteAccount() { var accId = Request[\accId\""]; DeleteAccount(accId); return View(); } // Sample 7""","public ActionResult DeleteAccount(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var accId = Request[\accId\""]; DeleteAccount(accId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 7"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult CancelOrder() { var orderId = Request[\orderId\""]; CancelOrder(orderId); return View(); } // Sample 8""","public ActionResult CancelOrder(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var orderId = Request[\orderId\""]; CancelOrder(orderId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 8"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult ApproveRequest() { var reqId = Request[\reqId\""]; ApproveRequest(reqId); return View(); } // Sample 9""","public ActionResult ApproveRequest(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var reqId = Request[\reqId\""]; ApproveRequest(reqId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 9"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult UpdateOrder() { var orderNo = Request[\orderNo\""]; UpdateOrder(orderNo); return View(); } // Sample 10""","public ActionResult UpdateOrder(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var orderNo = Request[\orderNo\""]; UpdateOrder(orderNo); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 10"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult SubmitPayment() { var paymentId = Request[\paymentId\""]; SubmitPayment(paymentId); return View(); } // Sample 11""","public ActionResult SubmitPayment(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var paymentId = Request[\paymentId\""]; SubmitPayment(paymentId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 11"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult ChangeEmail() { var email = Request[\email\""]; ChangeEmail(email); return View(); } // Sample 12""","public ActionResult ChangeEmail(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var email = Request[\email\""]; ChangeEmail(email); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 12"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult ProcessFeedback() { var feedback = Request[\feedback\""]; ProcessFeedback(feedback); return View(); } // Sample 13""","public ActionResult ProcessFeedback(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var feedback = Request[\feedback\""]; ProcessFeedback(feedback); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 13"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult SavePreferences() { var pref = Request[\pref\""]; SavePreferences(pref); return View(); } // Sample 14""","public ActionResult SavePreferences(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var pref = Request[\pref\""]; SavePreferences(pref); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 14"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult Login() { var username = Request[\username\""]; var password = Request[\""password\""]; Login(username, password); return View(); } // Sample 15""","public ActionResult Login(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var username = Request[\username\""]; var password = Request[\""password\""]; Login(username, password); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 15"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult ResetPassword() { var user = Request[\user\""]; ResetPassword(user); return View(); } // Sample 16""","public ActionResult ResetPassword(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var user = Request[\user\""]; ResetPassword(user); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 16"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult CancelSubscription() { var subId = Request[\subId\""]; CancelSubscription(subId); return View(); } // Sample 17""","public ActionResult CancelSubscription(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var subId = Request[\subId\""]; CancelSubscription(subId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 17"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult UpdateBilling() { var billInfo = Request[\billInfo\""]; UpdateBilling(billInfo); return View(); } // Sample 18""","public ActionResult UpdateBilling(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var billInfo = Request[\billInfo\""]; UpdateBilling(billInfo); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 18"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult SubmitOrder() { var order = Request[\order\""]; SubmitOrder(order); return View(); } // Sample 19""","public ActionResult SubmitOrder(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var order = Request[\order\""]; SubmitOrder(order); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 19"""
C#,Cross-Site Request Forgery (CSRF),"public ActionResult CompletePurchase() { var purchaseId = Request[\purchaseId\""]; CompletePurchase(purchaseId); return View(); } // Sample 20""","public ActionResult CompletePurchase(string csrfToken) { if(ValidateCsrfToken(csrfToken)) { var purchaseId = Request[\purchaseId\""]; CompletePurchase(purchaseId); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden CSRF detected\""); } } // Sample 20"""
Java,Business Logic Vulnerability,public void processOrder(Order order) { if(order.getTotal() > 100) { order.setDiscount(0.2); } } // Sample 1,public void processOrder(Order order) { if(order.getTotal() > 100 && order.isEligibleForDiscount()) { order.setDiscount(0.2); } } // Sample 1
Java,Business Logic Vulnerability,"public void applyPromotion(Order order) { if(order.getItemsCount() >= 3) { order.applyCoupon(\PROMO20\""); } } // Sample 2""","public void applyPromotion(Order order) { if(order.getItemsCount() >= 3 && order.hasNoActivePromo()) { order.applyCoupon(\PROMO20\""); } } // Sample 2"""
Java,Business Logic Vulnerability,public double calculateShipping(Order order) { if(order.getTotal() >= 50) { return 0; } else { return 5.0; } } // Sample 3,public double calculateShipping(Order order) { if(order.getTotal() >= 50 && !order.isExpress()) { return 0; } else { return 5.0; } } // Sample 3
Java,Business Logic Vulnerability,"public void updateAccount(Account acc) { if(acc.getBalance() > 1000) { acc.setStatus(\Gold\""); } } // Sample 4""","public void updateAccount(Account acc) { if(acc.getBalance() > 1000 && acc.isActive()) { acc.setStatus(\Gold\""); } } // Sample 4"""
Java,Business Logic Vulnerability,public void approveLoan(Loan loan) { if(loan.getApplicantIncome() > 50000) { loan.setApproved(true); } } // Sample 5,public void approveLoan(Loan loan) { if(loan.getApplicantIncome() > 50000 && loan.getCreditScore() > 650) { loan.setApproved(true); } } // Sample 5
Java,Business Logic Vulnerability,public void applyRefund(Order order) { if(order.getTotal() < 0) { order.setRefund(5.0); } } // Sample 6,public void applyRefund(Order order) { if(order.getTotal() < 0 && order.isReturnInitiated()) { order.setRefund(5.0); } } // Sample 6
Java,Business Logic Vulnerability,"public void updateDiscount(Order order) { if(order.getCustomerType().equals(\regular\"")) { order.setDiscount(0.1); } } // Sample 7""","public void updateDiscount(Order order) { if(order.getCustomerType().equals(\regular\"") && !order.hasLoyaltyRewards()) { order.setDiscount(0.1); } } // Sample 7"""
Java,Business Logic Vulnerability,public void processPayment(Payment payment) { if(payment.getAmount() > 1000) { payment.setFee(0.05); } } // Sample 8,public void processPayment(Payment payment) { if(payment.getAmount() > 1000 && payment.isVerified()) { payment.setFee(0.05); } } // Sample 8
Java,Business Logic Vulnerability,public void calculateBonus(Employee emp) { if(emp.getSales() > 50000) { emp.setBonus(1000); } } // Sample 9,public void calculateBonus(Employee emp) { if(emp.getSales() > 50000 && emp.getAttendance() > 90) { emp.setBonus(1000); } } // Sample 9
Java,Business Logic Vulnerability,public void awardPoints(Customer cust) { if(cust.getPurchaseTotal() > 200) { cust.addPoints(50); } } // Sample 10,public void awardPoints(Customer cust) { if(cust.getPurchaseTotal() > 200 && cust.isSubscribed()) { cust.addPoints(50); } } // Sample 10
Java,Business Logic Vulnerability,"public void authorizeAccess(User user) { if(user.getRole().equals(\user\"")) { grantAccess(); } } // Sample 11""","public void authorizeAccess(User user) { if(user.getRole().equals(\user\"") && user.isActive()) { grantAccess(); } } // Sample 11"""
Java,Business Logic Vulnerability,public void processDiscount(Discount disc) { if(disc.getAmount() >= 10) { disc.setApplied(true); } } // Sample 12,public void processDiscount(Discount disc) { if(disc.getAmount() >= 10 && disc.isValid()) { disc.setApplied(true); } } // Sample 12
Java,Business Logic Vulnerability,"public void updateSubscription(Subscription sub) { if(sub.getPeriod() > 12) { sub.setStatus(\Premium\""); } } // Sample 13""","public void updateSubscription(Subscription sub) { if(sub.getPeriod() > 12 && sub.verifyPaymentHistory()) { sub.setStatus(\Premium\""); } } // Sample 13"""
Java,Business Logic Vulnerability,public void calculateReward(Order order) { if(order.getTotal() > 500) { order.setReward(25); } } // Sample 14,public void calculateReward(Order order) { if(order.getTotal() > 500 && order.isFirstOrder()) { order.setReward(25); } } // Sample 14
Java,Business Logic Vulnerability,public void finalizeCart(Cart cart) { if(cart.getItemCount() >= 5) { cart.setFinalized(true); } } // Sample 15,public void finalizeCart(Cart cart) { if(cart.getItemCount() >= 5 && cart.isVerified()) { cart.setFinalized(true); } } // Sample 15
Java,Business Logic Vulnerability,"public void updateInvoice(Invoice inv) { if(inv.getAmountDue() < 0) { inv.setStatus(\Error\""); } } // Sample 16""","public void updateInvoice(Invoice inv) { if(inv.getAmountDue() < 0 && inv.isReviewed()) { inv.setStatus(\Error\""); } } // Sample 16"""
Java,Business Logic Vulnerability,public boolean isEligibleForPromotion(Employee emp) { return emp.getSales() > 10000; } // Sample 17,public boolean isEligibleForPromotion(Employee emp) { return emp.getSales() > 10000 && emp.getAttendance() > 95; } // Sample 17
Java,Business Logic Vulnerability,public void applyMembershipDiscount(Membership mem) { if(mem.getTenure() > 1) { mem.setDiscount(0.1); } } // Sample 18,public void applyMembershipDiscount(Membership mem) { if(mem.getTenure() > 1 && mem.isActive()) { mem.setDiscount(0.1); } } // Sample 18
Java,Business Logic Vulnerability,public void updateLoyaltyPoints(Customer cust) { if(cust.getPurchaseTotal() > 1000) { cust.addPoints(100); } } // Sample 19,public void updateLoyaltyPoints(Customer cust) { if(cust.getPurchaseTotal() > 1000 && cust.verifyIdentity()) { cust.addPoints(100); } } // Sample 19
Java,Business Logic Vulnerability,"public void grantSpecialAccess(User user) { if(user.getDepartment().equals(\sales\"")) { user.setAccessLevel(2); } } // Sample 20""","public void grantSpecialAccess(User user) { if(user.getDepartment().equals(\sales\"") && user.getPerformanceScore() > 80) { user.setAccessLevel(2); } } // Sample 20"""
C#,Business Logic Vulnerability,public void ProcessOrder(Order order) { if(order.Total > 100) { order.Discount = 0.1; } } // Sample 1,public void ProcessOrder(Order order) { if(order.Total > 100 && order.IsEligibleForDiscount) { order.Discount = 0.1; } } // Sample 1
C#,Business Logic Vulnerability,"public void ApplyPromotion(Order order) { if(order.ItemCount >= 3) { order.ApplyCoupon(""PROMO10""); } } // Sample 2","public void ApplyPromotion(Order order) { if(order.ItemCount >= 3 && order.HasNoActivePromotion) { order.ApplyCoupon(""PROMO10""); } } // Sample 2"
C#,Business Logic Vulnerability,public void CalculateShipping(Order order) { if(order.Total >= 50) { order.ShippingCost = 0; } } // Sample 3,public void CalculateShipping(Order order) { if(order.Total >= 50 && !order.IsExpressOrder) { order.ShippingCost = 0; } else { order.ShippingCost = 5; } } // Sample 3
C#,Business Logic Vulnerability,"public void UpdateAccount(Account account) { if(account.Balance > 1000) { account.Status = ""Gold""; } } // Sample 4","public void UpdateAccount(Account account) { if(account.Balance > 1000 && account.IsActive) { account.Status = ""Gold""; } } // Sample 4"
C#,Business Logic Vulnerability,public void ApproveLoan(Loan loan) { if(loan.ApplicantIncome > 50000) { loan.Approved = true; } } // Sample 5,public void ApproveLoan(Loan loan) { if(loan.ApplicantIncome > 50000 && loan.CreditScore > 650) { loan.Approved = true; } } // Sample 5
C#,Business Logic Vulnerability,public void ApplyRefund(Order order) { if(order.Total < 0) { order.Refund = 5.0; } } // Sample 6,public void ApplyRefund(Order order) { if(order.Total < 0 && order.IsReturnInitiated) { order.Refund = 5.0; } } // Sample 6
C#,Business Logic Vulnerability,"public void UpdateDiscount(Order order) { if(order.CustomerType == ""regular"") { order.Discount = 0.05; } } // Sample 7","public void UpdateDiscount(Order order) { if(order.CustomerType == ""regular"" && !order.HasLoyaltyBenefits) { order.Discount = 0.05; } } // Sample 7"
C#,Business Logic Vulnerability,public void ProcessPayment(Payment payment) { if(payment.Amount > 1000) { payment.Fee = 0.05; } } // Sample 8,public void ProcessPayment(Payment payment) { if(payment.Amount > 1000 && payment.IsVerified) { payment.Fee = 0.05; } } // Sample 8
C#,Business Logic Vulnerability,public void CalculateBonus(Employee emp) { if(emp.Sales > 50000) { emp.Bonus = 1000; } } // Sample 9,public void CalculateBonus(Employee emp) { if(emp.Sales > 50000 && emp.Attendance > 90) { emp.Bonus = 1000; } } // Sample 9
C#,Business Logic Vulnerability,public void AwardPoints(Customer cust) { if(cust.PurchaseTotal > 200) { cust.AddPoints(50); } } // Sample 10,public void AwardPoints(Customer cust) { if(cust.PurchaseTotal > 200 && cust.IsSubscribed) { cust.AddPoints(50); } } // Sample 10
C#,Business Logic Vulnerability,"public void AuthorizeAccess(User user) { if(user.Role == ""user"") { GrantAccess(); } } // Sample 11","public void AuthorizeAccess(User user) { if(user.Role == ""user"" && user.IsActive) { GrantAccess(); } } // Sample 11"
C#,Business Logic Vulnerability,public void ProcessDiscount(Discount discount) { if(discount.Amount >= 10) { discount.Applied = true; } } // Sample 12,public void ProcessDiscount(Discount discount) { if(discount.Amount >= 10 && discount.IsValid) { discount.Applied = true; } } // Sample 12
C#,Business Logic Vulnerability,"public void UpdateSubscription(Subscription sub) { if(sub.Period > 12) { sub.Status = ""Premium""; } } // Sample 13","public void UpdateSubscription(Subscription sub) { if(sub.Period > 12 && sub.HasGoodPaymentHistory) { sub.Status = ""Premium""; } } // Sample 13"
C#,Business Logic Vulnerability,public void CalculateReward(Order order) { if(order.Total > 500) { order.Reward = 25; } } // Sample 14,public void CalculateReward(Order order) { if(order.Total > 500 && order.IsFirstOrder) { order.Reward = 25; } } // Sample 14
C#,Business Logic Vulnerability,public void FinalizeCart(Cart cart) { if(cart.ItemCount >= 5) { cart.Finalized = true; } } // Sample 15,public void FinalizeCart(Cart cart) { if(cart.ItemCount >= 5 && cart.IsValidated) { cart.Finalized = true; } } // Sample 15
C#,Business Logic Vulnerability,"public void UpdateInvoice(Invoice inv) { if(inv.AmountDue < 0) { inv.Status = ""Error""; } } // Sample 16","public void UpdateInvoice(Invoice inv) { if(inv.AmountDue < 0 && inv.IsReviewed) { inv.Status = ""Error""; } } // Sample 16"
C#,Business Logic Vulnerability,public bool IsEligibleForPromotion(Employee emp) { return emp.Sales > 10000; } // Sample 17,public bool IsEligibleForPromotion(Employee emp) { return emp.Sales > 10000 && emp.Attendance > 95; } // Sample 17
C#,Business Logic Vulnerability,public void ApplyMembershipDiscount(Membership mem) { if(mem.Tenure > 1) { mem.Discount = 0.1; } } // Sample 18,public void ApplyMembershipDiscount(Membership mem) { if(mem.Tenure > 1 && mem.IsActive) { mem.Discount = 0.1; } } // Sample 18
C#,Business Logic Vulnerability,public void UpdateLoyaltyPoints(Customer cust) { if(cust.PurchaseTotal > 1000) { cust.AddPoints(100); } } // Sample 19,public void UpdateLoyaltyPoints(Customer cust) { if(cust.PurchaseTotal > 1000 && cust.VerifyIdentity()) { cust.AddPoints(100); } } // Sample 19
C#,Business Logic Vulnerability,"public void GrantSpecialAccess(User user) { if(user.Department == ""sales"") { user.AccessLevel = 2; } } // Sample 20","public void GrantSpecialAccess(User user) { if(user.Department == ""sales"" && user.PerformanceScore > 80) { user.AccessLevel = 2; } } // Sample 20"
Java,Path Traversal,"String filePath = request.getParameter(\file\""); File file = new File(filePath);""","String safeFile = new File(request.getParameter(\file\"")).getName(); File file = new File(BASE_DIR, safeFile); // Sample 1"""
Java,Path Traversal,"String path = request.getParameter(\file\""); File myFile = new File(path);""","String filename = new File(request.getParameter(\file\"")).getName(); File myFile = new File(SAFE_DIR, filename); // Sample 2"""
Java,Path Traversal,"String inputPath = request.getParameter(\file\""); File f = new File(inputPath);""","String safeName = new File(request.getParameter(\file\"")).getName(); File f = new File(ROOT_DIR, safeName); // Sample 3"""
Java,Path Traversal,"String fileParam = request.getParameter(\file\""); File file = new File(fileParam);""","String fileName = new File(fileParam).getName(); File file = new File(FIXED_PATH, fileName); // Sample 4"
Java,Path Traversal,"String pathValue = request.getParameter(\file\""); File f = new File(pathValue);""","String secureName = new File(pathValue).getName(); File f = new File(SECURE_DIR, secureName); // Sample 5"
Java,Path Traversal,"String requestPath = request.getParameter(\file\""); File file = new File(requestPath);""","String safePath = new File(request.getParameter(\file\"")).getName(); File file = new File(WHITELISTED_DIR, safePath); // Sample 6"""
Java,Path Traversal,"String fPath = request.getParameter(\file\""); File fileObj = new File(fPath);""","String filename = new File(fPath).getName(); File fileObj = new File(VALID_DIR, filename); // Sample 7"
Java,Path Traversal,"String userInput = request.getParameter(\file\""); File file = new File(userInput);""","String safeName = new File(userInput).getName(); File file = new File(PREDEFINED_DIR, safeName); // Sample 8"
Java,Path Traversal,"String pathStr = request.getParameter(\file\""); File file = new File(pathStr);""","String validName = new File(pathStr).getName(); File file = new File(SECURE_ROOT, validName); // Sample 9"
Java,Path Traversal,"String fValue = request.getParameter(\file\""); File f = new File(fValue);""","String safeFName = new File(fValue).getName(); File f = new File(SAFE_LOCATION, safeFName); // Sample 10"
Java,Path Traversal,"String fileData = request.getParameter(\file\""); File file = new File(fileData);""","String baseFile = new File(fileData).getName(); File file = new File(DESIGNATED_DIR, baseFile); // Sample 11"
Java,Path Traversal,"String fileName = request.getParameter(\file\""); File file = new File(fileName);""","String safeName = new File(fileName).getName(); File file = new File(SECURE_FOLDER, safeName); // Sample 12"
Java,Path Traversal,"String userPath = request.getParameter(\file\""); File f = new File(userPath);""","String cleanName = new File(userPath).getName(); File f = new File(ALLOWED_DIR, cleanName); // Sample 13"
Java,Path Traversal,"String input = request.getParameter(\file\""); File file = new File(input);""","String fileOnly = new File(input).getName(); File file = new File(WHITELIST_DIR, fileOnly); // Sample 14"
Java,Path Traversal,"String pathParameter = request.getParameter(\file\""); File file = new File(pathParameter);""","String secureFilename = new File(pathParameter).getName(); File file = new File(SECURE_BASE, secureFilename); // Sample 15"
Java,Path Traversal,"String fileInput = request.getParameter(\file\""); File fileObj = new File(fileInput);""","String extractedName = new File(fileInput).getName(); File fileObj = new File(TRUSTED_DIR, extractedName); // Sample 16"
Java,Path Traversal,"String f_param = request.getParameter(\file\""); File file = new File(f_param);""","String safe_file = new File(f_param).getName(); File file = new File(VALIDATED_DIR, safe_file); // Sample 17"
Java,Path Traversal,"String file_input = request.getParameter(\file\""); File file = new File(file_input);""","String fname = new File(file_input).getName(); File file = new File(STANDARD_DIR, fname); // Sample 18"
Java,Path Traversal,"String pathReq = request.getParameter(\file\""); File file = new File(pathReq);""","String safeReq = new File(pathReq).getName(); File file = new File(SECURE_PATH, safeReq); // Sample 19"
Java,Path Traversal,"String file_url = request.getParameter(\file\""); File file = new File(file_url);""","String baseName = new File(file_url).getName(); File file = new File(AUTHORIZED_DIR, baseName); // Sample 20
"
C#,Path Traversal,"string path = Request.QueryString[\file\""]; File.OpenRead(path);""","string fileName = Path.GetFileName(Request.QueryString[\file\""]); string safePath = Path.Combine(TrustedFolder, fileName); File.OpenRead(safePath); // Sample 2"""
C#,Path Traversal,"string userPath = Request.QueryString[\file\""]; var fileContent = File.ReadAllText(userPath);""","string safeFile = Path.GetFileName(Request.QueryString[\file\""]); var fileContent = File.ReadAllText(Path.Combine(AllowedDir, safeFile)); // Sample 3"""
C#,Path Traversal,"string inputPath = Request.QueryString[\file\""]; File.ReadAllBytes(inputPath);""","string filename = Path.GetFileName(Request.QueryString[\file\""]); File.ReadAllBytes(Path.Combine(SafeDirectory, filename)); // Sample 4"""
C#,Path Traversal,"string f = Request.QueryString[\file\""]; File.Open(f, FileMode.Open);""","string safeF = Path.GetFileName(Request.QueryString[\file\""]); File.Open(Path.Combine(BasePath, safeF), FileMode.Open); // Sample 5"""
C#,Path Traversal,"string fileParam = Request.QueryString[\file\""]; FileInfo fi = new FileInfo(fileParam);""","string fname = Path.GetFileName(Request.QueryString[\file\""]); FileInfo fi = new FileInfo(Path.Combine(SafeFolder, fname)); // Sample 6"""
C#,Path Traversal,"string fullPath = Request.QueryString[\file\""]; File.ReadAllText(fullPath);""","string safeName = Path.GetFileName(Request.QueryString[\file\""]); string safePath = Path.Combine(SecureDir, safeName); File.ReadAllText(safePath); // Sample 7"""
C#,Path Traversal,"string p = Request.QueryString[\file\""]; FileStream fs = File.Open(p, FileMode.Open);""","string fileOnly = Path.GetFileName(Request.QueryString[\file\""]); FileStream fs = File.Open(Path.Combine(ValidatedDir, fileOnly), FileMode.Open); // Sample 8"""
C#,Path Traversal,"string uPath = Request.QueryString[\file\""]; var content = File.ReadAllText(uPath);""","string cleanName = Path.GetFileName(Request.QueryString[\file\""]); var content = File.ReadAllText(Path.Combine(AuthorizedFolder, cleanName)); // Sample 9"""
C#,Path Traversal,"string url = Request.QueryString[\file\""]; FileInfo info = new FileInfo(url);""","string safeUrl = Path.GetFileName(Request.QueryString[\file\""]); FileInfo info = new FileInfo(Path.Combine(TrustedPath, safeUrl)); // Sample 10"""
C#,Path Traversal,"string param = Request.QueryString[\file\""]; var bytes = File.ReadAllBytes(param);""","string fname = Path.GetFileName(Request.QueryString[\file\""]); var bytes = File.ReadAllBytes(Path.Combine(AllowedFolder, fname)); // Sample 11"""
C#,Path Traversal,"string input = Request.QueryString[\file\""]; File.Open(input, FileMode.Open);""","string safeInput = Path.GetFileName(Request.QueryString[\file\""]); File.Open(Path.Combine(BaseDir, safeInput), FileMode.Open); // Sample 12"""
C#,Path Traversal,"string fileUrl = Request.QueryString[\file\""]; string content = File.ReadAllText(fileUrl);""","string fName = Path.GetFileName(Request.QueryString[\file\""]); string safeContentPath = Path.Combine(SecureLocation, fName); string content = File.ReadAllText(safeContentPath); // Sample 13"""
C#,Path Traversal,"string pathInput = Request.QueryString[\file\""]; var text = File.ReadAllText(pathInput);""","string onlyName = Path.GetFileName(Request.QueryString[\file\""]); var text = File.ReadAllText(Path.Combine(ValidatedPath, onlyName)); // Sample 14"""
C#,Path Traversal,"string pInput = Request.QueryString[\file\""]; FileStream stream = File.Open(pInput, FileMode.Open);""","string shortName = Path.GetFileName(Request.QueryString[\file\""]); FileStream stream = File.Open(Path.Combine(SafePath, shortName), FileMode.Open); // Sample 15"""
C#,Path Traversal,"string userInput = Request.QueryString[\file\""]; var fileData = File.ReadAllText(userInput);""","string safeFileName = Path.GetFileName(Request.QueryString[\file\""]); var fileData = File.ReadAllText(Path.Combine(TrustedDir, safeFileName)); // Sample 16"""
C#,Path Traversal,"string fParam = Request.QueryString[\file\""]; FileInfo fi = new FileInfo(fParam);""","string onlyFName = Path.GetFileName(Request.QueryString[\file\""]); FileInfo fi = new FileInfo(Path.Combine(AuthorizedDir, onlyFName)); // Sample 17"""
C#,Path Traversal,"string fileParam = Request.QueryString[\file\""]; var content = File.ReadAllBytes(fileParam);""","string fileOnly = Path.GetFileName(Request.QueryString[\file\""]); var content = File.ReadAllBytes(Path.Combine(AllowedDir, fileOnly)); // Sample 18"""
C#,Path Traversal,"string filePath = Request.QueryString[\file\""]; File.OpenRead(filePath);""","string safeF = Path.GetFileName(Request.QueryString[\file\""]); File.OpenRead(Path.Combine(SecureFolder, safeF)); // Sample 19"""
C#,Path Traversal,"string inputPath = Request.QueryString[\file\""]; var textData = File.ReadAllText(inputPath);""","string onlyName = Path.GetFileName(Request.QueryString[\file\""]); var textData = File.ReadAllText(Path.Combine(ValidatedFolder, onlyName)); // Sample 20"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""defaultKey\"").parseClaimsJws(jwt).getBody(); // Sample 1""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 1"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""testKey\"").parseClaimsJws(token).getBody(); // Sample 2""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 2"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""12345\"").parseClaimsJws(jwt).getBody(); // Sample 3""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 3"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""secret\"").parseClaimsJws(jwt).getBody(); // Sample 4""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 4"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""key123\"").parseClaimsJws(token).getBody(); // Sample 5""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 5"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""abcde\"").parseClaimsJws(jwt).getBody(); // Sample 6""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 6"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""myKey\"").parseClaimsJws(token).getBody(); // Sample 7""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 7"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""keyDefault\"").parseClaimsJws(jwt).getBody(); // Sample 8""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 8"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""openKey\"").parseClaimsJws(token).getBody(); // Sample 9""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 9"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""insecure\"").parseClaimsJws(jwt).getBody(); // Sample 10""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 10"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""dummyKey\"").parseClaimsJws(token).getBody(); // Sample 11""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 11"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""keyForJWT\"").parseClaimsJws(jwt).getBody(); // Sample 12""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 12"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""initialKey\"").parseClaimsJws(token).getBody(); // Sample 13""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 13"""
Java,Insecure JWT Validation,"String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""unsafeKey\"").parseClaimsJws(jwt).getBody(); // Sample 14""","String jwt = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(jwt).getBody(); // Sample 14"""
Java,Insecure JWT Validation,"String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parser().setSigningKey(\""defaultKey123\"").parseClaimsJws(token).getBody(); // Sample 15""","String token = request.getHeader(\Authorization\""); Claims claims = Jwts.parserBuilder().setSigningKey(System.getenv(\""JWT_SECRET\"")).build().parseClaimsJws(token).getBody(); // Sample 15"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken validatedToken); // Sample 1""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(jwt, validationParameters, out SecurityToken validatedToken); // Sample 1"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken tkn); // Sample 2""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(token, validationParameters, out SecurityToken tkn); // Sample 2"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 3""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 3"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var principal = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken validatedToken); // Sample 4""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var principal = handler.ValidateToken(token, validationParameters, out SecurityToken validatedToken); // Sample 4"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 5""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 5"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken tkn); // Sample 6""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(token, validationParameters, out SecurityToken tkn); // Sample 6"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var principal = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 7""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var principal = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 7"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken validatedToken); // Sample 8""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(token, validationParameters, out SecurityToken validatedToken); // Sample 8"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 9""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 9"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var principal = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken validatedToken); // Sample 10""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var principal = handler.ValidateToken(token, validationParameters, out SecurityToken validatedToken); // Sample 10"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 11""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 11"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken tkn); // Sample 12""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(token, validationParameters, out SecurityToken tkn); // Sample 12"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var principal = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 13""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var principal = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 13"""
C#,Insecure JWT Validation,"string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(token, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken validatedToken); // Sample 14""","string token = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(token, validationParameters, out SecurityToken validatedToken); // Sample 14"""
C#,Insecure JWT Validation,"string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var claims = handler.ValidateToken(jwt, new TokenValidationParameters { ValidateIssuerSigningKey = false }, out SecurityToken token); // Sample 15""","string jwt = Request.Headers[\Authorization\""]; var handler = new JwtSecurityTokenHandler(); var validationParameters = new TokenValidationParameters { ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(ConfigurationManager.AppSettings[\""JWT_SECRET\""])) }; var claims = handler.ValidateToken(jwt, validationParameters, out SecurityToken token); // Sample 15"""
C#,Integer Overflow,"int result = a + b; // Sample 1""",int result = checked(a + b); // Sample 1
C#,Path Traversal,"string filePath = Request.QueryString[\""file\""]; File.ReadAllText(filePath);""","string fileName = Path.GetFileName(Request.QueryString[\file\""]); string safePath = Path.Combine(BaseDirectory, fileName); File.ReadAllText(safePath); // Sample 1"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 1""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 1"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 2""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 2"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 3""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 3"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 4""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 4"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 5""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 5"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 6""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 6"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 7""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 7"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 8""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 8"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 21""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 21"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 22""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 22"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 23""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 23"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 24""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 24"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 25""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 25"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 26""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 26"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 27""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 27"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 28""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 28"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 29""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 29"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 30""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 30"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 31""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 31"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 32""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 32"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 33""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 33"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 34""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 34"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 35""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 35"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 36""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 36"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 37""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 37"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 38""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 38"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 39""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 39"""
Java,Missing Authorization,"public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); loadResource(resource); } // Sample 40""","public void accessResource(HttpServletRequest req, HttpServletResponse res) { String resource = req.getParameter(\resource\""); if(isAuthorized(req)) { loadResource(resource); } else { res.sendError(403, \""Forbidden\""); } } // Sample 40"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 1""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 1"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 2""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 2"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 3""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 3"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 4""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 4"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 5""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 5"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 6""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 6"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 7""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 7"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 8""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 8"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 9""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 9"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 10""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 10"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 11""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 11"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 12""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 12"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 29""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 29"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 30""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 30"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 31""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 31"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 32""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 32"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 33""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 33"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 34""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 34"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 35""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 35"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 36""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 36"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 37""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 37"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 38""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 38"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 39""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 39"""
C#,Missing Authorization,"public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; LoadResource(resource); return View(); } // Sample 40""","public ActionResult AccessResource() { string resource = Request.QueryString[\resource\""]; if(IsAuthorized()) { LoadResource(resource); return View(); } else { return new HttpStatusCodeResult(403, \""Forbidden\""); } } // Sample 40"""
Java,Missing Authorization,public void deleteUser(String userId) {\n    // no role check\n    userDAO.delete(userId);\n},"public void deleteUser(User currentUser, String userId) {\n    if(!currentUser.isAdmin()) throw new SecurityException();\n    userDAO.delete(userId);\n}"
Java,Missing Authorization,"String action = request.getParameter(\action\"");\nif(action.equals(\""deleteAccount\"")) { deleteAccount(); }""","String action = request.getParameter(\action\"");\nUser currentUser = (User) session.getAttribute(\""user\"");\nif(currentUser != null && currentUser.isAdmin()) { deleteAccount(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"File config = new File(\/etc/app/config.xml\"");\nopenConfig(config);""","File config = new File(\/etc/app/config.xml\"");\nUser currentUser = (User) session.getAttribute(\""user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""VIEW_CONFIG\"")) { openConfig(config); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"String roleData = request.getParameter(\roleData\"");\nupdateUserRole(roleData);""","String roleData = request.getParameter(\roleData\"");\nUser currentUser = (User) session.getAttribute(\""user\"");\nif(currentUser != null && currentUser.isAdmin()) { updateUserRole(roleData); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,User sensitiveInfo = userService.getSensitiveUserInfo();\nout.println(sensitiveInfo);,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAdmin()) { User sensitiveInfo = userService.getSensitiveUserInfo(); out.println(sensitiveInfo); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"updateSystemSettings(request.getParameter(\settings\""));""","User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""MODIFY_SETTINGS\"")) { updateSystemSettings(request.getParameter(\""settings\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"processTransaction(request.getParameter(\transactionId\""));""","User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""PROCESS_TRANSACTION\"")) { processTransaction(request.getParameter(\""transactionId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,List<LogEntry> logs = logService.getAuditLogs();\nout.println(logs);,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAuditor()) { List<LogEntry> logs = logService.getAuditLogs(); out.println(logs); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,userService.manageUsers();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAdmin()) { userService.manageUsers(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,clearCache();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""CLEAR_CACHE\"")) { clearCache(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,// Missing authorization check for admin panel access\nshowAdminPanel();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAdmin()) { showAdminPanel(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"deleteLogFile(request.getParameter(\logId\""));""","User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAdmin()) { deleteLogFile(request.getParameter(\""logId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"modifyCompanySecrets(request.getParameter(\secrets\""));""","User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isCLevel()) { modifyCompanySecrets(request.getParameter(\""secrets\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,generateSecureReport();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""VIEW_REPORTS\"")) { generateSecureReport(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,exportSensitiveData();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""EXPORT_DATA\"")) { exportSensitiveData(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"@GetMapping(\/admin/dashboard\"")\npublic String adminDashboard() {\n    return \""dashboard\"";\n}""","@GetMapping(\/admin/dashboard\"")\npublic String adminDashboard(HttpSession session) {\n    User currentUser = (User) session.getAttribute(\""user\"");\n    if(currentUser != null && currentUser.isAdmin()) { return \""dashboard\""; } else { throw new SecurityE"
Java,Missing Authorization,"resetPassword(request.getParameter(\userId\""));""","User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAdmin()) { resetPassword(request.getParameter(\""userId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,callPrivilegedAPI();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""PRIVILEGED_API\"")) { callPrivilegedAPI(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,manageFinancialAccounts();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""MANAGE_FINANCE\"")) { manageFinancialAccounts(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,deleteDatabaseRecord(recordId);,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isAdmin()) { deleteDatabaseRecord(recordId); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"updateConfiguration(request.getParameter(\configData\""));""","User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""MODIFY_CONFIG\"")) { updateConfiguration(request.getParameter(\""configData\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,accessInternalResource(resourceId);,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""ACCESS_INTERNAL\"")) { accessInternalResource(resourceId); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,performHealthCheck();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.hasPrivilege(\""HEALTH_CHECK\"")) { performHealthCheck(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,accessHRData();,"User currentUser = (User) session.getAttribute(\user\"");\nif(currentUser != null && currentUser.isHR()) { accessHRData(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"updateEmail(request.getParameter(\email\""));""","if(session.getAttribute(\user\"") != null) { updateEmail(request.getParameter(\""email\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"processOrder(request.getParameter(\orderId\""));""","if(session.getAttribute(\user\"") != null) { processOrder(request.getParameter(\""orderId\"")); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,"if(request.getParameter(\download\"") != null) { downloadFile(); }""","if(session.getAttribute(\user\"") != null) { downloadFile(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,accessResource();,"if(session.getAttribute(\user\"") != null) { accessResource(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
Java,Missing Authorization,// Missing auth check before sensitive operation\nperformSensitiveOperation();,"if(session.getAttribute(\user\"") != null) { performSensitiveOperation(); } else { response.sendError(HttpServletResponse.SC_FORBIDDEN); }"""
C#,Missing Authorization,"public ActionResult DeleteUser(int id) {\n    userService.DeleteUser(id);\n    return RedirectToAction(\Users\"");\n}""","public ActionResult DeleteUser(int id) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { userService.DeleteUser(id); return RedirectToAction(\""Users\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult AdminPanel() {\n    return View(adminService.GetDashboard());\n},"public ActionResult AdminPanel() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { return View(adminService.GetDashboard()); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"[HttpPost]\npublic ActionResult UpdateUserRole(UserRoleModel model) {\n    userService.UpdateUserRole(model);\n    return RedirectToAction(\UserList\"");\n}""","[HttpPost]\npublic ActionResult UpdateUserRole(UserRoleModel model) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { userService.UpdateUserRole(model); return RedirectToAction(\""UserList\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult ViewSensitiveData() {\n    var data = dataService.GetSensitiveData();\n    return View(data);\n},"public ActionResult ViewSensitiveData() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""VIEW_SENSITIVE\"")) { var data = dataService.GetSensitiveData(); return View(data); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"public ActionResult UpdateSettings(string settings) {\n    settingsService.Update(settings);\n    return RedirectToAction(\Settings\"");\n}""","public ActionResult UpdateSettings(string settings) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""MODIFY_SETTINGS\"")) { settingsService.Update(settings); return RedirectToAction(\""Settings\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"public ActionResult ProcessTransaction(string transactionId) {\n    transactionService.Process(transactionId);\n    return RedirectToAction(\Dashboard\"");\n}""","public ActionResult ProcessTransaction(string transactionId) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""PROCESS_TRANSACTION\"")) { transactionService.Process(transactionId); return RedirectToAction(\""Dashboard\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult GetAuditLogs() {\n    var logs = logService.GetAuditLogs();\n    return View(logs);\n},"public ActionResult GetAuditLogs() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAuditor) { var logs = logService.GetAuditLogs(); return View(logs); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult ManageUsers() {\n    var users = userService.GetAllUsers();\n    return View(users);\n},"public ActionResult ManageUsers() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { var users = userService.GetAllUsers(); return View(users); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"public ActionResult ClearCache() {\n    cacheService.Clear();\n    return RedirectToAction(\Home\"");\n}""","public ActionResult ClearCache() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""CLEAR_CACHE\"")) { cacheService.Clear(); return RedirectToAction(\""Home\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"public ActionResult ChangeConfiguration(string configData) {\n    configService.Update(configData);\n    return RedirectToAction(\Config\"");\n}""","public ActionResult ChangeConfiguration(string configData) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""MODIFY_CONFIG\"")) { configService.Update(configData); return RedirectToAction(\""Config\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult AccessInternalResource() {\n    var resource = resourceService.GetResource();\n    return View(resource);\n},"public ActionResult AccessInternalResource() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""ACCESS_INTERNAL\"")) { var resource = resourceService.GetResource(); return View(resource); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult PerformHealthCheck() {\n    var status = healthService.Check();\n    return Content(status);\n},"public ActionResult PerformHealthCheck() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""HEALTH_CHECK\"")) { var status = healthService.Check(); return Content(status); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult AccessHRData() {\n    var hrData = hrService.GetData();\n    return View(hrData);\n},"public ActionResult AccessHRData() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).IsHR) { var hrData = hrService.GetData(); return View(hrData); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"public ActionResult DeleteFile(string fileId) {\n    fileService.Delete(fileId);\n    return RedirectToAction(\Files\"");\n}""","public ActionResult DeleteFile(string fileId) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""DELETE_FILE\"")) { fileService.Delete(fileId); return RedirectToAction(\""Files\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"public ActionResult UpdateEmail(string email) {\n    userService.UpdateEmail(email);\n    return RedirectToAction(\Profile\"");\n}""","public ActionResult UpdateEmail(string email) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""UPDATE_EMAIL\"")) { userService.UpdateEmail(email); return RedirectToAction(\""Profile\""); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public void ExecuteCriticalAction(string action) {\n    actionService.Execute(action);\n},"public void ExecuteCriticalAction(string action) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""CRITICAL_ACTION\"")) { actionService.Execute(action); } else { throw new UnauthorizedAccessException(); }\n}"""
C#,Missing Authorization,public ActionResult SecureData() {\n    return View(dataService.GetSecureData());\n},"public ActionResult SecureData() {\n    if(Session[\user\""] != null) { return View(dataService.GetSecureData()); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public ActionResult ManageSettings() {\n    var settings = settingsService.GetSettings();\n    return View(settings);\n},"public ActionResult ManageSettings() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""MANAGE_SETTINGS\"")) { var settings = settingsService.GetSettings(); return View(settings); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,"if(Request.Params[\action\""] == \""shutdown\"") { systemService.Shutdown(); }""","if(Session[\user\""] != null && ((User)Session[\""user\""]).IsAdmin) { if(Request.Params[\""action\""] == \""shutdown\"") { systemService.Shutdown(); } } else { throw new UnauthorizedAccessException(); }"""
C#,Missing Authorization,public ActionResult GetConfidentialData() {\n    var data = confidentialService.FetchData();\n    return View(data);\n},"public ActionResult GetConfidentialData() {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""CONFIDENTIAL_ACCESS\"")) { var data = confidentialService.FetchData(); return View(data); } else { return new HttpStatusCodeResult(403); }\n}"""
C#,Missing Authorization,public void ProcessCriticalOrder(string orderId) {\n    orderService.Process(orderId);\n},"public void ProcessCriticalOrder(string orderId) {\n    if(Session[\user\""] != null && ((User)Session[\""user\""]).HasPrivilege(\""PROCESS_ORDER\"")) { orderService.Process(orderId); } else { throw new UnauthorizedAccessException(); }\n}"""
Java,Unvalidated Redirects,"String target = request.getParameter(\redirect\""); response.sendRedirect(target); // Sample 1""","String target = request.getParameter(\redirect\""); if(target.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(target); } else { response.sendRedirect(\""/error\""); } // Sample 1"""
Java,Unvalidated Redirects,"String url = request.getParameter(\url\""); response.sendRedirect(url); // Sample 2""","String url = request.getParameter(\url\""); if(url.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(url); } else { response.sendRedirect(\""/error\""); } // Sample 2"""
Java,Unvalidated Redirects,"String path = request.getParameter(\path\""); response.sendRedirect(path); // Sample 3""","String path = request.getParameter(\path\""); if(path.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(path); } else { response.sendRedirect(\""/error\""); } // Sample 3"""
Java,Unvalidated Redirects,"String destination = request.getParameter(\dest\""); response.sendRedirect(destination); // Sample 4""","String destination = request.getParameter(\dest\""); if(destination.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(destination); } else { response.sendRedirect(\""/error\""); } // Sample 4"""
Java,Unvalidated Redirects,"String targetUrl = request.getParameter(\target\""); response.sendRedirect(targetUrl); // Sample 5""","String targetUrl = request.getParameter(\target\""); if(targetUrl.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(targetUrl); } else { response.sendRedirect(\""/error\""); } // Sample 5"""
Java,Unvalidated Redirects,"String redirectUrl = request.getParameter(\redirectUrl\""); response.sendRedirect(redirectUrl); // Sample 6""","String redirectUrl = request.getParameter(\redirectUrl\""); if(redirectUrl.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(redirectUrl); } else { response.sendRedirect(\""/error\""); } // Sample 6"""
Java,Unvalidated Redirects,"String link = request.getParameter(\link\""); response.sendRedirect(link); // Sample 7""","String link = request.getParameter(\link\""); if(link.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(link); } else { response.sendRedirect(\""/error\""); } // Sample 7"""
Java,Unvalidated Redirects,"String uri = request.getParameter(\uri\""); response.sendRedirect(uri); // Sample 8""","String uri = request.getParameter(\uri\""); if(uri.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(uri); } else { response.sendRedirect(\""/error\""); } // Sample 8"""
Java,Unvalidated Redirects,"String loc = request.getParameter(\location\""); response.sendRedirect(loc); // Sample 9""","String loc = request.getParameter(\location\""); if(loc.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(loc); } else { response.sendRedirect(\""/error\""); } // Sample 9"""
Java,Unvalidated Redirects,"String nextPage = request.getParameter(\next\""); response.sendRedirect(nextPage); // Sample 10""","String nextPage = request.getParameter(\next\""); if(nextPage.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(nextPage); } else { response.sendRedirect(\""/error\""); } // Sample 10"""
Java,Unvalidated Redirects,"String destPath = request.getParameter(\destPath\""); response.sendRedirect(destPath); // Sample 11""","String destPath = request.getParameter(\destPath\""); if(destPath.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(destPath); } else { response.sendRedirect(\""/error\""); } // Sample 11"""
Java,Unvalidated Redirects,"String forward = request.getParameter(\forward\""); response.sendRedirect(forward); // Sample 12""","String forward = request.getParameter(\forward\""); if(forward.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(forward); } else { response.sendRedirect(\""/error\""); } // Sample 12"""
Java,Unvalidated Redirects,"String route = request.getParameter(\route\""); response.sendRedirect(route); // Sample 13""","String route = request.getParameter(\route\""); if(route.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(route); } else { response.sendRedirect(\""/error\""); } // Sample 13"""
Java,Unvalidated Redirects,"String dest = request.getParameter(\destination\""); response.sendRedirect(dest); // Sample 14""","String dest = request.getParameter(\destination\""); if(dest.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(dest); } else { response.sendRedirect(\""/error\""); } // Sample 14"""
Java,Unvalidated Redirects,"String urlParam = request.getParameter(\urlParam\""); response.sendRedirect(urlParam); // Sample 15""","String urlParam = request.getParameter(\urlParam\""); if(urlParam.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(urlParam); } else { response.sendRedirect(\""/error\""); } // Sample 15"""
Java,Unvalidated Redirects,"String redirectParam = request.getParameter(\redirectParam\""); response.sendRedirect(redirectParam); // Sample 16""","String redirectParam = request.getParameter(\redirectParam\""); if(redirectParam.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(redirectParam); } else { response.sendRedirect(\""/error\""); } // Sample 16"""
Java,Unvalidated Redirects,"String gotoPage = request.getParameter(\goto\""); response.sendRedirect(gotoPage); // Sample 17""","String gotoPage = request.getParameter(\goto\""); if(gotoPage.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(gotoPage); } else { response.sendRedirect(\""/error\""); } // Sample 17"""
Java,Unvalidated Redirects,"String urlVal = request.getParameter(\urlVal\""); response.sendRedirect(urlVal); // Sample 18""","String urlVal = request.getParameter(\urlVal\""); if(urlVal.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(urlVal); } else { response.sendRedirect(\""/error\""); } // Sample 18"""
Java,Unvalidated Redirects,"String targetLink = request.getParameter(\targetLink\""); response.sendRedirect(targetLink); // Sample 19""","String targetLink = request.getParameter(\targetLink\""); if(targetLink.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(targetLink); } else { response.sendRedirect(\""/error\""); } // Sample 19"""
Java,Unvalidated Redirects,"String nextUrl = request.getParameter(\nextUrl\""); response.sendRedirect(nextUrl); // Sample 20""","String nextUrl = request.getParameter(\nextUrl\""); if(nextUrl.startsWith(\""https://trusted.example.com/\"")) { response.sendRedirect(nextUrl); } else { response.sendRedirect(\""/error\""); } // Sample 20"""
C#,Unvalidated Redirects,"string target = Request.QueryString[\redirect\""]; Response.Redirect(target); // Sample 1""","string target = Request.QueryString[\redirect\""]; if(target.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(target); } else { Response.Redirect(\""/error\""); } // Sample 1"""
C#,Unvalidated Redirects,"string url = Request.QueryString[\url\""]; Response.Redirect(url); // Sample 2""","string url = Request.QueryString[\url\""]; if(url.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(url); } else { Response.Redirect(\""/error\""); } // Sample 2"""
C#,Unvalidated Redirects,"string destination = Request.QueryString[\dest\""]; Response.Redirect(destination); // Sample 3""","string destination = Request.QueryString[\dest\""]; if(destination.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(destination); } else { Response.Redirect(\""/error\""); } // Sample 3"""
C#,Unvalidated Redirects,"string targetUrl = Request.QueryString[\target\""]; Response.Redirect(targetUrl); // Sample 4""","string targetUrl = Request.QueryString[\target\""]; if(targetUrl.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(targetUrl); } else { Response.Redirect(\""/error\""); } // Sample 4"""
C#,Unvalidated Redirects,"string link = Request.QueryString[\link\""]; Response.Redirect(link); // Sample 5""","string link = Request.QueryString[\link\""]; if(link.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(link); } else { Response.Redirect(\""/error\""); } // Sample 5"""
C#,Unvalidated Redirects,"string uri = Request.QueryString[\uri\""]; Response.Redirect(uri); // Sample 6""","string uri = Request.QueryString[\uri\""]; if(uri.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(uri); } else { Response.Redirect(\""/error\""); } // Sample 6"""
C#,Unvalidated Redirects,"string route = Request.QueryString[\route\""]; Response.Redirect(route); // Sample 7""","string route = Request.QueryString[\route\""]; if(route.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(route); } else { Response.Redirect(\""/error\""); } // Sample 7"""
C#,Unvalidated Redirects,"string nextPage = Request.QueryString[\next\""]; Response.Redirect(nextPage); // Sample 8""","string nextPage = Request.QueryString[\next\""]; if(nextPage.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(nextPage); } else { Response.Redirect(\""/error\""); } // Sample 8"""
C#,Unvalidated Redirects,"string destUrl = Request.QueryString[\destUrl\""]; Response.Redirect(destUrl); // Sample 9""","string destUrl = Request.QueryString[\destUrl\""]; if(destUrl.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(destUrl); } else { Response.Redirect(\""/error\""); } // Sample 9"""
C#,Unvalidated Redirects,"string forward = Request.QueryString[\forward\""]; Response.Redirect(forward); // Sample 10""","string forward = Request.QueryString[\forward\""]; if(forward.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(forward); } else { Response.Redirect(\""/error\""); } // Sample 10"""
C#,Unvalidated Redirects,"string urlParam = Request.QueryString[\urlParam\""]; Response.Redirect(urlParam); // Sample 11""","string urlParam = Request.QueryString[\urlParam\""]; if(urlParam.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(urlParam); } else { Response.Redirect(\""/error\""); } // Sample 11"""
C#,Unvalidated Redirects,"string redirectVal = Request.QueryString[\redirectVal\""]; Response.Redirect(redirectVal); // Sample 12""","string redirectVal = Request.QueryString[\redirectVal\""]; if(redirectVal.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(redirectVal); } else { Response.Redirect(\""/error\""); } // Sample 12"""
C#,Unvalidated Redirects,"string targetParam = Request.QueryString[\targetParam\""]; Response.Redirect(targetParam); // Sample 13""","string targetParam = Request.QueryString[\targetParam\""]; if(targetParam.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(targetParam); } else { Response.Redirect(\""/error\""); } // Sample 13"""
C#,Unvalidated Redirects,"string nextUrl = Request.QueryString[\nextUrl\""]; Response.Redirect(nextUrl); // Sample 14""","string nextUrl = Request.QueryString[\nextUrl\""]; if(nextUrl.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(nextUrl); } else { Response.Redirect(\""/error\""); } // Sample 14"""
C#,Unvalidated Redirects,"string destLink = Request.QueryString[\destLink\""]; Response.Redirect(destLink); // Sample 15""","string destLink = Request.QueryString[\destLink\""]; if(destLink.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(destLink); } else { Response.Redirect(\""/error\""); } // Sample 15"""
C#,Unvalidated Redirects,"string gotoPage = Request.QueryString[\gotoPage\""]; Response.Redirect(gotoPage); // Sample 16""","string gotoPage = Request.QueryString[\gotoPage\""]; if(gotoPage.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(gotoPage); } else { Response.Redirect(\""/error\""); } // Sample 16"""
C#,Unvalidated Redirects,"string targetUrl2 = Request.QueryString[\targetUrl2\""]; Response.Redirect(targetUrl2); // Sample 17""","string targetUrl2 = Request.QueryString[\targetUrl2\""]; if(targetUrl2.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(targetUrl2); } else { Response.Redirect(\""/error\""); } // Sample 17"""
C#,Unvalidated Redirects,"string routeParam = Request.QueryString[\routeParam\""]; Response.Redirect(routeParam); // Sample 23""","string routeParam = Request.QueryString[\routeParam\""]; if(routeParam.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(routeParam); } else { Response.Redirect(\""/error\""); } // Sample 23"""
C#,Unvalidated Redirects,"string nextParam = Request.QueryString[\nextParam\""]; Response.Redirect(nextParam); // Sample 24""","string nextParam = Request.QueryString[\nextParam\""]; if(nextParam.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(nextParam); } else { Response.Redirect(\""/error\""); } // Sample 24"""
C#,Unvalidated Redirects,"string linkUrl = Request.QueryString[\linkUrl\""]; Response.Redirect(linkUrl); // Sample 25""","string linkUrl = Request.QueryString[\linkUrl\""]; if(linkUrl.StartsWith(\""https://trusted.example.com/\"")) { Response.Redirect(linkUrl); } else { Response.Redirect(\""/error\""); } // Sample 25"""
Java,Unvalidated Redirects,"String dest = request.getParameter(\dest\""); response.sendRedirect(dest); // Sample 1""","String dest = request.getParameter(\dest\""); if(dest != null && dest.matches(\""^/[A-Za-z0-9/_-]+$\"")) { response.sendRedirect(dest); } else { response.sendRedirect(\""/error\""); } // Sample 1"""
Java,Unvalidated Redirects,"String redirectParam = request.getParameter(\redirectParam\""); response.sendRedirect(redirectParam); // Sample 2""","String redirectParam = request.getParameter(\redirectParam\""); if(redirectParam != null && redirectParam.startsWith(\""/\"")) { response.sendRedirect(redirectParam); } else { response.sendRedirect(\""/default\""); } // Sample 2"""
Java,Unvalidated Redirects,"String targetUrl = request.getParameter(\targetUrl\""); response.sendRedirect(targetUrl); // Sample 3""","String targetUrl = request.getParameter(\targetUrl\""); if(targetUrl != null && targetUrl.matches(\""^/[\\w\\-/]+$\"")) { response.sendRedirect(targetUrl); } else { response.sendRedirect(\""/homepage\""); } // Sample 3"""
Java,Unvalidated Redirects,"String page = request.getParameter(\page\""); response.sendRedirect(page); // Sample 4""","String page = request.getParameter(\page\""); if(page != null && page.startsWith(\""/secure\"")) { response.sendRedirect(page); } else { response.sendRedirect(\""/errorPage\""); } // Sample 4"""
Java,Unvalidated Redirects,"String url = request.getParameter(\url\""); response.sendRedirect(url); // Sample 5""","String url = request.getParameter(\url\""); if(url != null && url.length() < 100 && url.startsWith(\""/\"")) { response.sendRedirect(url); } else { response.sendRedirect(\""/fallback\""); } // Sample 5"""
Java,Unvalidated Redirects,"String path = request.getParameter(\path\""); response.sendRedirect(path); // Sample 6""","String path = request.getParameter(\path\""); if(path != null && path.contains(\""/safe\"")) { response.sendRedirect(path); } else { response.sendRedirect(\""/error\""); } // Sample 6"""
Java,Unvalidated Redirects,"String next = request.getParameter(\next\""); response.sendRedirect(next); // Sample 7""","String next = request.getParameter(\next\""); if(next != null && next.startsWith(\""/app\"")) { response.sendRedirect(next); } else { response.sendRedirect(\""/notFound\""); } // Sample 7"""
Java,Unvalidated Redirects,"String location = request.getParameter(\location\""); response.sendRedirect(location); // Sample 8""","String location = request.getParameter(\location\""); if(location != null && location.matches(\""^/[a-zA-Z]+$\"")) { response.sendRedirect(location); } else { response.sendRedirect(\""/login\""); } // Sample 8"""
Java,Unvalidated Redirects,"String ref = request.getParameter(\ref\""); response.sendRedirect(ref); // Sample 9""","String ref = request.getParameter(\ref\""); if(ref != null && ref.startsWith(\""/user\"")) { response.sendRedirect(ref); } else { response.sendRedirect(\""/errorMsg\""); } // Sample 9"""
Java,Unvalidated Redirects,"String gotoPage = request.getParameter(\gotoPage\""); response.sendRedirect(gotoPage); // Sample 10""","String gotoPage = request.getParameter(\gotoPage\""); if(gotoPage != null && gotoPage.matches(\""^/[\\w\\-]+(\\/[\\w\\-]+)*$\"")) { response.sendRedirect(gotoPage); } else { response.sendRedirect(\""/defaultPage\""); } // Sample 10"""
Java,Unvalidated Redirects,"String destination = request.getParameter(\destination\""); response.sendRedirect(destination); // Sample 11""","String destination = request.getParameter(\destination\""); if(destination != null && destination.startsWith(\""/profile\"")) { response.sendRedirect(destination); } else { response.sendRedirect(\""/error\""); } // Sample 11"""
Java,Unvalidated Redirects,"String returnUrl = request.getParameter(\returnUrl\""); response.sendRedirect(returnUrl); // Sample 12""","String returnUrl = request.getParameter(\returnUrl\""); if(returnUrl != null && returnUrl.startsWith(\""/dashboard\"")) { response.sendRedirect(returnUrl); } else { response.sendRedirect(\""/login\""); } // Sample 12"""
Java,Unvalidated Redirects,"String forward = request.getParameter(\forward\""); response.sendRedirect(forward); // Sample 13""","String forward = request.getParameter(\forward\""); if(forward != null && forward.matches(\""^/([A-Za-z0-9]+/)*[A-Za-z0-9]+$\"")) { response.sendRedirect(forward); } else { response.sendRedirect(\""/error\""); } // Sample 13"""
Java,Unvalidated Redirects,"String urlLink = request.getParameter(\urlLink\""); response.sendRedirect(urlLink); // Sample 14""","String urlLink = request.getParameter(\urlLink\""); if(urlLink != null && urlLink.startsWith(\""/secureArea\"")) { response.sendRedirect(urlLink); } else { response.sendRedirect(\""/denied\""); } // Sample 14"""
Java,Unvalidated Redirects,"String file = request.getParameter(\file\""); response.sendRedirect(file); // Sample 15""","String file = request.getParameter(\file\""); if(file != null && file.matches(\""^/[A-Za-z]+\\.html$\"")) { response.sendRedirect(file); } else { response.sendRedirect(\""/errorPage\""); } // Sample 15"""
Java,Unvalidated Redirects,"String nextUrl = request.getParameter(\nextUrl\""); response.sendRedirect(nextUrl); // Sample 16""","String nextUrl = request.getParameter(\nextUrl\""); if(nextUrl != null && nextUrl.startsWith(\""/section\"")) { response.sendRedirect(nextUrl); } else { response.sendRedirect(\""/fallback\""); } // Sample 16"""
Java,Unvalidated Redirects,"String target = request.getParameter(\target\""); response.sendRedirect(target); // Sample 17""","String target = request.getParameter(\target\""); if(target != null && target.matches(\""^/([a-z]+)(/[a-z0-9]+)*$\"")) { response.sendRedirect(target); } else { response.sendRedirect(\""/default\""); } // Sample 17"""
Java,Unvalidated Redirects,"String route = request.getParameter(\route\""); response.sendRedirect(route); // Sample 18""","String route = request.getParameter(\route\""); if(route != null && route.contains(\""/safe/\"")) { response.sendRedirect(route); } else { response.sendRedirect(\""/error\""); } // Sample 18"""
Java,Unvalidated Redirects,"String access = request.getParameter(\access\""); response.sendRedirect(access); // Sample 19""","String access = request.getParameter(\access\""); if(access != null && access.startsWith(\""/member\"")) { response.sendRedirect(access); } else { response.sendRedirect(\""/login\""); } // Sample 19"""
Java,Unvalidated Redirects,"String pageUrl = request.getParameter(\pageUrl\""); response.sendRedirect(pageUrl); // Sample 20""","String pageUrl = request.getParameter(\pageUrl\""); if(pageUrl != null && pageUrl.matches(\""^/page\\d+$\"")) { response.sendRedirect(pageUrl); } else { response.sendRedirect(\""/error\""); } // Sample 20"""
Java,Unvalidated Redirects,"String redirectPage = request.getParameter(\redirectPage\""); response.sendRedirect(redirectPage); // Sample 21""","String redirectPage = request.getParameter(\redirectPage\""); if(redirectPage != null && redirectPage.startsWith(\""/portal\"")) { response.sendRedirect(redirectPage); } else { response.sendRedirect(\""/default\""); } // Sample 21"""
Java,Unvalidated Redirects,"String resourceLink = request.getParameter(\resourceLink\""); response.sendRedirect(resourceLink); // Sample 22""","String resourceLink = request.getParameter(\resourceLink\""); if(resourceLink != null && resourceLink.matches(\""^/resources/\\w+$\"")) { response.sendRedirect(resourceLink); } else { response.sendRedirect(\""/error\""); } // Sample 22"""
Java,Unvalidated Redirects,"String customUrl = request.getParameter(\customUrl\""); response.sendRedirect(customUrl); // Sample 23""","String customUrl = request.getParameter(\customUrl\""); if(customUrl != null && customUrl.startsWith(\""/custom\"")) { response.sendRedirect(customUrl); } else { response.sendRedirect(\""/home\""); } // Sample 23"""
Java,Unvalidated Redirects,"String linkParam = request.getParameter(\linkParam\""); response.sendRedirect(linkParam); // Sample 24""","String linkParam = request.getParameter(\linkParam\""); if(linkParam != null && linkParam.matches(\""^/link/\\d+$\"")) { response.sendRedirect(linkParam); } else { response.sendRedirect(\""/error\""); } // Sample 24"""
Java,Unvalidated Redirects,"String destValue = request.getParameter(\destValue\""); response.sendRedirect(destValue); // Sample 25""","String destValue = request.getParameter(\destValue\""); if(destValue != null && destValue.startsWith(\""/dest\"")) { response.sendRedirect(destValue); } else { response.sendRedirect(\""/notFound\""); } // Sample 25"""
C#,Unvalidated Redirects,"string dest = Request.QueryString[\dest\""]; Response.Redirect(dest); // Sample 1""","string dest = Request.QueryString[\dest\""]; if(!string.IsNullOrEmpty(dest) && dest.StartsWith(\""/\"")) { Response.Redirect(dest); } else { Response.Redirect(\""/error\""); } // Sample 1"""
C#,Unvalidated Redirects,"string url = Request.QueryString[\url\""]; Response.Redirect(url); // Sample 2""","string url = Request.QueryString[\url\""]; if(!string.IsNullOrEmpty(url) && url.StartsWith(\""/secure\"")) { Response.Redirect(url); } else { Response.Redirect(\""/default\""); } // Sample 2"""
C#,Unvalidated Redirects,"string target = Request.QueryString[\target\""]; Response.Redirect(target); // Sample 3""","string target = Request.QueryString[\target\""]; if(!string.IsNullOrEmpty(target) && target.Contains(\""/user\"")) { Response.Redirect(target); } else { Response.Redirect(\""/error\""); } // Sample 3"""
C#,Unvalidated Redirects,"string nextPage = Request.QueryString[\nextPage\""]; Response.Redirect(nextPage); // Sample 4""","string nextPage = Request.QueryString[\nextPage\""]; if(!string.IsNullOrEmpty(nextPage) && nextPage.StartsWith(\""/portal\"")) { Response.Redirect(nextPage); } else { Response.Redirect(\""/home\""); } // Sample 4"""
C#,Unvalidated Redirects,"string redirectUrl = Request.QueryString[\redirectUrl\""]; Response.Redirect(redirectUrl); // Sample 5""","string redirectUrl = Request.QueryString[\redirectUrl\""]; if(!string.IsNullOrEmpty(redirectUrl) && redirectUrl.StartsWith(\""/app\"")) { Response.Redirect(redirectUrl); } else { Response.Redirect(\""/error\""); } // Sample 5"""
C#,Unvalidated Redirects,"string link = Request.QueryString[\link\""]; Response.Redirect(link); // Sample 6""","string link = Request.QueryString[\link\""]; if(!string.IsNullOrEmpty(link) && System.Text.RegularExpressions.Regex.IsMatch(link, @\""^/[A-Za-z0-9/_-]+$\"")) { Response.Redirect(link); } else { Response.Redirect(\""/default\""); } // Sample 6"""
C#,Unvalidated Redirects,"string uri = Request.QueryString[\uri\""]; Response.Redirect(uri); // Sample 7""","string uri = Request.QueryString[\uri\""]; if(!string.IsNullOrEmpty(uri) && uri.StartsWith(\""/secureArea\"")) { Response.Redirect(uri); } else { Response.Redirect(\""/error\""); } // Sample 7"""
C#,Unvalidated Redirects,"string page = Request.QueryString[\page\""]; Response.Redirect(page); // Sample 8""","string page = Request.QueryString[\page\""]; if(!string.IsNullOrEmpty(page) && page.Length < 100 && page.StartsWith(\""/\"")) { Response.Redirect(page); } else { Response.Redirect(\""/fallback\""); } // Sample 8"""
C#,Unvalidated Redirects,"string destination = Request.QueryString[\destination\""]; Response.Redirect(destination); // Sample 9""","string destination = Request.QueryString[\destination\""]; if(!string.IsNullOrEmpty(destination) && destination.StartsWith(\""/profile\"")) { Response.Redirect(destination); } else { Response.Redirect(\""/error\""); } // Sample 9"""
C#,Unvalidated Redirects,"string forward = Request.QueryString[\forward\""]; Response.Redirect(forward); // Sample 10""","string forward = Request.QueryString[\forward\""]; if(!string.IsNullOrEmpty(forward) && forward.StartsWith(\""/dashboard\"")) { Response.Redirect(forward); } else { Response.Redirect(\""/login\""); } // Sample 10"""
C#,Unvalidated Redirects,"string destPath = Request.QueryString[\destPath\""]; Response.Redirect(destPath); // Sample 11""","string destPath = Request.QueryString[\destPath\""]; if(!string.IsNullOrEmpty(destPath) && destPath.StartsWith(\""/resource\"")) { Response.Redirect(destPath); } else { Response.Redirect(\""/error\""); } // Sample 11"""
C#,Unvalidated Redirects,"string targetPage = Request.QueryString[\targetPage\""]; Response.Redirect(targetPage); // Sample 12""","string targetPage = Request.QueryString[\targetPage\""]; if(!string.IsNullOrEmpty(targetPage) && targetPage.StartsWith(\""/portal\"")) { Response.Redirect(targetPage); } else { Response.Redirect(\""/default\""); } // Sample 12"""
C#,Unvalidated Redirects,"string nextLink = Request.QueryString[\nextLink\""]; Response.Redirect(nextLink); // Sample 13""","string nextLink = Request.QueryString[\nextLink\""]; if(!string.IsNullOrEmpty(nextLink) && System.Text.RegularExpressions.Regex.IsMatch(nextLink, @\""^/\\w+(\\/\\w+)*$\"")) { Response.Redirect(nextLink); } else { Response.Redirect(\""/fallback\""); } // Sample 13"""
C#,Unvalidated Redirects,"string route = Request.QueryString[\route\""]; Response.Redirect(route); // Sample 14""","string route = Request.QueryString[\route\""]; if(!string.IsNullOrEmpty(route) && route.Contains(\""/safe/\"")) { Response.Redirect(route); } else { Response.Redirect(\""/error\""); } // Sample 14"""
C#,Unvalidated Redirects,"string pageUrl = Request.QueryString[\pageUrl\""]; Response.Redirect(pageUrl); // Sample 15""","string pageUrl = Request.QueryString[\pageUrl\""]; if(!string.IsNullOrEmpty(pageUrl) && pageUrl.StartsWith(\""/view\"")) { Response.Redirect(pageUrl); } else { Response.Redirect(\""/default\""); } // Sample 15"""
C#,Unvalidated Redirects,"string urlParam = Request.QueryString[\urlParam\""]; Response.Redirect(urlParam); // Sample 16""","string urlParam = Request.QueryString[\urlParam\""]; if(!string.IsNullOrEmpty(urlParam) && urlParam.Length < 80 && urlParam.StartsWith(\""/\"")) { Response.Redirect(urlParam); } else { Response.Redirect(\""/error\""); } // Sample 16"""
C#,Unvalidated Redirects,"string destUrl = Request.QueryString[\destUrl\""]; Response.Redirect(destUrl); // Sample 17""","string destUrl = Request.QueryString[\destUrl\""]; if(!string.IsNullOrEmpty(destUrl) && destUrl.StartsWith(\""/home\"")) { Response.Redirect(destUrl); } else { Response.Redirect(\""/error\""); } // Sample 17"""
C#,Unvalidated Redirects,"string finalLink = Request.QueryString[\finalLink\""]; Response.Redirect(finalLink); // Sample 18""","string finalLink = Request.QueryString[\finalLink\""]; if(!string.IsNullOrEmpty(finalLink) && System.Text.RegularExpressions.Regex.IsMatch(finalLink, @\""^/\\w+\\.?\\w*$\"")) { Response.Redirect(finalLink); } else { Response.Redirect(\""/error\""); } // Sample 18"""
C#,Unvalidated Redirects,"string fileParam = Request.QueryString[\fileParam\""]; Response.Redirect(fileParam); // Sample 19""","string fileParam = Request.QueryString[\fileParam\""]; if(!string.IsNullOrEmpty(fileParam) && fileParam.EndsWith(\"".html\"")) { Response.Redirect(fileParam); } else { Response.Redirect(\""/default\""); } // Sample 19"""
C#,Unvalidated Redirects,"string nextUrl = Request.QueryString[\nextUrl\""]; Response.Redirect(nextUrl); // Sample 20""","string nextUrl = Request.QueryString[\nextUrl\""]; if(!string.IsNullOrEmpty(nextUrl) && nextUrl.StartsWith(\""/section\"")) { Response.Redirect(nextUrl); } else { Response.Redirect(\""/error\""); } // Sample 20"""
C#,Unvalidated Redirects,"string forward = Request.QueryString[\forward\""]; Response.Redirect(forward); // Sample 21""","string forward = Request.QueryString[\forward\""]; if(!string.IsNullOrEmpty(forward) && forward.StartsWith(\""/redirect\"")) { Response.Redirect(forward); } else { Response.Redirect(\""/default\""); } // Sample 21"""
C#,Unvalidated Redirects,"string gotoPage = Request.QueryString[\gotoPage\""]; Response.Redirect(gotoPage); // Sample 22""","string gotoPage = Request.QueryString[\gotoPage\""]; if(!string.IsNullOrEmpty(gotoPage) && gotoPage.StartsWith(\""/page\"")) { Response.Redirect(gotoPage); } else { Response.Redirect(\""/error\""); } // Sample 22"""
C#,Unvalidated Redirects,"string redirectPath = Request.QueryString[\redirectPath\""]; Response.Redirect(redirectPath); // Sample 23""","string redirectPath = Request.QueryString[\redirectPath\""]; if(!string.IsNullOrEmpty(redirectPath) && redirectPath.StartsWith(\""/logic\"")) { Response.Redirect(redirectPath); } else { Response.Redirect(\""/fallback\""); } // Sample 23"""
C#,Unvalidated Redirects,"string customLink = Request.QueryString[\customLink\""]; Response.Redirect(customLink); // Sample 24""","string customLink = Request.QueryString[\customLink\""]; if(!string.IsNullOrEmpty(customLink) && customLink.StartsWith(\""/custom\"")) { Response.Redirect(customLink); } else { Response.Redirect(\""/error\""); } // Sample 24"""
C#,Unvalidated Redirects,"string destPage = Request.QueryString[\destPage\""]; Response.Redirect(destPage); // Sample 25""","string destPage = Request.QueryString[\destPage\""]; if(!string.IsNullOrEmpty(destPage) && destPage.StartsWith(\""/dest\"")) { Response.Redirect(destPage); } else { Response.Redirect(\""/default\""); } // Sample 25"""
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
,,,
Java,Improper Input Validation,"String userAge = request.getParameter(""age""); int age = Integer.parseInt(userAge);","String userAge = request.getParameter(""age""); if(userAge != null && userAge.matches(""\d+"")) { int age = Integer.parseInt(userAge); }"
Java,Improper Input Validation,"String amount = request.getParameter(""amount""); double amt = Double.parseDouble(amount);","String amount = request.getParameter(""amount""); if(amount != null && amount.matches(""\d+(\.\d{1,2})?"")) { double amt = Double.parseDouble(amount); }"
Java,Improper Input Validation,"String email = request.getParameter(""email"");","String email = request.getParameter(""email""); if(email != null && email.matches(""^[\w.-]+@[\w.-]+\.\w+$"")) { ... }"
Java,Improper Input Validation,"int index = Integer.parseInt(request.getParameter(""index"")); list.get(index);","String idx = request.getParameter(""index""); if(idx != null && idx.matches(""\d+"")) { int index = Integer.parseInt(idx); if(index >= 0 && index < list.size()) { list.get(index); } }"
Java,Improper Input Validation,"File file = new File(request.getParameter(""fileName""));","String fileName = request.getParameter(""fileName""); if(fileName != null && fileName.matches(""[\w\-.]+"")) { File file = new File(fileName); }"
Java,Improper Input Validation,"response.sendRedirect(request.getParameter(""url""));","String url = request.getParameter(""url""); if(url != null && url.startsWith(""/"")) { response.sendRedirect(url); }"
Java,Improper Input Validation,"String role = request.getParameter(""role"");","String role = request.getParameter(""role""); if(role != null && (role.equals(""admin"") || role.equals(""user""))) { ... }"
Java,Improper Input Validation,"String input = request.getParameter(""input""); writer.write(input);","String input = request.getParameter(""input""); if(input != null && input.length() < 256) { writer.write(input); }"
Java,Improper Input Validation,"int pageSize = Integer.parseInt(request.getParameter(""size""));","String sizeStr = request.getParameter(""size""); if(sizeStr != null && sizeStr.matches(""\d{1,2}"")) { int pageSize = Integer.parseInt(sizeStr); }"
Java,Improper Input Validation,"String format = request.getParameter(""format"");","String format = request.getParameter(""format""); if(format != null && Arrays.asList(""json"",""xml"").contains(format)) { ... }"
C#,Improper Input Validation,"int age = int.Parse(Request.QueryString[""age""]);","string ageStr = Request.QueryString[""age""]; if(int.TryParse(ageStr, out int age)) { ... }"
C#,Improper Input Validation,"string email = Request.QueryString[""email""];","string email = Request.QueryString[""email""]; if(Regex.IsMatch(email, @""^[\w.-]+@[\w.-]+\.\w+$"")) { ... }"
C#,Improper Input Validation,"int index = Convert.ToInt32(Request.QueryString[""index""]);","if(int.TryParse(Request.QueryString[""index""], out int index) && index >= 0) { ... }"
C#,Improper Input Validation,"string role = Request.QueryString[""role""];","string role = Request.QueryString[""role""]; if(role == ""admin"" || role == ""user"") { ... }"
C#,Improper Input Validation,"double amount = double.Parse(Request.QueryString[""amt""]);","string amtStr = Request.QueryString[""amt""]; if(double.TryParse(amtStr, out double amount)) { ... }"
C#,Improper Input Validation,"string zip = Request.QueryString[""zip""];","if(Regex.IsMatch(zip, @""^\d{5}$"")) { ... }"
C#,Improper Input Validation,"string path = Request.QueryString[""path""];","string path = Request.QueryString[""path""]; if(path.StartsWith(""/"") && path.Length < 100) { ... }"
C#,Improper Input Validation,"int year = Convert.ToInt32(Request.QueryString[""year""]);","if(int.TryParse(Request.QueryString[""year""], out int year) && year >= 1900 && year <= 2100) { ... }"
C#,Improper Input Validation,"string token = Request.QueryString[""token""];",if(!string.IsNullOrEmpty(token) && token.Length == 32) { ... }
C#,Improper Input Validation,"string status = Request.QueryString[""status""];","if(new[] { ""active"", ""inactive"" }.Contains(status)) { ... }"
Java,Improper Input Validation,"int quantity = Integer.parseInt(request.getParameter(""quantity"")); if(quantity > 100) { applyDiscount(); }","String quantityStr = request.getParameter(""quantity""); try { int quantity = Integer.parseInt(quantityStr); if(quantity > 0 && quantity <= 100) { applyDiscount(); } } catch (NumberFormatException e) { logError(); }"
Java,Improper Input Validation,"String age = request.getParameter(""age""); int a = Integer.parseInt(age);","String age = request.getParameter(""age""); try { int a = Integer.parseInt(age); } catch (NumberFormatException e) { response.sendError(400); }"
Java,Improper Input Validation,"String filename = request.getParameter(""file""); readFile(filename);","String filename = request.getParameter(""file""); if(filename.matches(""[a-zA-Z0-9_\.]+"")) { readFile(filename); } else { logInvalidAttempt(); }"
Java,Improper Input Validation,"double amount = Double.parseDouble(request.getParameter(""amount""));","String amtStr = request.getParameter(""amount""); try { double amount = Double.parseDouble(amtStr); } catch (NumberFormatException e) { handleError(); }"
Java,Improper Input Validation,"String input = request.getParameter(""input""); process(input);","String input = request.getParameter(""input""); if(input != null && input.length() < 50) { process(input); } else { reject(); }"
Java,Improper Input Validation,"int id = Integer.parseInt(request.getParameter(""id"")); getUser(id);","String idStr = request.getParameter(""id""); if(idStr.matches(""\\d+"")) { int id = Integer.parseInt(idStr); getUser(id); } else { logInvalid(); }"
Java,Improper Input Validation,"String email = request.getParameter(""email""); register(email);","String email = request.getParameter(""email""); if(email != null && email.contains(""@"")) { register(email); } else { returnError(); }"
Java,Improper Input Validation,"String code = request.getParameter(""code""); verifyCode(code);","String code = request.getParameter(""code""); if(code.matches(""[A-Z0-9]{6}"")) { verifyCode(code); } else { errorOut(); }"
Java,Improper Input Validation,"int year = Integer.parseInt(request.getParameter(""year""));","String yearStr = request.getParameter(""year""); if(yearStr != null && yearStr.matches(""\\d{4}"")) { int year = Integer.parseInt(yearStr); } else { errorOut(); }"
Java,Improper Input Validation,"String token = request.getParameter(""token""); processToken(token);","String token = request.getParameter(""token""); if(token != null && token.length() == 32) { processToken(token); } else { blockRequest(); }"
C#,Improper Input Validation,"int age = int.Parse(Request.QueryString[""age""]);","if(int.TryParse(Request.QueryString[""age""], out int age)) { /* process */ } else { Response.Write(""Invalid input""); }"
C#,Improper Input Validation,"string file = Request.QueryString[""file""]; ReadFile(file);","string file = Request.QueryString[""file""]; if(System.Text.RegularExpressions.Regex.IsMatch(file, @""^[a-zA-Z0-9_\.]+$"")) { ReadFile(file); } else { Log(""Invalid file""); }"
C#,Improper Input Validation,"string user = Request.Form[""user""]; DoLogin(user);","string user = Request.Form[""user""]; if(!string.IsNullOrEmpty(user) && user.Length < 50) { DoLogin(user); } else { Response.Write(""Invalid user""); }"
C#,Improper Input Validation,"int year = Convert.ToInt32(Request.QueryString[""year""]);","string yearStr = Request.QueryString[""year""]; if(int.TryParse(yearStr, out int year) && year > 1900 && year < 2100) { /* valid */ } else { /* reject */ }"
C#,Improper Input Validation,"double price = double.Parse(Request.QueryString[""price""]);","if(double.TryParse(Request.QueryString[""price""], out double price)) { /* process */ } else { Log(""Invalid price""); }"
C#,Improper Input Validation,"string role = Request.Form[""role""]; AssignRole(role);","string role = Request.Form[""role""]; if(role == ""admin"" || role == ""user"") { AssignRole(role); } else { Reject(); }"
C#,Improper Input Validation,"string lang = Request.QueryString[""lang""]; SetLanguage(lang);","string lang = Request.QueryString[""lang""]; if(lang == ""en"" || lang == ""fr"") { SetLanguage(lang); } else { SetLanguage(""en""); }"
C#,Improper Input Validation,"int page = int.Parse(Request.QueryString[""page""]);","string pageStr = Request.QueryString[""page""]; if(int.TryParse(pageStr, out int page) && page > 0) { LoadPage(page); } else { ShowError(); }"
C#,Improper Input Validation,"string zip = Request.Form[""zip""]; ValidateZip(zip);","string zip = Request.Form[""zip""]; if(!string.IsNullOrWhiteSpace(zip) && zip.Length == 6) { ValidateZip(zip); } else { Reject(); }"
C#,Improper Input Validation,"string email = Request.QueryString[""email""]; Register(email);","string email = Request.QueryString[""email""]; if(email != null && email.Contains(""@"")) { Register(email); } else { Reject(); }"
Java,SQL Injection,"String query = ""SELECT * FROM users WHERE id = "" + userId;
Statement stmt = conn.createStatement();
ResultSet rs = stmt.executeQuery(query);","String query = ""SELECT * FROM users WHERE id = ?"";
PreparedStatement stmt = conn.prepareStatement(query);
stmt.setInt(1, userId);
ResultSet rs = stmt.executeQuery();"
Java,SQL Injection,"String sql = ""DELETE FROM orders WHERE orderId="" + request.getParameter(""orderId"");
Statement st = conn.createStatement();
st.executeUpdate(sql);","String sql = ""DELETE FROM orders WHERE orderId=?"";
PreparedStatement st = conn.prepareStatement(sql);
st.setInt(1, Integer.parseInt(request.getParameter(""orderId"")));
st.executeUpdate();"
Java,SQL Injection,"String sql = ""INSERT INTO accounts (name) VALUES ('"" + userName + ""')"";
Statement stmt = conn.createStatement();
stmt.executeUpdate(sql);","String sql = ""INSERT INTO accounts (name) VALUES (?)"";
PreparedStatement stmt = conn.prepareStatement(sql);
stmt.setString(1, userName);
stmt.executeUpdate();"
Java,SQL Injection,"String sql = ""UPDATE products SET price="" + price + "" WHERE id="" + productId;
Statement stmt = conn.createStatement();
stmt.executeUpdate(sql);","String sql = ""UPDATE products SET price=? WHERE id=?"";
PreparedStatement stmt = conn.prepareStatement(sql);
stmt.setDouble(1, price);
stmt.setInt(2, productId);
stmt.executeUpdate();"
Java,SQL Injection,"String sql = ""SELECT * FROM login WHERE username='"" + uname + ""' AND password='"" + pwd + ""'"";
Statement st = conn.createStatement();
ResultSet rs = st.executeQuery(sql);","String sql = ""SELECT * FROM login WHERE username=? AND password=?"";
PreparedStatement st = conn.prepareStatement(sql);
st.setString(1, uname);
st.setString(2, pwd);
ResultSet rs = st.executeQuery();"
C#,SQL Injection,"string query = ""SELECT * FROM users WHERE username = '"" + username + ""'"";
SqlCommand cmd = new SqlCommand(query, conn);
cmd.ExecuteReader();","string query = ""SELECT * FROM users WHERE username = @username"";
SqlCommand cmd = new SqlCommand(query, conn);
cmd.Parameters.AddWithValue(""@username"", username);
cmd.ExecuteReader();"
C#,SQL Injection,"string sql = ""UPDATE users SET email = '"" + email + ""' WHERE id = "" + userId;
SqlCommand cmd = new SqlCommand(sql, conn);
cmd.ExecuteNonQuery();","string sql = ""UPDATE users SET email = @Email WHERE id = @UserId"";
SqlCommand cmd = new SqlCommand(sql, conn);
cmd.Parameters.AddWithValue(""@Email"", email);
cmd.Parameters.AddWithValue(""@UserId"", userId);
cmd.ExecuteNonQuery();"
C#,SQL Injection,"string sql = ""DELETE FROM logins WHERE session='"" + sessionId + ""'"";
SqlCommand cmd = new SqlCommand(sql, conn);
cmd.ExecuteNonQuery();","string sql = ""DELETE FROM logins WHERE session=@sessionId"";
SqlCommand cmd = new SqlCommand(sql, conn);
cmd.Parameters.AddWithValue(""@sessionId"", sessionId);
cmd.ExecuteNonQuery();"
C#,SQL Injection,"string query = ""INSERT INTO employees (name) VALUES ('"" + empName + ""')"";
SqlCommand cmd = new SqlCommand(query, conn);
cmd.ExecuteNonQuery();","string query = ""INSERT INTO employees (name) VALUES (@name)"";
SqlCommand cmd = new SqlCommand(query, conn);
cmd.Parameters.AddWithValue(""@name"", empName);
cmd.ExecuteNonQuery();"
C#,SQL Injection,"string query = ""SELECT * FROM orders WHERE orderId="" + orderId;
SqlCommand cmd = new SqlCommand(query, conn);
SqlDataReader reader = cmd.ExecuteReader();","string query = ""SELECT * FROM orders WHERE orderId=@orderId"";
SqlCommand cmd = new SqlCommand(query, conn);
cmd.Parameters.AddWithValue(""@orderId"", orderId);
SqlDataReader reader = cmd.ExecuteReader();"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput0)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput0)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput1)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput1)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput2)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput2)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput3)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput3)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput4)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput4)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput5)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput5)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput6)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput6)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput7)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput7)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput8)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput8)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput9)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput9)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput10)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput10)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput11)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput11)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput12)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput12)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput13)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput13)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput14)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput14)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput15)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput15)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput16)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput16)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput17)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput17)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput18)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput18)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput19)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput19)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput20)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput20)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput21)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput21)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput22)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput22)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput23)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput23)));"
Java,XML External Entity (XXE),"DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput24)));","DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(""http://apache.org/xml/features/disallow-doctype-decl"", true);
dbf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);
dbf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(new InputSource(new StringReader(xmlInput24)));"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput0), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput0), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput1), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput1), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput2), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput2), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput3), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput3), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput4), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput4), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput5), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput5), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput6), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput6), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput7), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput7), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput8), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput8), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput9), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput9), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput10), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput10), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput11), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput11), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput12), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput12), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput13), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput13), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput14), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput14), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput15), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput15), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput16), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput16), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput17), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput17), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput18), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput18), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput19), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput19), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput20), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput20), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput21), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput21), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput22), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput22), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput23), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput23), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
C#,XML External Entity (XXE),"XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Parse;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput24), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);","XmlReaderSettings settings = new XmlReaderSettings();
settings.DtdProcessing = DtdProcessing.Prohibit;
settings.XmlResolver = null;
XmlReader reader = XmlReader.Create(new StringReader(xmlInput24), settings);
XmlDocument doc = new XmlDocument();
doc.Load(reader);"
Java,"SQL Injection,Cross-Site Request Forgery (CSRF)","String username = request.getParameter(""user"");
String query = ""SELECT * FROM users WHERE username='"" + username + ""'"";
Statement stmt = connection.createStatement();
ResultSet rs = stmt.executeQuery(query);

out.println(""<form method='post' action='/transfer'>"");
out.println(""<input type='hidden' name='amount' value='10000'>"");
out.println(""<input type='submit' value='Transfer Funds'>"");
out.println(""</form>"");","PreparedStatement pstmt = connection.prepareStatement(""SELECT * FROM users WHERE username = ?"");
pstmt.setString(1, request.getParameter(""user""));
ResultSet rs = pstmt.executeQuery();

String csrfToken = CSRFUtil.generateToken(session);
out.println(""<form method='post' action='/transfer'>"");
out.println(""<input type='hidden' name='amount' value='10000'>"");
out.println(""<input type='hidden' name='csrf_token' value='"" + csrfToken + ""'>"");
out.println(""<input type='submit' value='Transfer Funds'>"");
out.println(""</form>"");"
Java,"Broken Authentication,Hardcoded Secrets","String adminUser = ""admin"";
String adminPass = ""password123"";
if (username.equals(adminUser) && password.equals(adminPass)) {
    session.setAttribute(""user"", ""admin"");
}","if (AuthService.validateCredentials(username, password)) {
    session.setAttribute(""user"", username);
} else {
    throw new SecurityException(""Invalid credentials"");
}"
Java,"Improper Input Validation,Command Injection","String filename = request.getParameter(""file"");
Runtime.getRuntime().exec(""rm "" + filename);","String filename = request.getParameter(""file"");
if (!filename.matches(""[a-zA-Z0-9._-]+"")) {
    throw new IllegalArgumentException(""Invalid filename"");
}
ProcessBuilder pb = new ProcessBuilder(""rm"", filename);
pb.start();"
Java,"Missing Authorization,Sensitive Data Exposure","String userId = request.getParameter(""userId"");
ResultSet rs = statement.executeQuery(""SELECT * FROM users WHERE id="" + userId);
while (rs.next()) {
    out.println(""Name: "" + rs.getString(""name""));
    out.println(""SSN: "" + rs.getString(""ssn""));
}","String userId = request.getParameter(""userId"");
String currentUser = (String) session.getAttribute(""user"");
if (!AccessControlService.hasPermission(currentUser, userId)) {
    throw new SecurityException(""Unauthorized access"");
}

PreparedStatement ps = connection.prepareStatement(""SELECT name FROM users WHERE id=?"");
ps.setString(1, userId);
ResultSet rs = ps.executeQuery();
while (rs.next()) {
    out.println(""Name: "" + rs.getString(""name""));
}"
Java,"Insecure JWT Validation,Cross-Site Scripting (XSS)","String token = request.getParameter(""token"");
String payload = JWTUtils.decodeWithoutValidation(token);  
out.println(""<div>Welcome "" + payload + ""</div>"");  ","String token = request.getParameter(""token"");
if (JWTUtils.verifySignature(token)) {
    String payload = HTMLUtil.escape(JWTUtils.getPayload(token));
    out.println(""<div>Welcome "" + payload + ""</div>"");
} else {
    throw new SecurityException(""Invalid token"");
}"
Java,"Unvalidated Redirects,Path Traversal","String target = request.getParameter(""url"");
response.sendRedirect(target);

String filePath = ""/data/"" + request.getParameter(""file"");
FileInputStream fis = new FileInputStream(filePath);","String target = request.getParameter(""url"");
if (!URLValidator.isSafeDomain(target)) {
    throw new IllegalArgumentException(""Unsafe redirect"");
}
response.sendRedirect(target);

String file = request.getParameter(""file"");
if (file.contains("".."")) {
    throw new SecurityException(""Path traversal attempt detected"");
}
FileInputStream fis = new FileInputStream(""/data/"" + file);"
C#,"SQL Injection,Cross-Site Request Forgery (CSRF)","string username = Request.QueryString[""user""];
string query = ""SELECT * FROM Users WHERE Username = '"" + username + ""'"";
SqlCommand cmd = new SqlCommand(query, connection);
SqlDataReader reader = cmd.ExecuteReader();

Response.Write(""<form method='post' action='/TransferFunds'>"");
Response.Write(""<input type='hidden' name='amount' value='1000' />"");
Response.Write(""<input type='submit' value='Transfer' />"");
Response.Write(""</form>"");","string username = Request.QueryString[""user""];
SqlCommand cmd = new SqlCommand(""SELECT * FROM Users WHERE Username = @username"", connection);
cmd.Parameters.AddWithValue(""@username"", username);
SqlDataReader reader = cmd.ExecuteReader();

string csrfToken = AntiForgery.GetTokens(null, out string cookieToken);
Response.Cookies.Add(new HttpCookie(""CSRF-TOKEN"", cookieToken));
Response.Write(""<form method='post' action='/TransferFunds'>"");
Response.Write(""<input type='hidden' name='amount' value='1000' />"");
Response.Write(""<input type='hidden' name='__RequestVerificationToken' value='"" + csrfToken + ""' />"");
Response.Write(""<input type='submit' value='Transfer' />"");
Response.Write(""</form>"");"
C#,"Hardcoded Secrets,Broken Authentication","string adminUser = ""admin"";
string adminPass = ""password123"";

if (txtUsername.Text == adminUser && txtPassword.Text == adminPass)
{
    Session[""User""] = ""admin"";
}","if (AuthService.ValidateUser(txtUsername.Text, txtPassword.Text))
{
    Session[""User""] = txtUsername.Text;
}
else
{
    throw new UnauthorizedAccessException(""Invalid login attempt"");
}"
C#,"Improper Input Validation,Command Injection","string filename = Request.QueryString[""file""];
System.Diagnostics.Process.Start(""cmd.exe"", ""/C del "" + filename);","string filename = Request.QueryString[""file""];
if (!Regex.IsMatch(filename, @""^[\w\-. ]+$""))
{
    throw new ArgumentException(""Invalid filename"");
}
System.Diagnostics.ProcessStartInfo psi = new System.Diagnostics.ProcessStartInfo(""cmd.exe"", $""/C del \""{filename}\"""");
psi.UseShellExecute = false;
System.Diagnostics.Process.Start(psi);"
C#,"Missing Authorization,Sensitive Data Exposure","string userId = Request.QueryString[""id""];
SqlCommand cmd = new SqlCommand(""SELECT * FROM Users WHERE Id="" + userId, connection);
SqlDataReader reader = cmd.ExecuteReader();

while (reader.Read())
{
    Response.Write(""SSN: "" + reader[""SSN""]);
}","string userId = Request.QueryString[""id""];
if (!AuthorizationService.UserCanAccess(Session[""User""].ToString(), userId))
{
    throw new UnauthorizedAccessException();
}
SqlCommand cmd = new SqlCommand(""SELECT Name FROM Users WHERE Id = @id"", connection);
cmd.Parameters.AddWithValue(""@id"", userId);
SqlDataReader reader = cmd.ExecuteReader();

while (reader.Read())
{
    Response.Write(""Name: "" + reader[""Name""]);
}"
C#,"Insecure JWT Validation,Cross-Site Scripting (XSS)","string token = Request.QueryString[""token""];
string payload = JwtHelper.Decode(token); 
Response.Write(""<div>Welcome "" + payload + ""</div>"");","string token = Request.QueryString[""token""];
if (JwtHelper.VerifySignature(token))
{
    string payload = System.Web.HttpUtility.HtmlEncode(JwtHelper.GetPayload(token));
    Response.Write(""<div>Welcome "" + payload + ""</div>"");
}
else
{
    throw new UnauthorizedAccessException(""Invalid token"");
}"